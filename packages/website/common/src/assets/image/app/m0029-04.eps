%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: m0029-04.eps
%%Creator: Adobe Illustrator(R) 23.0
%%For:  
%%CreationDate: 12/5/2018
%%BoundingBox: 0 0 1200 1000
%%HiResBoundingBox: 0 0 1200 1000
%%CropBox: 0 0 1200 1000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.0.1 x540 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 108 8%%BeginData: 29141 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45222222214622222146222222462222224622462246224622462246
%224622462246224622462246224622462246224622462246224622462246
%224622462246224622462246464622464646224746462247464622474646
%224746462247464622474646224746462247464622474646224746462247
%464622474646224746462221222122212221222122212221222122212221
%222122212221222122212221222122222221462222214622222146222221
%462222224622222246224622462246224622462246224622462246224622
%462246224622462246224622462246224622462246224622462246224622
%462246224622462246224622462246224622462221222222212222222122
%222221222222214622222146222222462222224622462246224622462246
%224622462246224622462246224622462246224622462246224622462246
%224622462246224646462246464622464646224646462246464622464646
%224646462246464622464646224646462246464622464646224646212221
%222122212221222122212221222122212221222122212221222122212221
%222122212221222122212221222122222221462222214622222146222221
%462246214622462146224622462246224622462246224622462246224622
%462246224622462246224622462246224622462246224622462246224622
%462246224622212222222122222221462222214622222246222222462246
%224622462246224622462246224622462246224622462246224622462246
%224622462246224622462246224622462246224646462246464622474646
%224746462247464622474646224746462247464622474646224746462247
%464622474646224746462247462122212221222122212221222122212221
%222122212221222122212221222122212221222122212222222146222221
%462222214622222146222222462246224622462246224622462246224622
%462246224622462246224622462246224622462246224622462246224622
%462246224622462246224622462246224622462246222122212222222122
%222221222222212222222122222221462222214622222246222222462246
%224622462246224622462246224622462246224622462246224622462246
%224622462246224622462246224622464646224646462246464622464646
%224646462246464622464646224646462246464622464646224646462200
%222122212221222122212221222122212221222122212221222122212221
%222122212221222122212221222122212221222122212222222146222221
%462222214622222146224621462246214622462246224622462246224622
%462246224622462246224622462246224622462246224622462246224622
%462246224622462222222122222221222222212222222146222221462222
%224622222246224622462246224622462246224622462246224622462246
%224622462246224622462246224622462246224622462246224622464646
%224646462247464622474646224746462247464622474646224746462247
%464622474646224746462247464622212221222122212221222122212221
%222122212221222122212221222122212221222122212221222122212221
%222222214622222146222221462222214622222246224622462246224622
%462246224622462246224622462246224622462246224622462246224622
%462246224622462246224622462246224622462246224622212221222122
%212221222222212222222122222221222222212222222146222221462222
%224622222246224622462246224622462246224622462246224622462246
%224622462246224622462246224622462246224646462246464622464646
%224646462246464622464646224646462246464622464646224646462246
%462122002221220022212221222122212221222122212221222122212221
%222122212221222122212221222122212221222122212221222122212221
%222222214622222146222221462222214622462146224622462246224622
%462246224622462246224622462246224622462246224622462246224622
%462246224622462246222122212221222222212222222122222221222222
%214622222146222222462222224622462246224622462246224622462246
%224622462246224622462246224622462246224622462246224622462246
%224622462246464622464646224746462247464622474646224746462247
%464622474646224746462247464622474621222122212221222122212221
%222122212221222122212221222122212221222122212221222122212221
%222122212221222122222221462222214622222146222221462222224622
%462246224622462246224622462246224622462246224622462246224622
%462246224622462246224622462246224622462246224622462221222122
%212221222122212221222122222221222222212222222122222221462222
%214622222146222222462246224622462246224622462246224622462246
%224622462246224622462246224622462246224746724D46224622464646
%224646462246464622464646224646462246464622464646224646462246
%464622002221220022212200222122002221222122212221222122212221
%222122212221222122212221222122212221222122212221222122212221
%2221222122212221462222214622222146222221462222214622476B9D9C
%712246224622462246224622462246224622462246224622462246224622
%462246224622462246224622212221222122212222222122222221222222
%212222222122222221462222214622222246222222462246224622462246
%224622462246224622462246224622462246224622462246224622462246
%2246479696C59DC571462246224646462246464622474646224746462247
%464622474646224746462247464622474646220022212200222122212221
%222122212221222122212221222122212221222122212221222122212221
%22212221222122212221222147476B4D5B5A5A2246222221462222214622
%2221462222224622466C9D9C9D9CBF9C7122462246224622462246224622
%462246224622462246224622462246224622462246224622462246222122
%212221222122212221222122212221222222212222222122222221222222
%212222222146222221462222214622222246227190977F7F72725B5B2246
%224622462246224622462246224622466CBF9CC59DC59CC5714622462246
%224622462246464622464646224646462246464622464646224646462246
%464622464600220022002200222122002221220022212200222122212221
%2221222122212221222122212221222122212221222122212222966C9054
%7F6B6B476B54282122212221222246214622222146222221729C9D9C9D9C
%9D9C71224621462246224622462246224622462246224622462246224622
%462246224622462246224622462221222122212221222122212221222222
%212222222122222221222222212222222146222222462222224622222246
%224622979097787F6C966B726B7129462246224C224D4671224622462246
%22466CC59CC59DC59C9C4646224622462246224622464646224746462247
%464622474646224746462247464622474646224746212200222122002221
%220022212221222122212221222122212221222122212221222122212221
%22212221222122212221466C976C616B726B6B4771464D21222246224D47
%4D474622222146222221729C9D9CBF9C9D22462246224622462246224622
%462246224622462246224622462246224622462246224622462246224622
%212221222122212221222122212221222122212221222122222221222222
%21222222212222222122222221462222214646976C7F78966B726B714771
%4646224C467147726C7122462246224622466BC59D9D714D724622462246
%224622462246224622462246224646462246464622464646224646462246
%464622464646220022002100220022002200220022212200222122002221
%2200222122212221222122212221222122212221222122212221476C905A
%726B6B476B4747464D21464671476C6C724646212221222146226B9C7822
%222146222221462246214622462146224622462246224622462246224622
%462246224622462246224622462246222122212221222122212221222122
%21222122212222222122222221222222212222222146222221464C222246
%22222246229754856C726B726B714671467147716C966C976C4D46462246
%22462246224D2246224D2246224622462246224622462246224622462246
%464622474646224746462247464622474646224746462200222122002221
%220022212200222122002221222122212221222122212221222122212221
%222122214D21222122212221227873554FA8A278A27147464D47726C726C
%6C6C72474721462222214622222146224622462222224D2A292246224622
%462246224622462246224622462246224622462246224622462246224622
%462221222122212221222122212221222122212221222122212221222122
%2122222221222222212222222122222221222222215B559755A9FD05FFA9
%71966C726C966C726C72474622462246224622462246464C224622462955
%3130234D2246224622462246224622462246224646462246464622464646
%224646462246460021002200210022002100220022002221220022212200
%222122002221222122212221222122212221222122212221222122543155
%4F78FD05FF7D6C6C726C6C6C726C6C474D22222122212221222122214622
%2221462229313737372A2A22462146224621462246224622462246224622
%462246224622462246224622462221222122212221222122212221222122
%212221222122212221222222212222222122222221222222214622222146
%22222246557979A9FFFFFFA27D4D2A736C726C736C726C72474D22462246
%224622462246224C22462246295B315B3761375522462246224622462246
%224622464646224746462247464622474646224746002100220022002221
%220022212200222122002221220022212221222122212221222122212221
%2221222122212221222122212254547DFFFF4D224646312B726C6C6C726C
%6C6C4D46222146222221462222214622222146222A315B37373761312922
%462246224622462246224622462246224622462246224622462246224622
%212221222122212221222122212221222122212221222122212221222122
%212221222122222221222222212222222122224D2A55314D4C54314D4677
%31554E726C726C726C72477122462246224622462246224D224622462955
%315B37613D5B234622462246224622462246224622462246224646462246
%464622464646220022002100220021002200210022002200220022002221
%22002221220022212200222122212221222122212221222122214E31312B
%7F30302A2A224D2A31315548726C6C4772484D4622212221222122212221
%46222221222129313731373761304D222221462246214622462146224622
%462246224622462246224622462246222122212221222122212221222122
%212221222122212221222122212221222122222221222222212222222122
%224C2955315531553185787E4D543155315531726C726C726C7247712246
%2246224622462246224D22462246224E315B37613D5B2346224622462246
%224622462246224646462246464622474646224746462200220021002200
%210022002200222122002221220022212200222122002221222122212221
%22212221222122214C29313155313131553131315531313155313148726C
%6C4872486C46462122212221222146224622462222214622223061376130
%4D2222224622462246224622462246224622462246224622462246224622
%462200222122002221222122212221222122212221222122212221222122
%2122212221222122212221222122224C4D55315531553155315531553155
%31553155314F6C726C7248726C4D46462246224622462246224C22462246
%2246224637613D3722462246224622462246224622462246224622462246
%224622464646224646002100220021002200210022002100220021002200
%220022002200222122002221220022212200222122214747312B312B312B
%3131312B3131312B312B312A314E6C4772486C4772474721222122212221
%222146222221222122212222303030222221462222214622222146224621
%462246214622462246224622462246224622002221222122212221222122
%2122212221222122212221222122212221222122212221222122224C4672
%4772315531553155315531553155315531553155314F6C726C7248726C72
%47462246224622462246464D224622462246224622542246224622462246
%224622462246224622462246224622464646224646462247460021002200
%210022002100220021002200220022212200222122002221220022212200
%22212221464771477248312A312B312A3131312B312B312A312B312A314E
%6C4772486C47724747222221222122212221462222214622222146222221
%462222214622222146222222462246224622462246224622462246224622
%462246222122002221220022212200222122212221222122212221222122
%2122212221222122214C46716B716C726C7331312B553131315531312B55
%31312B5531312A4F6C7248724872487246462246222222462246224C2246
%224622462246224622462246224622462246224622462246224622462246
%224622462246224622462200210021002200210022002100220021002200
%2100220021002200220022002200222146467147716C726C6C48312A312A
%312A312A312A312A312A312A312A314872476C47724748474D4622212221
%222122214622222122212221222122214621222222214622222146222221
%462222214622462146224621462246224622462221220022212200222122
%21222122212221222122212221222122212221222128224D6B724D726C73
%6C726C552B312A552B312B5531312B552B312A552B312A72487248724872
%487247712246224622462246224D22462246224622462246224622462246
%224622462246224622462246224622462246224622462246464622002200
%210022002100220021002200210022002100220022002221220022212222
%716B4D6B726C6C6C726C6C2A312A2B2A312A312A312A312A312A312A312A
%2B4872486C47724748474D47222122212221222122222221222122222221
%462246214622222146222221462222224622222246224622462246224622
%462246224622002221220022212200222122002221220022212221222122
%212221222122467247726C726C726C726C726C4F2A312A312A312A312A31
%2A312A312A312A312A4E487248724872487247712222214622222246224C
%224622462246224622464646224622462246224622462246224622462246
%224622462246224622462246220021002100210021002100220021002200
%21002200210022002100220021004C6B6C6C726C6C48726C6C47722A2A2A
%2B2A2A2A312A2B2A312A2A2A2BFD042A474847484748474847484646216F
%462221222146222221222122212221222146212221222122212222222146
%222221462222214622222146224621462246214622002221220022212200
%22212221222122212221222122212221222122212222726B726C726C726C
%726C726C4E2A312A312A312A312A552A312A312A312A312A724872487248
%7272CBFFC493A1A19522462246224C224622462246224622464C46224622
%462246224622462246224622462246224622462246224622462246220021
%00220021002200210022002100220021002200210022002100220022004C
%47716C726C6C48726C6C487248FD0A2A2BFD082A2324232A024EA2FFC2C2
%A2FFA97E46222122214622222122212221222122214D2222214622222146
%222221462222214622222246224622462246224622462246220022002200
%2200222122002221220022212200222122002221222122212221714D726C
%726C726C726C7248722A2A2A2B2A2A2A312A2B2A312A2A2A2BFD042A232A
%0229A1C2A1FFA9FFFF5B555421462222224C222222462222224622462246
%224622462246224622462246224622462246224622462246224622462246
%220021002100210021002100210021002100220021002200210022002100
%220021464D6C6C4772486C4772486C472A2A2A08FD072A082A2A2A082A2A
%2A02232293A1FD04A95BA9A9315554222122212222222122212221222122
%212121222122212221222122212221222222214622222146222221462222
%214622462200220022212200222122002221220022212221222122212221
%2221222122214C6B726C726C726C726C724872FD072A2B2A2A2A2BFD062A
%299AA0A9FFFFFF7F7FA97FFF5B7F5B5422462222224C2246224622462246
%2228214C2246224622462246224622462246224622462246224622462246
%224622462200210021002200210022002100220021002200210022002100
%220021002200212172476C4872486C4772486C472A2A2A022A2A2A02FD07
%2A082A29BAA9FF5BA9FFFF55FF55A9FF55544D2122212221222222212221
%222122214646472122212221222222214622222146222221462222214622
%222246224622462246220022002200220022002200220022212200222122
%00222122002221220022214C6B726C7248726C724872487224FD102A9AA1
%FF7F7FFFFF7F85A95BFFA95B7F212222222146224C214622222146224690
%724746224622462246224622462246224622462246224622462246224622
%462246220021002100210021002100210021002100210021002100220021
%002200210022216B4672486C4772476C4772474E022A022A022A022A022A
%232A022A022A92A9FF5B5BFFFF5B7F7F7FFFFFC346222122212221462222
%21222122212246B890B8906B212221222122212221222122212221222122
%222221462222214622222146220022002200220022002221220022212200
%22212200222122212221222122212246716C724872487248724872242A2A
%2A232A2A2A23FD072A4CBBFFFF55FFFFFF55FFA9FFA9C49A4C2146222221
%46224C2246222222462271FD05B895224622462246224622462246224622
%462246224622462246224622462200210021002100220021002200210022
%0021002200210022002100220021002200464772486C4772486C4772474E
%022A022A022A022A022A022A022A2393A1FF7F7FFD04FFA9A8A0C2944C21
%22212221222146222221222122212246B78FB8B7B7954621222122212221
%222222214622222146222221462222214622222246220022002200220022
%002200220022002221220022212200222122002221220022227247724872
%487248724872242A232A232A022A232A022A232A022A92CBFF8585FFFFFF
%A7C29A9546222122222221FD04224C222221462222214CFD04B795B77046
%224622462246224622462246224622462246224622462246224622002100
%000021002100210021002100210021002100210021002200210022002100
%22474D476C4748476C4748474E022A022A022302290223022302230229A2
%FFA9FD05FFA247212221222122212221222122222221222122212245B794
%B7949494B621222122212221222122212221222122212221222146222221
%462222220022002200220022002200220022002221220022212200222122
%002221222122217147724872487248724872242A232A232A022A232A022A
%232A022A23297EFD06FFA8212222222122222221FD04224C222221462222
%2270B6BCB6BC70BC6F462246224622462246224622462246224622462246
%224622462246220021002100210021002100210022002100220021002200
%2100220021002200210022464D4772474847724748474E022A022A022302
%23022302230223022302A9FD06FF28222122212221222122212221222122
%21222122212269B6B5B69394932221222122212221222122212221222222
%214622222146222221462222210022002100220022002200220022002200
%220022002221220022212200222122004C6B72477248724772484E472A23
%2A022A232A02292323022923230229A8FFA89C224C222221222122222221
%222222212222222122222221222270247171714770222221462222224622
%462246224622462246224622462246224622462200000021000000210021
%002100210021002100210021002100210021002100220021217147484748
%474847484748232A0223022902230223022302230223224D4D2200222122
%0022212200222122212221222193926F2122212221224725242447472122
%212221222122212221222122212221222122212221222122212221462200
%220022002200220022002200220022002200220022212200222122002221
%22004C6B4D4872484E4872484E474E482A022A232A022A232A234E474D46
%714D22212221222122222221222222212222222170BABB93462222214622
%4D244F244E24462222224622462246224622462246224622462246224622
%462246224622000000210021002100210021002100210021002200210022
%0021002200210022002121714748474E4748474E4748474E474823242323
%02242348224C476B46474D4C0022212221222122212221222122212228CB
%B5B621222122212222FD0424232122212221222122212221222122212221
%222122214622222146222221462200210022002100220021002200220022
%002200220022002200220022212200222122464D484E474E484E474E484E
%474E474E474E474E234D22714771474D464D462221222122212221222122
%212221469C7184BDB6222122222221232424242B23222146222221462222
%214622222246224622462246224622462246224622002100000021000000
%210000002100210021002100210021002100210021002100220046474847
%48234847482348474823482348234823462271474E2A31317F544D212200
%2221222246462200222122A8A27E675AB722222122212222242323242321
%222122212221222122212221222122212221222122212221222122212222
%002200220022002200220022002200220022002200220022002200222122
%004D4771469C474E474E484E474E484E474E474E474E474D477147553155
%2B5531854E2221222147464D4671464D222221FFCB673D675B2921222222
%2146242A232A232222462222224622222246224622462246224622462246
%224622462246220021000000210000002100210021002100210021002100
%210022002100224C4C4D474D46724D47484E4E4748234E2348234E234722
%71476B4755312B4EA2A255317F22222147464646966C6B464721224CFF37
%3D376122222122212221FD05232122212221222122212221222122212221
%222122212221222122214622222100220021002200210022002100220021
%00220022002200220022002200784D712278479C47724E72474E474E474E
%474E234D46716B726B4F314FFD04A278557F294646464D47976B72909646
%712222225B37613722222221222222232A22242322222221222222214622
%2221462222224622222246224622462246224622FD070021000000210000
%002100000021002100210021002100217171727271719C72477847482348
%23482348224647716B6B4772312B78A87D7E777E317F2346466B6C47466B
%476B6B906C47462229373731212221222122212302220223212221222122
%212221222122212221222122212221222122212221222122210022002100
%22002200220022002200220022002200220022002200222271729C9C7872
%C59C729C4E474E474E2A554D716B966B726B722B557EA87DA27DA27E5555
%4D47716C716C976C7190976C71907246552B4F2429222221FD0422292123
%234622222146222222462222224622222246224622462246224622462246
%220000002100000021000000210000002100210021002100210021002100
%714C9C9C9D72729C9D729D2348234E2331307F6B6C6B726B6B47552A7E77
%7E7D7E7E7E5B4E6C97466B6B4747476C9647476C97476B24252424232221
%222122216C22210123212221222122212221222122212221222122212221
%222122212221222122210021002200210022002100220021002200210022
%002100220022004D4D9C9CBF9D9D72C59C9D724E474E224D2A55A9966C72
%6B72715531787D7E7DA2A2A230A92472469790716B97904D4797904D6B97
%9024242B2429212221222128222100292322212222222122222221222222
%2146222221462222224622222246224622FD090021000000210000002100
%000021000000210021229C9C9D9C9D9C9C9C9D9C9C2347226B472A2A786B
%726B6B774C2A31777E7DA277A2785B54486C6C22FD056B476C6C476C906C
%6BFD0424232200222122002100226B222122212221222122212221222122
%212221222122212221222122212221222200210022002100220021002200
%22002200220022002200220022004D9DBF9CC59DC59CC59DC572C5477122
%712A2A4EB86C9C772821552BA2A2A27EA3A3557F2A6C7247969096469690
%9747966B72474D462A242A244D2122222221222122212822222122222221
%462222214622222246222222462246224622462246224622FD0500210000
%00210000002100000021000000210021002100219C979C9D9CBF9C9D9CBF
%9C9C9C4600218E72029695712121002231317DA27DA3A2557F4E47476B96
%47716B96477146966C724646464723240224292221222122212221222122
%212221222122212221222122212221222122212221222122212221222122
%21002100210021002100220021002200210022002100220021002200A347
%9D9DC59CC59DC59CC572A3002200B69495B7B745285A5A6B553155A2C57E
%555B7F237147976B7147976C7190964747464D4722214E23242354212221
%222122212221222122222221222222212222222122222221222222214622
%2221462222224622FD0F002100000021000000210000002122A347979697
%969D96966C7878210021939494B694B684AF9CB84E3131552A315B542396
%906C4696906C469690904746226B21212222232402232922212200222122
%002221222122212221222122212221222122212221222122212221222122
%212221222100220021002200210022002100220021002200220022002200
%22002230A3729790979097729D79290022219A94BCB5A1BBC361AF5A9731
%55317F7F5423726B716B726C726B979072464D474C004D2222214E232429
%A92122212221222122222221222222212222222122222221462222214622
%222246222222462246224622FD0B00210000002100000021000000210000
%00210029315578A378A37855315500210022222524722A6184FF85782272
%4E5429236C96477190966B7190966B4646474621224C2122212228A953A8
%A22221220022212221222122212221222122212221222122212221222122
%212221222122212221222122210000002100210021002100220021002200
%210022002100220021002222312B5531312B5531312A2200220029242524
%4F3D5B7F9C6B966C716B976C4D6B966C7147969096464646712128222821
%2221222122FFA97EA8212221222122212221222122212221222122222221
%2222222122222221222222212222222146222221FD150021000000210000
%007D2A2B2A312A2B2A312A7F2821002101FD0424556C4646976B6B6B6C6B
%6B6C976C6B6B976C4722464646004C212100220021002200A87E7DA22200
%222122002221220022212200222122212221222122212221222122212221
%222122212221222122220021002200210022002100220021002200210022
%0021002200220053CB792A312A2B2A312A31A3FF21220028242B244F4772
%907147969097477290976B7247966B4C46714621224D2122212221222122
%2122A2A876A1212221222122212221222122212222222122222221222222
%2122222221462222214622222246222222FD0D0021000000210000002100
%000021000077CB782A082A2A2A082A2ACBA953002101FD0424716C6B6B97
%906B6B716B6B4696906C2246464700282222002200210022002200220076
%765477220022212200222122002221222122212221222122212221222122
%212221222122212221222122212200002100000021000000210021002100
%21002200210022002100220078A9CB292A232A2A2A2379CBA32822002224
%2A2424464C90976B7290976B719096474D46464728224D21222122002221
%2221222122212977A1002821222122212221222122212221222122212221
%22212221222222212222222122222221222222212222FD1B0021219CA2CB
%4E4E232A299CA2A34D210021012402242321464646906C9647476C964746
%226B22212222002100220021002200210022002100280021002200220022
%002200222122002221220022212200222122212221222122212221222122
%212221222122000021002100220021002200210022002100220021002200
%2100220022229C9CC5A9FFCBCB7E784D2800220023242A242A2828464D47
%716B976C71464C4671214D22222122212221222122212221222122212221
%222122212221222122212221222122212221222122212222222122222221
%2222222122222221462222214622FD130021000000210000002100002128
%4C774D784D4C212200210021012402240121224C214722726B4722474621
%214C002222222199999A0021002200210022002100220022002221220022
%212200222122002221222122212221222122212221222122212221222122
%212221222122210000002100000021000000210000002100210021002100
%220021002200210022002200220021002200210029242323220022004D21
%4D464C467121282822002221222195BAC3BA4C2122002221220022212221
%222122212221222122212221222122212221222122212221222122212221
%2221222222212222222122222221FD210021000000210000002100000123
%0224002100210022222146460028002100210021002146B894B521220021
%002200210022002100220021002200210022002200220022002221220022
%212200222122002221222122212221222122212221222100000021002100
%210021002200210022002100220021002200210022002100220022002200
%2200220022002923232322002200220022224C2828002221220022212200
%28224C222821222122212221222122212221222122212221222122212221
%222122212221222122212221222122222221222222212222222122222221
%FD1900210000002100000021000000210000002100002229012300210021
%002100210021002100220021002200210022002100220021002200210022
%002100220021002221220022212200222122002221220022212221222122
%21222122212221222122212221222122FD06002100000021000000210000
%002100000021002100210021002200210022002100220021002200709A29
%232100220022002200220022002200220022002221220022212200222122
%002221220022212200222122212221222122212221222122212221222122
%212221222122212221222122212221222222212222FD2700210000002100
%214B9B210000210000002100210021002100210021002100210021002100
%210021002200210022002100220021002200210022002100220022002200
%220022212200222122002221220022212221222122212200002100000021
%000000210021002100210022002100220021002200210022002100220021
%002200220022002100272121002200220022002200220022002200220022
%212200222122002221220022212221222122212221222122212221222122
%212221222122212221222122212221222122222221222222212222222122
%22FD1F002100000021000000210000002100000021000000210021002100
%210021002100220021002200210022002100220021002200210022002100
%220021002200210022212200222122002221220022212200222122212221
%2221222122212221222122FD0C0021000000210000002100000021002100
%210021002100210022002100220021002200210022002100220021002200
%220022002200220022002200220022212200222122002221220022212200
%222122002221222122212221222122212221222122212221222122212221
%22212221222122212221F8000000F8FD2800210000002100000021000000
%210021002100210021002100210021002100210021002100220021002200
%210022002100220021002200210022002100220022002200220022212200
%2221220022212200222122FD040021000000210000002100000021002100
%210021002200210022002100220021002200210022002100220022002200
%220022002200220022002200220022002200220022002221220022212200
%222122002221222122212221222122212221222122212221222122212221
%222122212221222122212222222122222221FD2500210000002100000021
%000000210000002100000021002100210021002100210022002100220021
%002200210022002100220021002200210022002100220021002221220022
%21220022212200222122002221222122212221222122FD12002100000021
%000000210000002100210021002100210021002200210022002100220021
%002200210022002100220022002200220022002200220022002221220022
%212200222122002221220022212200222122212221222122212221222122
%2122212221222122212221222122210000F8000000F8000000F8FD280021
%000000210000002100000021002100210021002100210021002100210021
%002100210022002100220021002200210022002100220021002200210022
%00220022002200222122002221220022FD0A002100000021000000210000
%002100210021002100220021002200210022002100220021002200210022
%002200220022002200220022002200220022002200220022002200222122
%002221220022212200222122212221222122212221222122212221222122
%2122212221222122212221222122212222FD2B0021000000210000002100
%000021000000210021002100210021002100210021002200210022002100
%220021002200210022002100220021002200210022002200222122002221
%220022212200222122002221222122FD1800210000002100000021000000
%210021002100210021002100220021002200210022002100220021002200
%210022002200220022002200220022002200222122002221220022212200
%222122002221222122212221222122212221222122212221222122212221
%2221F8000000F8000000F8000000F8FD2C00210000002100000021000000
%210021002100210021002100210021002100210021002100220021002200
%2100220021002200210022002100220021002200220022212200222122FD
%100021000000210000002100000021002100210021002200210022002100
%220021002200210022002100220022002200220022002200220022002200
%220022002200220022002221220022212200222122002221222122212221
%222122212221222122212221222122212221222122212221FD3100210000
%002100000021000000210000002100210021002100210021002100210022
%002100220021002200210022002100220021002200210022002100220022
%002221220022212200222122002221225228522852285228522852285228
%522852285228522852285228522852285228522852285228522852285228
%522852285228522852285228522852285228532852285328522853285228
%53285228534C5228534C5228534C5228534C5328534C5328534C5328534C
%534C534C534C534C534C534C534C534C534C534C534C534CFD7FFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 4 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">m0029</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 23.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-12-05T16:29:37+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-12-05T16:29:39+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-12-05T16:29:39+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>156</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgAnAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A4fqZpqN3/wAZpP8AiRzqo8npByVvL2iS65rdtpSSCBrgn96wqFCqW6Er1ptu&#xA;MIBPJpyZIx3kaH4+zvQ15oWpJrVzpFtBLeXlvJJGI4Y2dnWMn4wqcjQqOW3bKOLa5Dh8j0aZTjzB&#xA;BHeOSSu2AlplJ+gv5Of+Sq8qf9su2/5NjNDn+s+918+ZZjlTFLL/AMy6HYWcd7dXaLaTSelFMtXV&#xA;nHKo+ANsOBqemRnLh5tumwSzmsY4naVqF/PcTwXcIT0/ijmQMqMpYgUryB2Faht/AZYQHAwZchlK&#xA;MxVJnkXKfDP/ADkm9Pzs8xj/AJgv+oCDN3oz+7H46ufgl6Q88g9FoZWZyJECmNR3qaGvyzMBcqMl&#xA;yvSoPX2O2SBboyRl9A1teSwPG8LRmhilBVxtXcGhwxkCLDdvyPN9X/8AOJP/AJLjUv8AtsTf9Qtt&#xA;ml7S/vB7v0l1HaH1j3frfH6yZtwXNjNk2r+TtU0u/wBOsJXjkudQtobsqhNIEncovrMQFXem9abj&#xA;LBua7m+Mt686UNd0iHT714rSVru1jCK10FIT1DGHZK0pyAPTqMkQ2yCWOArso6AkZFD78/LT/wAl&#xA;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&#xA;2KuxV2Kv/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:6cec5a93-05f0-7d40-afcf-b7302d039c20</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:6cec5a93-05f0-7d40-afcf-b7302d039c20</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:1363523f-5d20-4312-8139-3dd9336d9447</stRef:instanceID>
            <stRef:documentID>xmp.did:7015469f-66c5-544f-8ccc-eda01c0943f5</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5a3f8942-4318-0549-a4a2-5c5ed66ea836</stEvt:instanceID>
                  <stEvt:when>2018-06-05T15:48:41+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6cec5a93-05f0-7d40-afcf-b7302d039c20</stEvt:instanceID>
                  <stEvt:when>2018-12-05T16:29:39+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1711.387010</stDim:w>
            <stDim:h>1000.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=206 G=22 B=219 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>206</xmpG:red>
                           <xmpG:green>22</xmpG:green>
                           <xmpG:blue>219</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=97 G=10 B=103 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>97</xmpG:red>
                           <xmpG:green>10</xmpG:green>
                           <xmpG:blue>103</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=25 G=2 B=154 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>25</xmpG:red>
                           <xmpG:green>2</xmpG:green>
                           <xmpG:blue>154</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=11 G=10 B=127 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>11</xmpG:red>
                           <xmpG:green>10</xmpG:green>
                           <xmpG:blue>127</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=36 B=212 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>36</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=55 G=97 B=254 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>55</xmpG:red>
                           <xmpG:green>97</xmpG:green>
                           <xmpG:blue>254</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=58 G=0 B=224 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>58</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>224</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=13 G=237 B=254 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>13</xmpG:red>
                           <xmpG:green>237</xmpG:green>
                           <xmpG:blue>254</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=88 B=20 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>88</xmpG:green>
                           <xmpG:blue>20</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=226 G=115 B=233 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>226</xmpG:red>
                           <xmpG:green>115</xmpG:green>
                           <xmpG:blue>233</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=132 G=64 B=160 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>132</xmpG:red>
                           <xmpG:green>64</xmpG:green>
                           <xmpG:blue>160</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=124 G=19 B=152 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>124</xmpG:red>
                           <xmpG:green>19</xmpG:green>
                           <xmpG:blue>152</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=38 G=4 B=120 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>38</xmpG:red>
                           <xmpG:green>4</xmpG:green>
                           <xmpG:blue>120</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=188 B=119 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>188</xmpG:green>
                           <xmpG:blue>119</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=223 G=226 B=232 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>223</xmpG:red>
                           <xmpG:green>226</xmpG:green>
                           <xmpG:blue>232</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=40 G=88 B=243 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>40</xmpG:red>
                           <xmpG:green>88</xmpG:green>
                           <xmpG:blue>243</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=75 B=101 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>75</xmpG:green>
                           <xmpG:blue>101</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1000 li
1200 1000 li
1200 0 li
cp
clp
1200 1000 mo
0 1000 li
0 -.000300407 li
1200 -.000300407 li
1200 1000 li
428.59 751.867 mo
425.102 753.878 li
422.619 755.288 421.134 757.846 421.133 760.716 cv
421.132 763.543 422.584 766.085 425.018 767.514 cv
522.459 829.673 li
525.374 831.532 528.743 832.515 532.201 832.515 cv
535.324 832.515 538.412 831.701 541.131 830.161 cv
789.972 688.993 li
794.355 686.482 796.976 681.976 796.984 676.938 cv
796.986 675.931 796.882 674.943 796.681 673.988 cv
796.692 673.821 796.698 673.652 796.698 673.483 cv
796.7 672.357 796.454 671.281 795.995 670.315 cv
796.222 669.847 796.33 669.331 796.316 668.817 cv
796.323 668.812 li
796.323 665.844 li
796.331 664.845 795.879 663.84 794.951 663.195 cv
701.798 598.6 li
701.712 598.54 701.625 598.481 701.537 598.422 cv
701.362 598.3 li
698.143 596.065 694.37 594.884 690.451 594.884 cv
687.102 594.884 683.797 595.769 680.896 597.442 cv
599.3 644.495 li
601.218 633.881 600.459 624.131 596.735 617.016 cv
615.174 606.37 li
618.339 604.544 619.954 601.387 620.05 598.191 cv
620.055 598.191 li
620.055 598.124 li
620.058 597.966 620.058 597.81 620.055 597.652 cv
620.055 592.231 li
620.039 592.231 li
620.315 588.681 618.689 585.002 615.163 582.972 cv
579.402 562.388 li
559.447 546.439 li
394.894 641.444 li
391.021 643.68 389.757 648.324 391.351 652.063 cv
389.996 655.345 390.764 659.374 393.843 661.86 cv
404.348 670.343 li
442.04 691.826 li
445.928 694.064 450.264 695.183 454.601 695.183 cv
458.948 695.183 463.295 694.058 467.19 691.809 cv
524.158 658.919 li
520.58 669.962 519.583 680.728 521.452 689.387 cv
431.532 741.24 li
431.287 741.381 431.057 741.54 430.842 741.714 cv
429.038 742.913 428.146 744.882 428.2 746.834 cv
428.198 746.832 li
428.198 749.841 li
428.21 749.849 li
428.221 750.534 428.347 751.218 428.59 751.867 cv
532.201 831.315 mo
528.972 831.315 525.826 830.397 523.104 828.661 cv
425.644 766.492 li
423.563 765.267 422.332 763.113 422.333 760.716 cv
422.334 758.283 423.592 756.116 425.697 754.919 cv
429.125 752.943 li
429.531 753.584 430.074 754.162 430.757 754.636 cv
433.596 756.604 li
428.395 759.597 li
427.797 759.937 427.734 760.495 427.734 760.719 cv
427.734 760.944 427.796 761.502 428.382 761.835 cv
526.008 824.108 li
527.861 825.29 530.002 825.915 532.201 825.915 cv
534.186 825.915 536.15 825.396 537.878 824.417 cv
793.032 679.806 li
794.214 679.129 795.152 678.17 795.783 677.037 cv
795.741 681.6 793.352 685.674 789.378 687.95 cv
540.54 829.116 li
538.001 830.554 535.116 831.315 532.201 831.315 cv
false sop
/0 
[/DeviceCMYK] /CSA add_res
level3{
gsave
clp
[-675.779 943.45 -943.45 -675.779 885.24 101.778 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~_>cYT_uDkX_uDn[`;`%_`rA:d`rA:fa8\CiaT"Omao=Xpb5Xasbl9t"c2U+&cMp4)ci6=,d/QF/dJlR3
e,Md6eGhm9ec/$=f)J-AfDe6Df`+?Hg&FHKgAaQNg]'ZQh#BcThZ#uXhu?)[i;Z2_ir;Dcj8VMfj8VMh
jSqVkk5RkokPmtql2O4ulMjA$m/KV(mJf_+mJfb.mf,q3n,H.9n,H1<nGc@AnGZ@DnGH:FnG64HnG-4K
n+U%Mn+BtOmdjeOn*shRn*jhTnEskVnEjkXnEXeZnEF\[n*"S\mcSJ^mGr5^m,E#_lecc_l.pK_khC?a
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-675.779 943.45 -943.45 -675.779 885.24 101.778 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~^qmk(_SX1,_Sa:/_o0L4`Pog8`Q#p;`lH-?a2l?CaN;QGai_cLbKS2Sbg"DWc-FV[cHjh_cd:%cd*^7h
daHUne'lgreC<%!e^`7%f%/I)f@S[-f\"m1g"G*5g=k<9gY:N=h;-rEhVR/Ihr!AMiSieUio8tWio9"Y
j5]1\jQ5Lck2tghkNM-ol07HtlKdd&m-O**m-O*+mHs</mdBN2mdBN3n*f`6n*f`6n*f`6n*f`6n*f`6
n*f`6mdBN2mdBN2mdBN2mdBN2n*f`6n*f`6n*f`6n*f`6n*f`6mdBN2mHs<.m-O**lg*m&lK[Wukih6o
~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W,urr2oqrVZTjqtg0bq>'j]
q"XUXp@e1Po^qbHo()>@nF5r:n*f]4mHs<.m-O'(lK[Wukih6okND$kk2tddj5].YiSi_PhVR)Egt^Z=
~>
<~4?P_g4?Yhj4[)%n5!M7r5<h@s5<h@s5<qJ!5X7S"5X7S"5X7S"5X@\%5s[e&5s[e&5s[e&5sdn)6:+"*
6:+"*6:+%,6UO4.6UO4.6UO4.6UO4.6UO4.6UO4.6UO4.6UO4.6UO4.6UO4.6UO4.6UO4.6UO4.6UO4.
6UO4/6psF26psF377BX77Rfj;7n6'>7n6'?84Z9C8P2TJ9MA/U:/4P[:Jakb;,U:j;cH^r<E<.%='/R-
=]np3>?b?;?!UcC?XI2K@:<VS@q0%[AS#IcB4kmkBk_9qC2.O"Ci!s*DJjB2E,]c8EH-#>F)uGFF`hkO
~>
<~1GgpG2)[?O2`NcW3BB2_4$5Vg4[)%o5<qJ"5sdn*6UX=277Ka:7n?0B8P2TJ92&#R9hnGZ:Jakb;,U:i
;GpFl<)cjt<`W:(=]np3>?b?<?=$uG?smDO@U`hWA7T7_AnG[gBP;*oC2.O"Ci+'-Df9T6EH-#>F)uGF
FEM_LG'8%QGB\7UG^+IYH$Xd`H[C*eI!pElIXcitJ:W9'JqJ]/KS>,7L51P?Ll$tGMMmCON/`gWNfT6_
OHG]hPEV5qQ'IW"QBml(R$a8.R@0J2R[T\6S"#q<SXl@DT:_aJTV/!PU8"EXUnjiaVl-JlWMuntX/i>'
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
695.307 599.522 mo
425.697 754.919 li
423.592 756.116 422.334 758.283 422.333 760.716 cv
422.332 763.113 423.563 765.267 425.644 766.492 cv
523.104 828.661 li
525.826 830.397 528.972 831.315 532.201 831.315 cv
535.116 831.315 538.001 830.554 540.54 829.116 cv
789.378 687.95 li
793.382 685.657 795.776 681.539 795.784 676.936 cv
795.792 672.411 793.48 668.327 789.555 665.98 cv
698.573 599.698 li
698.056 599.322 697.444 599.123 696.805 599.123 cv
696.28 599.123 695.762 599.26 695.307 599.522 cv
522.459 829.673 mo
425.018 767.514 li
422.584 766.085 421.132 763.543 421.133 760.716 cv
421.134 757.846 422.619 755.288 425.102 753.878 cv
694.71 598.483 li
696.121 597.67 697.961 597.768 699.278 598.727 cv
790.215 664.98 li
794.462 667.515 796.992 671.985 796.984 676.938 cv
796.976 681.976 794.355 686.482 789.972 688.993 cv
541.131 830.161 li
538.412 831.701 535.324 832.515 532.201 832.515 cv
528.743 832.515 525.374 831.532 522.459 829.673 cv
.571832 .880613 0 0 cmyk
f
532.201 825.915 mo
534.186 825.915 536.15 825.396 537.878 824.417 cv
793.032 679.806 li
795.32 678.495 796.695 676.129 796.698 673.483 cv
796.703 670.836 795.337 668.465 793.045 667.142 cv
792.832 667.005 li
702.966 601.536 li
428.395 759.597 li
427.797 759.937 427.734 760.495 427.734 760.719 cv
427.734 760.944 427.796 761.502 428.382 761.835 cv
526.008 824.108 li
527.861 825.29 530.002 825.915 532.201 825.915 cv
.876249 .890257 .480323 .659937 cmyk
f
467.562 744.17 mo
433.572 763.794 li
426.732 751.885 li
460.423 732.42 li
467.562 744.17 li
cp
.758968 1 .307103 .328832 cmyk
ef
435.026 760.634 mo
435.026 763.731 432.852 764.986 430.17 763.437 cv
427.488 761.889 425.314 758.124 425.314 755.027 cv
425.314 751.93 427.488 750.674 430.17 752.223 cv
432.852 753.772 435.026 757.538 435.026 760.634 cv
cp
level3{
gsave
[9.71211 0 0 9.71211 425.314 757.83 ]ct
<<
/PatternType 2
/Shading
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~@bC_]@bC_]A(gn_A(pt`AD@.bA_d=dB&*FeB&3LfBAW[hBAW[hC#AskC>]'lCZ,6nCuPEpD;tTrDW:]s
Dr^luE9.'"ETR6$ET[<%F6ET(FQic*FmB#-GO,;0GjPJ2GjYP3H11e6HLUt8I.I=<IImL>J+`jBJbK-E
K),HIK_tfML&V,QL]7>SM>mPUMuNbWNrK(ZOT,=]PQ(adQ2_'iQi@BnRK!]sSGs0%T)TK+TDo]1U&Q&8
UAl8>V#MSEVZ.nKVuJ+QWW+FXX8a^]XT'mcXoC'hYQ$BpYQ$HuYl?[(Z2Zj.ZN!$3Zi<08[/W?>[/WED
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>> /Gradient add_res /1 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[9.71211 0 0 9.71211 425.314 757.83 ]ct
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~@:<SQ@:E\T@U`eU@UinX@q9+\A7]=`AS#FaAS,OdAnGXeAnPaiBPD0pBkhBtC27U#CM[g'Ci+$+D/O6/
DJjB2Df9T6E,]c8E,]f:EcQ5BF)uGFFEDYJG'8(RGB\7TGB\:VG^+LZH$O^^H[C-fI!g?jIXZcrJ:N3%
JUrB(JqJ]/KS5#4Knb>;LPUbCM2I1KN/WaVNfT6_OcbfjPE_;sQ'R`&Q^F/.R@9V8S=Q4BSt;OGT:hjN
TqS0RU8"EXUnji`VP^5fVl-JlWMuntX/i;%XK8M)Xf\b/Y-+q1YHP.5Yct@9Z*CR=ZEgdAZa7!EZa7!E
~>
<~f\"j/f\+s2g"P06g=tB:gYCT>gt^]?gtgfBh;7#FhVR,GhV[5Jhr!>Khr*GNi8NYRiSrkVio8tWioB(Z
j5]4]jQ,FajlPXek2tjikND'mkih9qlK[^$lg*p(m-O-,mHs?0n*fc8nF5u<o()DDoCMVHp%A%Pp@e7T
q"aa^qYU0frVlfrs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!"!WiH,"U,)8#RC_D$4@7O%M'*_&J>`k'GVB"(
`=52)]Tk=*ZlLI+X/-U,UFca-R^Dm.Olr!/1`A)/hSe10JP:;1G^jE2)[?O3&ioY3]]>a4?P_g4Zttm5
<hCu~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!"!<E3&!WrN-"9\i2"U,)7#6tM?#mgnE$
47.K$k*RS%LrsY%hK9a&eYik'GV>u(Dmu,)B0Y:*ZcCG+X&$R,9nH[-71)g.4Qi!~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/1 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
432.339 763.36 mo
431.801 763.36 431.179 763.165 430.54 762.797 cv
428.067 761.369 426.054 757.882 426.054 755.027 cv
426.054 753.32 426.782 752.3 428.001 752.3 cv
428.538 752.3 429.16 752.496 429.8 752.865 cv
432.273 754.293 434.285 757.778 434.285 760.633 cv
434.285 762.341 433.557 763.36 432.339 763.36 cv
cp
.613001 1 .0114748 .00198367 cmyk
ef
430.72 759.233 mo
430.583 759.233 430.426 759.183 430.264 759.089 cv
429.637 758.728 429.126 757.844 429.126 757.12 cv
429.126 756.687 429.311 756.428 429.62 756.428 cv
429.756 756.428 429.914 756.478 430.076 756.572 cv
430.703 756.934 431.213 757.818 431.213 758.542 cv
431.213 758.974 431.029 759.233 430.72 759.233 cv
cp
.758968 1 .307103 .328832 cmyk
ef
796.323 665.804 mo
795.244 666.514 li
795.151 666.432 795.056 666.353 794.951 666.28 cv
701.798 601.686 li
695.482 597.3 687.202 596.954 680.54 600.794 cv
431.176 744.592 li
430.059 745.237 429.26 746.164 428.77 747.209 cv
428.198 746.832 li
428.198 749.841 li
428.21 749.849 li
428.239 751.662 429.072 753.467 430.757 754.636 cv
526.451 820.942 li
529.07 822.759 532.502 822.903 535.264 821.31 cv
794.725 671.671 li
795.812 671.044 796.345 669.925 796.316 668.817 cv
796.323 668.812 li
796.323 665.804 li
ef
794.951 663.195 mo
701.798 598.6 li
695.482 594.216 687.202 593.868 680.54 597.71 cv
431.176 741.507 li
427.395 743.688 427.17 749.063 430.757 751.551 cv
526.451 817.857 li
529.07 819.673 532.502 819.817 535.264 818.224 cv
794.725 668.584 li
796.754 667.415 796.875 664.531 794.951 663.195 cv
.382605 .850126 0 0 cmyk
ef
531.133 817.677 mo
529.598 817.676 528.119 817.214 526.859 816.34 cv
431.164 750.034 li
429.69 749.01 428.854 747.329 428.929 745.535 cv
429.004 743.743 429.977 742.137 431.532 741.24 cv
680.896 597.442 li
683.797 595.769 687.102 594.884 690.451 594.884 cv
694.37 594.884 698.143 596.065 701.362 598.3 cv
794.515 662.894 li
795.208 663.377 795.601 664.168 795.565 665.012 cv
795.53 665.857 795.072 666.613 794.34 667.035 cv
534.879 816.674 li
533.742 817.331 532.447 817.677 531.134 817.677 cv
531.133 817.677 li
.706233 1 .253941 .177249 cmyk
ef
430.716 751.524 mo
429.084 750.372 428.263 748.618 428.211 746.847 cv
428.198 746.839 li
428.198 749.847 li
428.21 749.854 li
428.239 751.652 429.06 753.44 430.716 754.61 cv
430.716 751.524 li
cp
.613001 1 .0114748 .00198367 cmyk
ef
535.25 818.239 mo
532.512 819.806 529.123 819.67 526.518 817.893 cv
526.518 820.979 li
529.123 822.755 532.512 822.891 535.25 821.325 cv
535.25 818.239 li
cp
ef
796.318 665.808 mo
796.32 666.889 795.789 667.967 794.732 668.581 cv
794.732 671.666 li
795.813 671.038 796.345 669.923 796.316 668.817 cv
796.323 668.813 li
796.323 665.804 li
796.318 665.808 li
cp
ef
723.654 622.32 mo
723.654 623.794 li
702.856 635.793 li
694.099 629.692 li
694.099 628.218 li
723.654 622.32 li
cp
level3{
gsave
[-29.5541 -1.32689e-09 -1.32689e-09 29.5541 723.654 629.057 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-29.5541 -1.32689e-09 -1.32689e-09 29.5541 723.654 629.057 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
741.728 634.904 mo
741.728 636.378 li
703.199 658.596 li
691.623 650.533 li
691.623 649.06 li
741.728 634.904 li
cp
level3{
gsave
[-50.1057 -2.24959e-09 -2.24959e-09 50.1057 741.728 646.75 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-50.1057 -2.24959e-09 -2.24959e-09 50.1057 741.728 646.75 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
696.039 661.251 mo
696.039 662.724 li
675.923 674.331 li
664.34 666.267 li
664.34 664.795 li
696.039 661.251 li
cp
level3{
gsave
[-31.6999 -1.42323e-09 -1.42323e-09 31.6999 696.039 667.791 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-31.6999 -1.42323e-09 -1.42323e-09 31.6999 696.039 667.791 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
669.785 676.392 mo
669.785 677.866 li
649.669 689.472 li
638.085 681.409 li
638.085 679.935 li
669.785 676.392 li
cp
level3{
gsave
[-31.7001 -1.42324e-09 -1.42324e-09 31.7001 669.785 682.932 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-31.7001 -1.42324e-09 -1.42324e-09 31.7001 669.785 682.932 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
643.531 691.534 mo
643.531 693.007 li
623.416 704.606 li
611.831 696.55 li
611.831 695.077 li
643.531 691.534 li
cp
level3{
gsave
[-31.7001 -1.42324e-09 -1.42324e-09 31.7001 643.531 698.07 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-31.7001 -1.42324e-09 -1.42324e-09 31.7001 643.531 698.07 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
617.277 706.675 mo
617.277 708.148 li
597.154 719.747 li
585.578 711.684 li
585.578 710.211 li
617.277 706.675 li
cp
level3{
gsave
[-31.6991 -1.4232e-09 -1.4232e-09 31.6991 617.277 713.211 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-31.6991 -1.4232e-09 -1.4232e-09 31.6991 617.277 713.211 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
591.016 721.817 mo
591.016 723.29 li
570.9 734.888 li
559.324 726.825 li
559.324 725.352 li
591.016 721.817 li
cp
level3{
gsave
[-31.6921 -1.42288e-09 -1.42288e-09 31.6921 591.016 728.353 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-31.6921 -1.42288e-09 -1.42288e-09 31.6921 591.016 728.353 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
564.762 736.958 mo
564.762 738.431 li
544.646 750.03 li
533.07 741.966 li
533.07 740.493 li
564.762 736.958 li
cp
level3{
gsave
[-31.6921 -1.42288e-09 -1.42288e-09 31.6921 564.762 743.494 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-31.6921 -1.42288e-09 -1.42288e-09 31.6921 564.762 743.494 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
538.509 752.091 mo
538.509 753.565 li
488.725 782.277 li
477.149 774.214 li
477.149 772.74 li
538.509 752.091 li
cp
level3{
gsave
[-61.3597 -2.75487e-09 -2.75487e-09 61.3597 538.509 767.184 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-61.3597 -2.75487e-09 -2.75487e-09 61.3597 538.509 767.184 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
759.185 647.489 mo
759.185 648.963 li
739.061 660.569 li
727.485 652.505 li
727.485 651.032 li
759.185 647.489 li
cp
level3{
gsave
[-31.6999 -1.42323e-09 -1.42323e-09 31.6999 759.185 654.029 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-31.6999 -1.42323e-09 -1.42323e-09 31.6999 759.185 654.029 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
732.931 662.63 mo
732.931 664.103 li
712.808 675.703 li
701.231 667.647 li
701.231 666.173 li
732.931 662.63 li
cp
level3{
gsave
[-31.7001 -1.42324e-09 -1.42324e-09 31.7001 732.931 669.167 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-31.7001 -1.42324e-09 -1.42324e-09 31.7001 732.931 669.167 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
706.67 677.772 mo
706.67 679.246 li
686.554 690.843 li
674.978 682.781 li
674.978 681.307 li
706.67 677.772 li
cp
level3{
gsave
[-31.6921 -1.42288e-09 -1.42288e-09 31.6921 706.67 684.308 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-31.6921 -1.42288e-09 -1.42288e-09 31.6921 706.67 684.308 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
680.416 692.914 mo
680.416 694.386 li
660.3 705.985 li
648.717 697.922 li
648.717 696.449 li
680.416 692.914 li
cp
level3{
gsave
[-31.6991 -1.4232e-09 -1.4232e-09 31.6991 680.416 699.449 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-31.6991 -1.4232e-09 -1.4232e-09 31.6991 680.416 699.449 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
654.162 708.054 mo
654.162 709.528 li
634.046 721.127 li
622.463 713.063 li
622.463 711.59 li
654.162 708.054 li
cp
level3{
gsave
[-31.6989 -1.42319e-09 -1.42319e-09 31.6989 654.162 714.591 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-31.6989 -1.42319e-09 -1.42319e-09 31.6989 654.162 714.591 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
627.909 723.188 mo
627.909 724.662 li
607.792 736.268 li
596.209 728.205 li
596.209 726.731 li
627.909 723.188 li
cp
level3{
gsave
[-31.7001 -1.42324e-09 -1.42324e-09 31.7001 627.909 729.728 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-31.7001 -1.42324e-09 -1.42324e-09 31.7001 627.909 729.728 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
545.393 770.777 mo
545.393 772.25 li
506.524 794.662 li
494.94 786.598 li
494.94 785.125 li
545.393 770.777 li
cp
level3{
gsave
[-50.4526 -2.26517e-09 -2.26517e-09 50.4526 545.393 782.719 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-50.4526 -2.26517e-09 -2.26517e-09 50.4526 545.393 782.719 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
601.655 738.33 mo
601.655 739.803 li
551.871 768.514 li
540.288 760.452 li
540.288 758.978 li
601.655 738.33 li
cp
level3{
gsave
[-61.3668 -2.75518e-09 -2.75518e-09 61.3668 601.655 753.422 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-61.3668 -2.75518e-09 -2.75518e-09 61.3668 601.655 753.422 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
777.316 659.681 mo
777.316 661.155 li
738.787 683.375 li
727.211 675.311 li
727.211 673.838 li
777.316 659.681 li
cp
level3{
gsave
[-50.1055 -2.24959e-09 -2.24959e-09 50.1055 777.316 671.528 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-50.1055 -2.24959e-09 -2.24959e-09 50.1055 777.316 671.528 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
731.628 686.029 mo
731.628 687.503 li
711.512 699.101 li
699.927 691.046 li
699.927 689.572 li
731.628 686.029 li
cp
level3{
gsave
[-31.7001 -1.42324e-09 -1.42324e-09 31.7001 731.628 692.565 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-31.7001 -1.42324e-09 -1.42324e-09 31.7001 731.628 692.565 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
600.01 761.928 mo
600.01 763.402 li
579.886 775.008 li
568.31 766.945 li
568.31 765.471 li
600.01 761.928 li
cp
level3{
gsave
[-31.7001 -1.42324e-09 -1.42324e-09 31.7001 600.01 768.468 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-31.7001 -1.42324e-09 -1.42324e-09 31.7001 600.01 768.468 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
573.416 777.262 mo
573.416 778.736 li
550.924 791.705 li
539.347 783.641 li
539.347 782.168 li
573.416 777.262 li
cp
level3{
gsave
[-34.0686 -1.52958e-09 -1.52958e-09 34.0686 573.416 784.484 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-34.0686 -1.52958e-09 -1.52958e-09 34.0686 573.416 784.484 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
544.43 793.975 mo
544.43 795.448 li
524.314 807.054 li
512.737 798.991 li
512.737 797.517 li
544.43 793.975 li
cp
level3{
gsave
[-31.693 -1.42292e-09 -1.42292e-09 31.693 544.43 800.515 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-31.693 -1.42292e-09 -1.42292e-09 31.693 544.43 800.515 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
694.668 639.033 mo
694.668 640.506 li
673.87 652.505 li
665.114 646.404 li
665.114 644.931 li
694.668 639.033 li
cp
level3{
gsave
[-29.5541 -1.32689e-09 -1.32689e-09 29.5541 694.668 645.769 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-29.5541 -1.32689e-09 -1.32689e-09 29.5541 694.668 645.769 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
665.689 655.745 mo
665.689 657.218 li
644.891 669.217 li
636.135 663.117 li
636.135 661.643 li
665.689 655.745 li
cp
level3{
gsave
[-29.554 -1.32689e-09 -1.32689e-09 29.554 665.689 662.481 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-29.554 -1.32689e-09 -1.32689e-09 29.554 665.689 662.481 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
636.704 672.458 mo
636.704 673.931 li
615.906 685.93 li
607.149 679.837 li
607.149 678.364 li
636.704 672.458 li
cp
level3{
gsave
[-29.5551 -1.32694e-09 -1.32694e-09 29.5551 636.704 679.194 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-29.5551 -1.32694e-09 -1.32694e-09 29.5551 636.704 679.194 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
607.724 689.177 mo
607.724 690.651 li
586.92 702.643 li
578.163 696.549 li
578.163 695.076 li
607.724 689.177 li
cp
level3{
gsave
[-29.5612 -1.32721e-09 -1.32721e-09 29.5612 607.724 695.91 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-29.5612 -1.32721e-09 -1.32721e-09 29.5612 607.724 695.91 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
578.739 705.89 mo
578.739 707.364 li
557.942 719.355 li
549.185 713.262 li
549.185 711.789 li
578.739 705.89 li
cp
level3{
gsave
[-29.5541 -1.32689e-09 -1.32689e-09 29.5541 578.739 712.623 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-29.5541 -1.32689e-09 -1.32689e-09 29.5541 578.739 712.623 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
491.789 756.028 mo
491.789 757.502 li
470.992 769.493 li
462.235 763.4 li
462.235 761.926 li
491.789 756.028 li
cp
level3{
gsave
[-29.5541 -1.32689e-09 -1.32689e-09 29.5541 491.789 762.76 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-29.5541 -1.32689e-09 -1.32689e-09 29.5541 491.789 762.76 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
549.753 722.603 mo
549.753 724.077 li
500.317 752.588 li
491.561 746.487 li
491.561 745.013 li
549.753 722.603 li
cp
level3{
gsave
[-58.1917 -2.61263e-09 -2.61263e-09 58.1917 549.753 737.595 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-58.1917 -2.61263e-09 -2.61263e-09 58.1917 549.753 737.595 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
708.624 611.566 mo
708.624 613.04 li
678.047 630.698 li
669.291 624.597 li
669.291 623.124 li
708.624 611.566 li
cp
level3{
gsave
[-39.3328 -1.76593e-09 -1.76593e-09 39.3328 708.624 621.132 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-39.3328 -1.76593e-09 -1.76593e-09 39.3328 708.624 621.132 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
669.859 633.938 mo
669.859 635.412 li
649.089 647.396 li
640.333 641.296 li
640.333 639.822 li
669.859 633.938 li
cp
level3{
gsave
[-29.5267 -1.32566e-09 -1.32566e-09 29.5267 669.859 640.667 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-29.5267 -1.32566e-09 -1.32566e-09 29.5267 669.859 640.667 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
641.012 650.636 mo
640.908 652.109 li
612.357 668.524 li
603.6 662.431 li
603.6 660.958 li
641.012 650.636 li
cp
level3{
gsave
[-37.4123 -1.6797e-09 -1.6797e-09 37.4123 641.012 659.58 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-37.4123 -1.6797e-09 -1.6797e-09 37.4123 641.012 659.58 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
576.152 689.407 mo
577.065 688.431 577.97 687.418 578.862 686.371 cv
604.175 671.772 li
604.175 673.245 li
576.152 689.407 li
level3{
gsave
clp
[-50.232 -2.25527e-09 -2.25527e-09 50.232 604.175 684.469 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-50.232 -2.25527e-09 -2.25527e-09 50.232 604.175 684.469 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
506.086 728.369 mo
506.086 729.842 li
485.289 741.834 li
476.531 735.74 li
476.531 734.267 li
506.086 728.369 li
cp
level3{
gsave
[-29.5541 -1.32689e-09 -1.32689e-09 29.5541 506.086 735.101 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-29.5541 -1.32689e-09 -1.32689e-09 29.5541 506.086 735.101 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
476.759 745.274 mo
476.759 746.748 li
455.962 758.739 li
447.205 752.645 li
447.205 751.172 li
476.759 745.274 li
cp
level3{
gsave
[-29.5541 -1.32689e-09 -1.32689e-09 29.5541 476.759 752.006 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-29.5541 -1.32689e-09 -1.32689e-09 29.5541 476.759 752.006 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
514.273 725.121 mo
505.517 719.02 li
506.674 718.352 li
514.273 723.648 li
541.497 707.931 li
541.687 707.936 541.877 707.938 542.068 707.938 cv
542.767 707.938 543.475 707.908 544.192 707.849 cv
514.273 725.121 li
level3{
gsave
clp
[-49.0017 -2.20003e-09 -2.20003e-09 49.0017 554.519 710.453 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-49.0017 -2.20003e-09 -2.20003e-09 49.0017 554.519 710.453 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
705.373 701.17 mo
705.373 702.643 li
606.488 759.667 li
594.912 751.603 li
594.912 750.13 li
705.373 701.17 li
cp
level3{
gsave
[-110.461 -4.95938e-09 -4.95938e-09 110.461 705.373 730.418 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-110.461 -4.95938e-09 -4.95938e-09 110.461 705.373 730.418 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
723.654 622.32 mo
702.856 634.319 li
694.099 628.218 li
714.896 616.227 li
723.654 622.32 li
cp
.382605 .850126 0 0 cmyk
ef
741.728 634.904 mo
703.199 657.123 li
691.623 649.06 li
730.151 626.848 li
741.728 634.904 li
cp
ef
696.039 661.251 mo
675.923 672.857 li
664.34 664.795 li
684.455 653.196 li
696.039 661.251 li
cp
ef
669.785 676.392 mo
649.669 687.999 li
638.085 679.935 li
658.202 668.329 li
669.785 676.392 li
cp
ef
643.531 691.534 mo
623.416 703.132 li
611.831 695.077 li
631.948 683.47 li
643.531 691.534 li
cp
ef
617.277 706.675 mo
597.154 718.274 li
585.578 710.211 li
605.694 698.612 li
617.277 706.675 li
cp
ef
591.016 721.817 mo
570.9 733.416 li
559.324 725.352 li
579.44 713.754 li
591.016 721.817 li
cp
ef
564.762 736.958 mo
544.646 748.556 li
533.07 740.493 li
553.186 728.894 li
564.762 736.958 li
cp
ef
538.509 752.091 mo
488.725 780.803 li
477.149 772.74 li
526.932 744.036 li
538.509 752.091 li
cp
ef
759.185 647.489 mo
739.061 659.095 li
727.485 651.032 li
747.602 639.425 li
759.185 647.489 li
cp
ef
732.931 662.63 mo
712.808 674.229 li
701.231 666.173 li
721.348 654.567 li
732.931 662.63 li
cp
ef
706.67 677.772 mo
686.554 689.371 li
674.978 681.307 li
695.094 669.709 li
706.67 677.772 li
cp
ef
680.416 692.914 mo
660.3 704.511 li
648.717 696.449 li
668.84 684.85 li
680.416 692.914 li
cp
ef
654.162 708.054 mo
634.046 719.653 li
622.463 711.59 li
642.586 699.991 li
654.162 708.054 li
cp
ef
627.909 723.188 mo
607.792 734.795 li
596.209 726.731 li
616.325 715.132 li
627.909 723.188 li
cp
ef
545.393 770.777 mo
506.524 793.188 li
494.94 785.125 li
533.81 762.714 li
545.393 770.777 li
cp
ef
601.655 738.33 mo
551.871 767.042 li
540.288 758.978 li
590.072 730.266 li
601.655 738.33 li
cp
ef
777.316 659.681 mo
738.787 681.901 li
727.211 673.838 li
765.74 651.618 li
777.316 659.681 li
cp
ef
731.628 686.029 mo
711.512 697.628 li
699.927 689.572 li
720.044 677.965 li
731.628 686.029 li
cp
ef
600.01 761.928 mo
579.886 773.535 li
568.31 765.471 li
588.427 753.865 li
600.01 761.928 li
cp
ef
573.416 777.262 mo
550.924 790.231 li
539.347 782.168 li
561.84 769.199 li
573.416 777.262 li
cp
ef
544.43 793.975 mo
524.314 805.581 li
512.737 797.517 li
532.854 785.912 li
544.43 793.975 li
cp
ef
694.668 639.033 mo
673.87 651.032 li
665.114 644.931 li
685.918 632.939 li
694.668 639.033 li
cp
ef
665.689 655.745 mo
644.891 667.744 li
636.135 661.643 li
656.932 649.652 li
665.689 655.745 li
cp
ef
636.704 672.458 mo
615.906 684.457 li
607.149 678.364 li
627.947 666.365 li
636.704 672.458 li
cp
ef
607.724 689.177 mo
586.92 701.17 li
578.163 695.076 li
598.968 683.077 li
607.724 689.177 li
cp
ef
578.739 705.89 mo
557.942 717.881 li
549.185 711.789 li
569.983 699.79 li
578.739 705.89 li
cp
ef
491.789 756.028 mo
470.992 768.019 li
462.235 761.926 li
483.032 749.935 li
491.789 756.028 li
cp
ef
549.753 722.603 mo
500.317 751.114 li
491.561 745.013 li
541.004 716.502 li
549.753 722.603 li
cp
ef
708.624 611.566 mo
678.047 629.225 li
669.291 623.124 li
699.867 605.473 li
708.624 611.566 li
cp
ef
669.859 633.938 mo
649.089 645.922 li
640.333 639.822 li
661.109 627.845 li
669.859 633.938 li
cp
ef
640.908 650.636 mo
612.357 667.05 li
603.6 660.958 li
632.151 644.543 li
640.908 650.636 li
cp
ef
604.175 671.772 mo
562.7 695.693 li
553.943 689.599 li
595.419 665.67 li
604.175 671.772 li
ef
506.086 728.369 mo
485.289 740.36 li
476.531 734.267 li
497.329 722.268 li
506.086 728.369 li
cp
ef
476.759 745.274 mo
455.962 757.265 li
447.205 751.172 li
468.002 739.181 li
476.759 745.274 li
cp
ef
554.519 700.414 mo
514.273 723.648 li
505.517 717.546 li
545.77 694.312 li
554.519 700.414 li
ef
705.373 701.17 mo
606.488 758.193 li
594.912 750.13 li
693.79 693.107 li
705.373 701.17 li
cp
ef
815.504 769.16 mo
815.504 777.146 804.75 783.622 791.484 783.622 cv
778.218 783.622 767.464 777.146 767.464 769.16 cv
767.464 761.172 778.218 754.698 791.484 754.698 cv
804.75 754.698 815.504 761.172 815.504 769.16 cv
cp
.90872 1 .358068 .534905 cmyk
f
463.635 855.074 mo
463.635 863.004 451.405 869.431 436.318 869.431 cv
421.232 869.431 409.002 863.004 409.002 855.074 cv
409.002 847.145 421.232 840.717 436.318 840.717 cv
451.405 840.717 463.635 847.145 463.635 855.074 cv
cp
.876249 .890257 .480323 .659937 cmyk
f
919.504 661.64 mo
919.504 671.178 907.243 678.911 892.119 678.911 cv
876.995 678.911 864.734 671.178 864.734 661.64 cv
864.734 652.102 876.995 644.37 892.119 644.37 cv
907.243 644.37 919.504 652.102 919.504 661.64 cv
cp
.90872 1 .358068 .534905 cmyk
f
394.995 647.961 mo
557.51 556.223 li
615.163 589.408 li
616.459 590.154 617.488 591.128 618.27 592.231 cv
620.055 592.231 li
620.055 597.652 li
620.058 597.81 620.058 597.966 620.055 598.124 cv
620.055 598.191 li
620.05 598.191 li
619.954 601.387 618.339 604.544 615.174 606.37 cv
467.19 691.809 li
459.41 696.301 449.826 696.307 442.04 691.826 cv
404.348 670.343 li
393.843 661.86 li
389.211 658.12 389.811 650.887 394.995 647.961 cv
.758968 1 .307103 .328832 cmyk
f
467.19 685.374 mo
615.174 599.935 li
621.706 596.164 621.7 586.735 615.163 582.972 cv
579.402 562.388 li
559.447 546.439 li
394.894 641.444 li
389.749 644.415 389.208 651.632 393.853 655.336 cv
404.304 663.67 li
442.04 685.39 li
449.826 689.872 459.41 689.866 467.19 685.374 cv
0 0 0 0 cmyk
f
455.04 686.48 mo
450.843 686.48 446.701 685.373 443.063 683.279 cv
405.404 661.603 li
395.022 653.324 li
393.115 651.804 392.126 649.537 392.308 647.105 cv
392.49 644.674 393.806 642.58 395.918 641.36 cv
559.78 546.754 li
579.18 562.261 li
615.018 582.889 li
617.721 584.445 619.336 587.235 619.338 590.355 cv
619.34 593.473 617.729 596.266 615.028 597.825 cv
592.191 611.009 li
588.458 607.577 583.765 605.938 578.547 605.938 cv
566.134 605.938 550.76 615.224 538.355 631.735 cv
534.535 636.819 531.293 642.212 528.664 647.687 cv
467.044 683.263 li
463.399 685.368 459.249 686.48 455.04 686.48 cv
level3{
gsave
clp
[227.051 0 0 227.051 392.287 616.618 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[227.051 0 0 227.051 392.287 616.618 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
441.523 685.078 mo
442.073 685.394 li
449.44 689.634 458.414 689.85 465.949 686.057 cv
465.949 692.493 li
458.414 696.286 449.44 696.069 442.073 691.83 cv
441.523 691.513 li
441.523 685.078 li
cp
.613001 1 .0114748 .00198367 cmyk
f
405.404 661.603 mo
579.402 562.388 li
569.243 554.319 li
396.102 654.185 li
405.404 661.603 li
cp
.70544 .682338 .388647 .217746 cmyk
f
653.231 190.057 mo
707.3 470.444 li
708.826 478.025 706.116 484.848 700.189 488.344 cv
357.982 693.195 li
355.294 694.78 351.07 692.464 350.378 689.028 cv
293.624 407.212 li
292.097 399.63 294.808 392.807 300.734 389.312 cv
645.633 185.892 li
648.318 184.309 652.539 186.623 653.231 190.057 cv
cp
.743465 .728176 .495033 .465736 cmyk
f
300.734 389.311 mo
645.633 185.892 li
648.318 184.309 656.054 190.644 656.054 190.644 cv
309.488 394.195 li
303.562 397.691 300.851 404.513 302.378 412.095 cv
345.137 624.417 li
347.875 625.924 li
362.39 697.997 li
353.438 693.023 li
352.491 692.503 351.697 691.743 351.141 690.873 cv
351.103 690.817 li
351.016 690.679 350.941 690.536 350.868 690.393 cv
350.788 690.245 li
350.705 690.072 350.635 689.895 350.572 689.716 cv
350.547 689.656 li
350.479 689.455 350.423 689.251 350.382 689.046 cv
350.378 689.028 li
293.624 407.213 li
292.097 399.63 294.807 392.807 300.734 389.311 cv
cp
.706233 1 .253941 .177249 cmyk
f
364.304 695.598 mo
362.39 697.997 li
353.438 693.023 li
352.492 692.503 351.697 691.743 351.141 690.873 cv
351.103 690.817 li
351.016 690.679 350.942 690.536 350.868 690.393 cv
350.788 690.245 li
350.706 690.072 350.635 689.895 350.572 689.716 cv
350.547 689.656 li
350.48 689.455 350.423 689.251 350.382 689.046 cv
350.378 689.028 li
350.132 687.805 li
364.304 695.598 li
cp
.613001 1 .0114748 .00198367 cmyk
f
644.583 186.549 mo
645.696 185.892 li
647.145 185.038 649.037 185.325 650.584 186.302 cv
658.955 190.955 li
659.757 194.937 li
644.583 186.549 li
cp
f
298.017 391.4 mo
306.785 396.271 li
303.544 399.343 301.824 403.713 301.981 408.629 cv
293.228 403.764 li
293.065 398.846 294.78 394.476 298.017 391.4 cv
cp
f
661.985 194.94 mo
718.74 476.762 li
720.267 484.343 717.556 491.167 711.63 494.663 cv
366.736 698.079 li
364.049 699.664 359.824 697.348 359.132 693.911 cv
302.378 412.094 li
300.851 404.514 303.562 397.69 309.489 394.195 cv
654.387 190.776 li
657.072 189.192 661.293 191.505 661.985 194.94 cv
cp
level3{
gsave
clp
[417.2 0 0 417.2 301.959 444.427 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[417.2 0 0 417.2 301.959 444.427 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
365.797 697.994 mo
366.357 698.019 366.866 697.898 367.31 697.635 cv
712.204 494.218 li
717.745 490.95 720.302 484.516 718.874 477.427 cv
662.119 195.605 li
661.726 193.656 659.815 192.377 658.269 192.308 cv
657.711 192.284 657.203 192.404 656.758 192.667 cv
311.859 396.086 li
306.317 399.354 303.761 405.789 305.188 412.877 cv
361.943 694.694 li
362.118 695.563 362.626 696.382 363.374 697.002 cv
364.092 697.596 364.975 697.958 365.797 697.994 cv
cp
.613001 1 .0114748 .00198367 cmyk
f
654.74 203.172 mo
711.248 483.769 li
366.646 687.013 li
310.137 406.416 li
654.74 203.172 li
cp
.758968 1 .307103 .328832 cmyk
f
651.875 204.861 mo
707.571 481.426 li
365.834 682.98 li
310.137 406.416 li
651.875 204.861 li
cp
.712947 .71194 .415167 .270573 cmyk
f
711.248 483.77 mo
366.646 687.014 li
365.834 682.982 li
707.572 481.427 li
711.248 483.77 li
cp
.758968 1 .307103 .328832 cmyk
f
365.834 682.98 mo
708.071 481.13 li
652.371 204.552 li
310.134 406.402 li
365.834 682.98 li
cp
level3{
gsave
clp
[265.143 561.612 -561.612 265.143 393.065 197.981 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~@bC_]AD$q_B%d4bB\EFdCYAagD;,$jDqb6lESLNoFPHirGME/uH//H#HeeZ%Ibau(J_^;+KAHS.L>Dn1
Lu/14Mr+L7No'g:Ol$-=PMcE@Q/M]CQf7uFRc4;IS`9\MT]6"PU>l4RV;qUVVr[mYWoa9]Xl]T`Yibud
Zf_;g[cd\k\`a"n]]fCr^?GUt_<V($_s@@'`p<[*aR&s-bjGH2cgLi6dI7,9eF<M=fCAnAg@G:Eh":XI
ht@$MiqNKRjSAiWkPP;\l2CY`m/I%dmf*7gnc&RjoD\dlp&>!np\t3qq>UEtqu6[#s8N0*s8N3,s8N90
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[265.143 561.612 -561.612 265.143 393.065 197.981 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~@:E\U@q9+]AS,OeB4u!oC27U$Ci+$,DJsH4E,fo=F*)PIG'A.TG^4R\H@(!dI=?WpJ:W9'JqJ]/Knb>;
LPL\BMMd=NNK&sZOH>TeP*2#mPa%GuQBml)R$jD4S"-%@StD[KTqS3TUSO`_VP^8hW2ZesX/rG*Y-5(6
Z*L[A['d<M\%&rY]">Se]Y2"m^VIY$_8=(,`5KX7`lH-@ai_fNc-=P[cd:%ddF-LneCE.%f@\d1g=tB;
gtgiDhr*JPio9"YjQ5OdkND'ml0@R"m-O-,mdKW6naZ2@oCMVHp%A%Pp\4IXq>'m`qu$Els8W-!s8W-!
~>
<~f\"j/f\+s2g"G'3g"G'3g"P06g=k97g=tB:gY:K;gY:K;gYCT>gt^]?gt^]?gt^]?gtgfBh;-oCh;7#F
hVR,GhVR,GhVR,GhVR/Ihr!AMi8ESQiSibSiSieUio8tWio8tWio9"Yj5]4]jQ,FajlPUcjlPXek2tgg
k2tghkND$kkND$lkih6okih6pl0@R"lg*m&lg*m'm-O*+mHs</mdBN3n*f`7nF5r;naZ/?o()ACoCV\J
p%A"Np@e7Tq"X[\qYL*dr;?Nlrr2ors8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E6'!s8W-"9\l3~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E3%!<E3%!<E3%!WiE)!
s8W-"9\i1"U,&5"pP89#6tM?~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
885.539 445.701 mo
894.06 444.086 893.868 445.611 896.53 446.899 cv
897.768 447.498 899.077 447.106 900.597 450.2 cv
903.328 455.759 901.539 460.753 901.415 462.337 cv
901.053 466.964 899.354 466.195 897.333 469.162 cv
895.447 471.932 884.455 466.977 881.875 462.787 cv
880.99 461.35 878.919 457.034 879.961 452.903 cv
880.654 450.151 882.075 446.358 885.539 445.701 cv
cp
.77615 .986786 .380774 .511833 cmyk
f
897.978 483.616 mo
887.651 483.16 li
887.71 463.187 li
897.219 464.758 li
897.219 464.758 897.502 467.978 897.529 469.055 cv
897.63 473.035 897.978 483.616 897.978 483.616 cv
cp
.593957 1 0 .000244144 cmyk
f
868.229 553.755 mo
873.22 555.266 li
878.158 534.977 li
871.224 532.857 li
868.229 553.755 li
cp
f
881.464 474.689 mo
887.968 483.464 885.744 507.782 885.761 517.926 cv
885.777 526.851 881.441 537.649 878.158 546.439 cv
877.717 547.62 876.754 550.989 874.391 550.969 cv
872.344 550.952 867.982 549.646 868.213 547.026 cv
868.505 543.721 870.321 528.396 871.312 520.16 cv
872.761 508.118 872.227 498.237 871.092 486.568 cv
869.741 472.686 877.671 469.571 881.464 474.689 cv
cp
level3{
gsave
clp
[-.302994 -78.1725 78.1725 -.302994 877.299 559.75 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!6kHC!6tEA!7(?>!719;!7108!7:-6!7C'3!7Kp.!7Td)!7][%!7fX#!7oU!!7oEq!8#9l!8#*g!8+sb
!84j^!8=aZ!8=OT!8FCO!8O7J!8X%C!8`n>!8`_9!8`G1!8i;,!8r)%!9%ks!9%Vl!9.Gf!9.2_!9-rX
!96cR!96KJ!966C!9?'=!9>d5!9GU/!9G@(!9G."!9Fjo!9FXi!9FId!9F4]!9O7]!9O7]!9F1\!9=+[
!9*tY!9!nX"5a(Y#2T=[$/PX^$f(d_%bq$a&_d9c'\WNe(YJcg);+ui*7t5k+4gJm+P-Sn,h;qq-e/1s
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.302994 -78.1725 78.1725 -.302994 877.299 559.75 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!*-&!sAc2"pYD>#mgqG$OdFQ%M'']
&J>]i'GV>u(Ddo*)&X>3*#ot?+!2RH+<_pR,U=Z_~>
<~bKS2Sbg"DWc-FV[cHa_\cHjh_cd:%cd*^7gdF-IkdaQ[oe'umseCE+"e^`4#e^i=&f%/F'f%8O*f@\a.
f\"m1g"G'3g"G*5g=k<9gY:N=gt^`Ah;-oCh;-oCh;-rEhVR/Ihr!AMi8EPOi8ESQiSibSiSibSiSieU
io8tWio8tWio8tXj5]1[j5]1\jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C`jlPUcjlPUcjlPUbjQ,C^
j5].YiSibSi8EMMhVR,Gh;-oCh;-oCgt^]?gY:K;g=k97g"G'3f\"j/f\"j/f@SX+f%/F'f%/F'e^`4#
~>
<~s8Mupr;6?dq"OLTo^hYDnaQ#8md9B,lKRKojQ#4WhVHu@g"=p.f%&:"e'cXjcHXSUaiDE?`59@*^:_(h
\[])U['R$AY-"b)W2HJfU7n3MS!fY0Q'7AnO,f0VLkg\:Jq/?!H[0gXF)c,8ChdWqARf.V?<gZ:=&i0s
:ej_X8Ol3:5sIOq3]T,V1GLO7/1N%p,pOQU*ZZ1;(D[\t&.]3Y$OR.E"Tnf+zzzzzzzzzzzzzzzzzzz!
!!!!~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
867.963 561.652 mo
876.777 560.81 li
876.07 555.553 li
876 554.907 875.453 552.637 873.999 551.667 cv
868.465 552.228 li
868.465 552.228 867.302 554.971 867.018 555.571 cv
866.587 556.482 866.156 559.808 866.156 559.808 cv
867.963 561.652 li
cp
.593957 1 0 .000244144 cmyk
f
868.241 565.307 mo
867.088 565.505 866.949 563.552 866.309 560.985 cv
865.96 559.584 867.218 555.128 867.218 555.128 cv
868.73 556.301 li
868.397 559.246 li
868.397 559.246 869.148 565.152 868.241 565.307 cv
cp
f
876.396 559.995 mo
876.396 559.995 876.371 564.024 876.164 564.915 cv
876.008 565.589 875.402 566.86 874.989 567.411 cv
874.847 567.6 874.439 567.894 874.138 567.821 cv
873.73 567.72 873.707 567.481 873.741 567.186 cv
873.815 566.545 874.417 564.694 874.417 564.694 cv
874.133 560.852 li
876.396 559.995 li
cp
f
872.125 560.675 mo
874.304 561.007 li
874.304 561.007 874.601 564.272 874.555 565.359 cv
874.515 566.289 874.168 567.965 873.854 568.788 cv
873.682 569.239 873.309 569.585 872.88 569.594 cv
872.45 569.603 872.303 569.045 872.305 568.78 cv
872.305 568.779 872.668 566.482 872.633 565.618 cv
872.592 564.609 872.125 560.675 872.125 560.675 cv
cp
f
872.266 561.047 mo
872.266 561.047 872.622 564.244 872.619 565.312 cv
872.617 566.356 872.741 568.009 872.347 569.179 cv
872.236 569.512 871.84 570.052 871.379 570.063 cv
870.917 570.073 870.69 569.444 870.676 569.019 cv
870.676 569.019 870.739 566.514 870.692 565.518 cv
870.641 564.439 869.997 561.277 869.997 561.277 cv
872.266 561.047 li
cp
f
867.841 561.604 mo
870.088 561.061 li
870.088 561.061 870.309 564.169 870.276 565.294 cv
870.25 566.155 870.529 567.815 870.322 568.687 cv
870.255 568.968 870.091 569.69 869.63 569.7 cv
869.168 569.711 868.767 569.044 868.695 568.637 cv
868.545 567.791 868.537 566.062 868.492 565.207 cv
868.445 564.295 867.841 561.604 867.841 561.604 cv
cp
f
885.716 647.394 mo
885.382 646.677 884.329 645.706 883.678 645.515 cv
880.473 644.58 878.348 647.119 877.401 648.648 cv
874.563 653.233 873.27 653.019 870.757 654.994 cv
870.097 655.511 870.445 656.655 870.445 656.655 cv
870.445 656.655 873.726 659.068 876.459 657.788 cv
880.267 656.004 881.973 653.922 881.973 653.922 cv
881.973 655.172 li
884.706 653.775 li
884.991 653.637 885.176 653.35 885.187 653.031 cv
885.187 653.031 886.084 648.187 885.716 647.394 cv
cp
level3{
gsave
clp
[15.451 0 0 15.451 870.353 651.738 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[15.451 0 0 15.451 870.353 651.738 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
914.472 663.477 mo
914.139 662.76 913.086 661.788 912.435 661.598 cv
909.23 660.663 907.105 663.201 906.158 664.731 cv
903.32 669.316 902.027 669.102 899.514 671.076 cv
898.854 671.594 899.202 672.737 899.202 672.737 cv
899.202 672.737 902.483 675.15 905.216 673.871 cv
909.024 672.087 910.73 670.005 910.73 670.005 cv
910.73 671.255 li
913.463 669.857 li
913.748 669.719 913.933 669.433 913.944 669.114 cv
913.944 669.114 914.841 664.269 914.472 663.477 cv
cp
level3{
gsave
clp
[15.451 0 0 15.451 899.11 667.821 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[15.451 0 0 15.451 899.11 667.821 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
878.513 637.357 mo
878.513 637.357 879.158 643.224 879.429 647.544 cv
879.518 648.958 881.901 649.286 883.407 648.452 cv
884.473 647.861 884.85 637.77 884.85 637.77 cv
878.513 637.357 li
cp
.77615 .986786 .380774 .511833 cmyk
f
907.322 651.924 mo
907.322 651.924 907.844 663.808 908.736 664.983 cv
909.536 666.035 911.387 666.098 912.683 665.041 cv
913.602 664.292 914.561 653.929 914.561 653.929 cv
907.322 651.924 li
cp
f
882.361 480.746 mo
883.232 477.002 887.856 474.734 887.856 474.734 cv
887.922 480.795 li
887.922 480.795 888.503 483.285 892.568 483.236 cv
897.227 483.179 897.804 480.795 897.804 480.795 cv
897.723 475.43 li
897.723 475.43 905.912 483.338 906.072 486.099 cv
906.309 490.176 898.645 490.344 892.135 489.238 cv
885.625 488.131 881.436 484.723 882.361 480.746 cv
cp
.382605 .850126 0 0 cmyk
f
887.821 470.626 mo
887.859 475.796 li
887.859 475.796 889.886 476.498 892.503 475.456 cv
896.844 473.726 897.44 467.813 897.44 467.813 cv
897.219 464.758 li
895.219 466.907 892.617 471.398 887.821 470.626 cv
cp
.760037 1 .349035 .464851 cmyk
f
915.282 661.184 mo
915.282 661.178 916.077 631.314 914.516 619.493 cv
914.288 617.767 912.781 611.94 912.492 610.211 cv
910.806 600.13 914.699 575.447 914.699 565.598 cv
914.699 556.593 909.106 535.373 909.106 535.373 cv
876.76 530.685 li
876.76 530.685 873.015 546.541 872.768 550.41 cv
872.082 561.124 870.602 581.948 871.713 595.278 cv
871.902 597.556 874.015 601.922 874.17 604.662 cv
875.071 620.509 877.552 645.13 877.554 645.248 cv
877.535 646.364 881.438 648.307 884.853 646.781 cv
885.997 646.269 886.42 645.494 886.477 644.694 cv
887.187 634.758 889.14 616.282 888.744 606.811 cv
888.664 604.904 887.758 597.407 887.658 595.496 cv
887.088 584.577 891.543 572.363 891.543 572.363 cv
891.543 572.363 893.996 600.095 896.819 610.682 cv
897.313 612.533 899.464 616.446 899.906 618.301 cv
901.82 626.335 906.248 658.13 906.258 660.624 cv
906.263 661.825 907.297 663.63 911.408 663.598 cv
913.532 663.581 915.282 662.273 915.282 661.184 cv
cp
level3{
gsave
clp
[.605989 114.229 -114.229 .605989 893.075 552.701 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~f[9a"f[9a"g!]p$g!g!%g=-*&g=-*&gXQ9(gXQ9(gsuH*gsuH*h:DW,h:M]-hUql/hUql/hqA&1hqA&1
hqJ,2i7n;4i7n;4iS=J6inaY8inaY8j50h:j59n;jPU"<jP^(=jl$1>k2H@@kMlOBkMuUCkN)[DkiMjF
l/r$HlK8-Ilf\<KlfeBLm-4QNm-=WOmHafQmHjlRmd0uSnF$>WnF-DYnaZY\o(2n_o(;t`o_&7cp%JFe
p%\RgpA+ajp\Y!mp\k-oq#:<qq>UEsqYpNtqu6X!r;Qa"r;Qa#rVlj$rr3$(s8N0+s8N3,s8N6.s8N90
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.605989 114.229 -114.229 .605989 893.075 552.701 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~f@SX+f@\a.f\"j/f\+s2g"G'3g"P06g=k97g=tB:gY:K;gYCT>gt^]?gtgfBh;-oCh;7#FhVR,GhVR,G
hVR/Ihr!>Khr!AMi8ESQiSibSiSieUio8tWio9"Yj5]1[j5]4]jQ,FajlPXek2tggk2tggk2tjikND'm
kih6pl07HtlK[["lK[[#lg*m&lg*m'm-O**m-O*+mHs</mdKW5n*f`7nF5r;naZ/>naZ/?o(2JFo^qeJ
o^qeJp%A"Np@e4Rp@e4Rp\4FVq"XXZq>'j^qYL'bqtp9fqtp9fr;?KjrVc]nrr2ors8W-!s8W-!s8W-!
~>
<~dF$@hdF-IkdaQ[oe'ldpe'ldpe'umseC<!teCE+"e^`4#e^i=&f%8O*f@\a.f\"j/f\+s2g"G'3g"P06
g=k<9gY:K;gY:N=gt^`Ah;-oCh;-rEhVR/Ihr!>Khr!AMi8EPOi8ESQiSieUio9"Yj5]4]jQ,FajlPXe
k2tggk2tghkND$lkih6pl07HtlK[[#lg*m'm-O**m-O*+mI'E2n*f`7nF?&>o(2JFo^qeKp%A"Op@e4S
p\4IXq>'j^qYL*dr;?Nlrr2ors8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!$#!WiE)!s8W-"9\i1"
U,&5~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E3%!<E3%!<E3%!WiE)!WiE)!
s8W-!s8W-"9\i1"9\i1"U,&5"pP89"pP89#6tJ=#RC\A~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
913.864 484.995 mo
909.401 480.968 901.945 476.996 897.689 474.549 cv
897.728 475.549 li
897.728 475.549 901.256 478.236 898.846 482.061 cv
897.097 484.839 891.158 485.131 888.441 483.661 cv
885.876 482.272 884.017 478.38 887.861 475.228 cv
887.866 473.813 li
884.926 472.801 883.269 471.995 878.739 472.043 cv
874.515 472.088 870.996 478.014 870.445 489.022 cv
870.131 495.292 873.955 521.733 873.955 533.299 cv
873.955 536.9 871.776 548.437 906.027 548.453 cv
909.106 548.454 911.421 545.892 912.067 544.721 cv
917.006 535.774 910.196 531.856 915.335 516.947 cv
916.268 514.239 919.371 489.962 913.864 484.995 cv
cp
level3{
gsave
clp
[-.302994 -78.1725 78.1725 -.302994 893.991 559.685 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.302994 -78.1725 78.1725 -.302994 893.991 559.685 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
909.936 550.074 mo
913.828 553.545 li
926.848 537.219 li
921.45 532.378 li
909.936 550.074 li
cp
.593957 1 0 .000244144 cmyk
f
913.993 485.46 mo
925.141 492.636 935.516 510.662 935.534 520.806 cv
935.549 529.731 927.637 540.314 922.74 545.133 cv
921.86 546 919.251 547.942 918.249 547.191 cv
916.547 545.916 913.213 542.195 914.812 540.106 cv
916.828 537.471 921.554 528.099 921.415 519.805 cv
921.336 515.072 914.979 510.044 910.193 501.019 cv
904.141 489.607 908.637 482.012 913.993 485.46 cv
cp
level3{
gsave
clp
[-.241674 -62.3519 62.3519 -.241674 921.563 544.036 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.241674 -62.3519 62.3519 -.241674 921.563 544.036 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
904.185 554.135 mo
910.947 559.85 li
914.213 555.67 li
914.626 555.169 915.727 552.229 915.406 550.51 cv
912.312 547.178 li
912.312 547.178 908.501 548.993 907.874 549.209 cv
906.921 549.537 904.241 551.553 904.241 551.553 cv
904.185 554.135 li
cp
.593957 1 0 .000244144 cmyk
f
901.418 556.433 mo
900.471 555.747 902.623 554.104 903.691 551.683 cv
904.101 550.753 908.33 549.042 908.33 549.042 cv
908.548 550.944 li
906.21 552.763 li
906.21 552.763 903.948 555.892 902.977 556.243 cv
902.674 556.352 902.164 556.973 901.418 556.433 cv
cp
f
910.991 559.802 mo
910.991 559.802 908.936 561.713 908.155 562.188 cv
907.564 562.547 906.231 563.003 905.548 563.091 cv
905.313 563.122 904.818 563.036 904.66 562.769 cv
904.446 562.407 904.602 562.223 904.836 562.042 cv
905.348 561.646 907.091 560.783 907.091 560.783 cv
909.64 557.895 li
910.991 559.802 li
cp
f
907.745 556.889 mo
909.58 558.015 li
909.58 558.015 907.453 560.508 906.643 561.236 cv
905.951 561.857 904.508 562.78 903.701 563.13 cv
903.258 563.323 902.751 563.297 902.444 562.998 cv
902.137 562.697 902.434 562.201 902.624 562.017 cv
902.624 562.017 904.522 560.671 905.115 560.042 cv
905.808 559.307 907.745 556.889 907.745 556.889 cv
cp
f
907.625 556.79 mo
907.625 556.79 905.588 559.278 904.822 560.023 cv
904.074 560.751 902.977 561.995 901.866 562.532 cv
901.549 562.684 900.886 562.779 900.557 562.456 cv
900.227 562.133 900.518 561.531 900.813 561.224 cv
900.813 561.224 902.648 559.518 903.328 558.789 cv
904.064 557.998 905.875 555.328 905.875 555.328 cv
907.625 556.79 li
cp
f
904.134 554.014 mo
906.093 555.241 li
906.093 555.241 904.025 557.572 903.197 558.334 cv
902.563 558.917 901.57 560.277 900.802 560.738 cv
900.554 560.887 899.923 561.274 899.594 560.952 cv
899.264 560.629 899.46 559.876 899.701 559.54 cv
900.201 558.84 901.432 557.628 902.013 556.998 cv
902.632 556.326 904.134 554.014 904.134 554.014 cv
cp
f
880.776 456.2 mo
880.776 456.2 880.776 462.356 881.218 464.758 cv
882.135 469.738 883.483 474.964 888.275 475.405 cv
892.206 475.766 896.646 472.305 897.038 466.594 cv
897.256 463.421 897.303 455.635 897.303 455.635 cv
896.425 451.758 879.916 452.407 880.776 456.2 cv
cp
f
897.578 460.799 mo
895.68 460.981 895.167 462.161 894.954 463.448 cv
894.741 464.735 895.836 465.219 897.044 464.951 cv
898.284 464.674 898.886 463.856 899.099 462.57 cv
899.312 461.283 898.846 460.678 897.578 460.799 cv
cp
f
897.552 461.962 mo
897.44 463.272 li
897.919 463.427 898.377 462.987 898.425 462.422 cv
898.473 461.858 898.01 461.694 897.552 461.962 cv
cp
.760037 1 .349035 .464851 cmyk
f
899.993 452.498 mo
899.368 451.037 899.494 449.477 895.941 447.68 cv
892.924 446.154 886.057 445.606 881.896 449.422 cv
878.417 452.613 878.282 459.541 881.672 459.715 cv
882.747 459.771 883.82 458.758 884.443 459.064 cv
884.687 459.183 884.81 459.524 885.873 459.714 cv
886.839 459.885 888.666 459.102 889.142 458.863 cv
892.51 457.174 892.609 456.392 894.284 457.586 cv
894.68 457.868 895.043 458.261 895.378 458.782 cv
895.732 459.332 896.002 461.836 896.002 461.836 cv
896.002 461.836 896.166 461.88 896.916 461.309 cv
898.428 460.161 899.025 461.387 899.025 461.387 cv
899.025 461.387 901.782 456.683 899.993 452.498 cv
cp
.77615 .986786 .380774 .511833 cmyk
f
642.956 811.781 mo
641.177 810.867 li
641.634 809.978 li
643.413 810.892 li
642.956 811.781 li
cp
.571832 .880613 0 0 cmyk
f
614.882 797.357 mo
611.126 795.427 li
611.583 794.539 li
615.339 796.468 li
614.882 797.357 li
cp
622.395 801.217 mo
618.639 799.288 li
619.096 798.399 li
622.852 800.329 li
622.395 801.217 li
cp
629.908 805.077 mo
626.151 803.147 li
626.608 802.258 li
630.365 804.188 li
629.908 805.077 li
cp
637.421 808.937 mo
633.664 807.007 li
634.121 806.119 li
637.878 808.048 li
637.421 808.937 li
cp
f
607.369 793.498 mo
605.59 792.584 li
606.047 791.695 li
607.826 792.609 li
607.369 793.498 li
cp
f
647.986 825.059 mo
654.574 828.863 665.256 828.863 671.845 825.059 cv
678.433 821.255 678.433 815.088 671.845 811.284 cv
665.257 807.48 654.575 807.48 647.986 811.285 cv
641.398 815.089 641.398 821.255 647.986 825.059 cv
cp
.90872 1 .358068 .534905 cmyk
f
664.258 808.709 mo
663.023 808.541 661.754 808.444 660.488 808.422 cv
660.506 807.422 li
661.811 807.444 663.119 807.545 664.393 807.718 cv
664.258 808.709 li
cp
651.16 809.667 mo
650.868 808.71 li
652.074 808.341 653.355 808.046 654.675 807.833 cv
654.835 808.819 li
653.56 809.026 652.323 809.311 651.16 809.667 cv
cp
673.152 811.581 mo
673.124 811.564 li
672.109 810.978 670.972 810.458 669.752 810.023 cv
670.088 809.082 li
671.364 809.536 672.557 810.082 673.634 810.704 cv
673.152 811.581 li
cp
643.233 814.345 mo
642.474 813.693 li
643.276 812.761 644.296 811.897 645.505 811.125 cv
646.044 811.966 li
644.916 812.687 643.97 813.488 643.233 814.345 cv
cp
678.451 818.548 mo
678.38 817.408 677.982 816.288 677.266 815.219 cv
678.097 814.663 li
678.913 815.88 679.367 817.168 679.449 818.487 cv
678.451 818.548 li
cp
641.717 823.135 mo
640.906 821.916 640.456 820.627 640.381 819.305 cv
641.379 819.249 li
641.445 820.39 641.839 821.511 642.55 822.583 cv
641.717 823.135 li
cp
674.35 826.683 mo
673.81 825.841 li
674.936 825.119 675.88 824.317 676.616 823.458 cv
677.376 824.108 li
676.577 825.042 675.559 825.908 674.35 826.683 cv
cp
649.771 828.753 mo
648.482 828.295 647.28 827.746 646.198 827.121 cv
646.399 826.66 li
646.653 826.23 li
646.399 826.66 li
646.683 826.247 li
647.728 826.849 648.874 827.373 650.105 827.811 cv
649.771 828.753 li
cp
665.184 829.988 mo
665.024 829.002 li
666.294 828.795 667.531 828.508 668.698 828.15 cv
668.991 829.107 li
667.78 829.478 666.5 829.774 665.184 829.988 cv
cp
659.354 830.404 mo
658.049 830.382 656.741 830.283 655.466 830.11 cv
655.601 829.12 li
656.836 829.287 658.105 829.382 659.371 829.404 cv
659.354 830.404 li
cp
.571832 .880613 0 0 cmyk
f
644.429 808.208 mo
675.402 808.201 li
675.387 817.146 li
675.251 819.326 673.746 821.482 670.864 823.145 cv
664.816 826.637 655.011 826.637 648.963 823.146 cv
646.082 821.482 644.577 819.326 644.441 817.146 cv
644.429 808.208 li
cp
level3{
gsave
[-30.9732 -1.3906e-09 -1.3906e-09 30.9732 675.402 816.983 ]ct
<<
/PatternType 2
/Shading
/3 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-30.9732 -1.3906e-09 -1.3906e-09 30.9732 675.402 816.983 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/3 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
648.965 814.347 mo
655.013 817.839 664.818 817.839 670.866 814.346 cv
676.914 810.855 676.914 805.194 670.866 801.702 cv
664.819 798.211 655.013 798.211 648.965 801.703 cv
642.918 805.194 642.917 810.855 648.965 814.347 cv
cp
0 0 0 0 cmyk
ef
659.906 816.162 mo
663.959 816.162 667.761 815.255 670.613 813.608 cv
673.378 812.012 674.902 809.92 674.902 807.715 cv
674.902 805.512 673.379 803.421 670.613 801.824 cv
667.762 800.177 663.96 799.271 659.907 799.271 cv
655.855 799.271 652.053 800.177 649.202 801.824 cv
646.436 803.421 644.913 805.512 644.913 807.716 cv
644.913 809.92 646.436 812.012 649.201 813.609 cv
652.052 815.255 655.854 816.162 659.905 816.162 cv
659.906 816.162 li
cp
0 .801541 1 0 cmyk
ef
657.66 805.527 mo
659.533 806.609 li
658.496 808.842 li
662.355 808.238 li
664.245 809.33 li
655.57 810.532 li
657.66 805.527 li
cp
0 0 0 0 cmyk
f
700.851 418.128 mo
697.674 416.529 690.906 413.358 687.359 413.619 cv
677.778 414.325 662.203 427.964 653.09 431.008 cv
647.492 432.879 629.84 435.122 629.84 435.122 cv
635.699 454.433 li
635.699 454.433 652.615 457.134 655.542 456.964 cv
661.469 456.619 675.468 445.125 682.902 445.296 cv
686.037 445.368 694.174 448.704 695.268 448.299 cv
695.722 448.132 698.974 446.203 698.974 446.203 cv
698.974 446.203 700.976 446.249 702.405 446.333 cv
703.744 446.411 705.402 444.548 705.158 443.34 cv
704.509 440.128 694.937 436.261 694.937 436.261 cv
694.937 436.261 696.923 435.921 700.336 436.982 cv
703.074 437.833 706.95 439.477 709.816 439.508 cv
712.069 439.534 713.262 437.605 712.542 436.506 cv
710.447 433.305 694.71 424.824 694.71 424.824 cv
694.71 424.824 708.323 431.009 710.61 430.339 cv
712.268 429.852 713.652 427.92 713.342 426.858 cv
712.274 423.201 704.255 419.84 700.851 418.128 cv
cp
f
594.409 310.429 mo
594.077 333.779 550.257 431.996 625.048 426.624 cv
630.845 426.208 647.558 419.862 647.875 422.214 cv
648.477 426.681 650.178 448.323 650.178 448.323 cv
649.868 452.105 642.883 454.94 642.883 454.94 cv
642.883 454.94 512.162 554.595 535.524 322.73 cv
538.415 294.035 549.282 269.859 564.693 264.865 cv
579.853 259.952 594.765 285.411 594.409 310.429 cv
cp
level3{
gsave
clp
[37.8869 184.304 184.304 -37.8869 560.602 267.356 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~aJ8e9aJAk:aeo+=b,>:?bGbIAbGtUCbcCdEbcLjFc)q$HcEI9Kc`mHMd'<WOd'NcQdBrrSd^B,Ud^T8W
e%#GYe@GV[e[ke]f"D%`f"M+af>%@dfYIOfftm^hg;EskgVj-mgrBBph8fQrh9#]thTGm!hou-$hp29&
i6VH(iR.]+im[r.j4+,0jOO;2jk'P5k1Te8kM#t:khQ4=l.uC?lJMXBlf%mEm,S-HmH+BKmcOQMn*'fP
n`p/To'HDWoBuY[o^Vt_p%8:cp@eOfq"Xmjq>1-nqYU<pr;Q`urr2s#s8N'%s8N-(s8N3+s8N6.s8N90
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[37.8869 184.304 184.304 -37.8869 560.602 267.356 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~a2c6@a2l?CaN;QGai_cKb0%lLb0.uObKJ)PbKS2Sbg"DWc-FV[cHjh_cd0q`cd:%cd*^7gdF$@hdF-Ik
daHUne'lgreC<%!e^`4#e^`7%f%/I)f@S[-f\"m1g"G*5g=k<9gY:N=gt^]?gt^`Ah;-rEhVR,GhVR/I
hr!>Li8EPPiSibTio8tXj5]1\jQ,C`jlPUdk2tghkND$lkih6pl07HtlK[[#lg*m'm-O*+mHs</mdBN3
n*fc8naZ/>o()ABoCMSFo^qeJp%A"Np@e7Tq"XXZq>'j^qYL*dr;?Nlrr2ors8W-!s8W-!s8W-!s8W-!
~>
<~USO]]UnsobVPg>iVl6PmW2ZbrWiN2$X/rD(XKAV,Xfeh1YHY78Yd(I<Z*L[AZa@*H['d<L[C3NQ\%&rX
\@B)[\[f;_]"5Mc]Y(qk]tM.o^V@S"^qde&_84"*_o'F2`5KX6`l?'>a2c9BaiV]Jb0%oNbfn>VcHab^
cd0qad*^7hdaQ[peC<!ue^`4$f%8O+f\+s3g=k98gYCT?h;-oDhV[5Ki8NYSioB([jQ5Lck2tghkNM-o
l07Kulg*p(mHs?0n*ol;o(2MGp%A%Pp\4IXq>'m`qtp9fr;HTns8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!$#!WiH+"9\i1"U,&5
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E3%!<E3%!WiE)!s8W-
"9\i1"U,&5"pP;;#RC\A~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
540.923 165.932 mo
502.942 157.002 489.249 178.896 489.249 178.896 cv
489.249 178.896 475.644 180.332 470.359 194.785 cv
460.864 220.754 475.368 240.104 476.701 247.055 cv
480.597 267.363 487.825 263.11 498.329 275.244 cv
508.135 286.57 560.796 260.905 570.289 241.07 cv
573.544 234.271 576.131 204.878 570.555 186.726 cv
567.991 178.38 550.56 168.198 540.923 165.932 cv
cp
level3{
gsave
clp
[88.7288 58.7531 58.7531 -88.7288 477.788 191.296 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[88.7288 58.7531 58.7531 -88.7288 477.788 191.296 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
578.316 299.615 mo
578.364 281.422 546.839 262.06 517.838 268.624 cv
488.838 275.187 468.403 299.8 468.355 317.993 cv
468.307 336.186 502.817 334.998 531.818 328.433 cv
560.818 321.87 578.268 317.807 578.316 299.615 cv
cp
.740627 .664027 .00866712 0 cmyk
f
499.691 321.574 mo
544.048 329.603 li
538.788 243.57 li
496.592 253.727 li
496.617 272.917 li
499.691 321.574 li
cp
0 0 0 0 cmyk
f
540.747 276.647 mo
542.286 299.628 li
542.286 299.628 533.411 303.421 521.313 299.666 cv
501.24 293.436 496.61 267.369 496.61 267.369 cv
496.592 253.727 li
506.284 262.6 519.46 281.682 540.747 276.647 cv
cp
.188876 .159243 0 0 cmyk
f
562.933 260.26 mo
548.516 257.985 538.71 261.638 538.71 261.638 cv
541.6 285.999 li
541.6 285.999 549.52 302.643 537.684 306.179 cv
504.046 316.227 498.914 294.868 497.374 283.397 cv
497.161 281.807 496.886 277.161 496.886 277.161 cv
478.453 287.576 442.745 305.952 429.326 325.61 cv
407.653 357.357 432.483 464.866 427.283 505.882 cv
423.717 534.018 438.061 566.505 465.928 574.008 cv
504.742 584.458 550.404 573.96 573.456 545.679 cv
600.513 512.486 601.54 492.647 598.502 485.61 cv
591.179 468.648 607.722 358.98 601.525 318.205 cv
594.803 273.964 573.048 261.857 562.933 260.26 cv
cp
level3{
gsave
clp
[50.5298 245.806 245.806 -50.5298 495.246 327.65 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[50.5298 245.806 245.806 -50.5298 495.246 327.65 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
572.788 218.404 mo
572.788 218.404 572.182 251.067 571.383 261.922 cv
569.727 284.421 561.935 297.26 540.919 298.565 cv
526.551 299.457 501.772 286.304 497.499 264.153 cv
494.815 250.238 494.906 215.142 494.906 215.142 cv
496.934 197.544 574.772 201.184 572.788 218.404 cv
cp
0 0 0 0 cmyk
f
493.596 239.403 mo
503.042 239.266 505.31 244.156 507.074 250.976 cv
508.838 257.796 505.166 264.079 499.039 264.055 cv
492.728 264.031 487.896 259.29 486.132 252.472 cv
484.369 245.652 487.291 239.494 493.596 239.403 cv
cp
f
494.509 248.115 mo
496.296 257.079 li
494.226 258.006 491.319 253.065 490.826 250.59 cv
490.333 248.113 492.327 247.159 494.509 248.115 cv
cp
.188876 .159243 0 0 cmyk
f
483.051 206.973 mo
485.255 200.231 484.05 193.367 499.245 183.921 cv
512.153 175.897 542.724 170.617 562.958 185.814 cv
579.872 198.519 577.038 244.647 577.038 244.647 cv
566.036 238.816 li
566.174 243.646 li
566.174 243.646 554.632 241.317 552.292 240.789 cv
529.118 235.569 521.821 240.001 506.333 232.927 cv
504.93 244.249 li
504.93 244.249 500.93 241.24 499.605 240.56 cv
495.962 238.687 490.357 240.11 490.357 240.11 cv
490.357 240.11 476.745 226.278 483.051 206.973 cv
cp
level3{
gsave
clp
[88.7288 58.7531 58.7531 -88.7288 482.732 183.831 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[88.7288 58.7531 58.7531 -88.7288 482.732 183.831 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
558.923 269.54 mo
557.245 269.43 555.557 268.519 554.498 268.174 cv
551.498 267.196 549.029 267.751 545.774 269.367 cv
542.496 270.995 540.487 272.961 539.007 274.858 cv
537.27 277.084 535.625 281.396 533.983 282.558 cv
516.024 295.269 497.316 264.796 497.316 264.796 cv
497.316 264.796 502.553 296.835 522.548 302.616 cv
543.54 308.686 560.173 297.014 566.482 287.767 cv
574.485 276.037 572.111 240.956 572.111 240.956 cv
572.111 240.956 570.449 270.285 558.923 269.54 cv
cp
.706233 1 .253941 .177249 cmyk
f
723.605 455.683 mo
720.951 456.658 719.404 455.738 720.15 453.628 cv
720.896 451.517 723.652 449.017 726.306 448.043 cv
728.96 447.068 730.507 447.988 729.761 450.098 cv
729.015 452.208 726.259 454.709 723.605 455.683 cv
cp
728.855 441.893 mo
733.036 430.068 li
733.292 429.343 732.761 429.028 731.85 429.362 cv
721.156 433.29 li
720.245 433.624 719.299 434.482 719.043 435.207 cv
703.743 478.48 li
703.487 479.205 704.018 479.52 704.929 479.186 cv
715.623 475.258 li
716.534 474.924 717.48 474.066 717.736 473.341 cv
721.917 461.516 li
728.565 458.866 735.315 452.651 737.18 447.374 cv
739.046 442.097 735.332 439.724 728.855 441.893 cv
cp
level3{
gsave
clp
[35.7847 -2.00882 2.00882 35.7847 702.351 455.174 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[35.7847 -2.00882 2.00882 35.7847 702.351 455.174 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
726.158 447.954 mo
723.503 448.928 720.747 451.429 720.001 453.539 cv
719.613 454.636 719.849 455.407 720.534 455.762 cv
719.966 455.376 719.792 454.64 720.15 453.628 cv
720.896 451.517 723.652 449.017 726.306 448.043 cv
727.581 447.575 728.595 447.547 729.228 447.876 cv
728.613 447.457 727.537 447.448 726.158 447.954 cv
cp
.632837 0 .235508 0 cmyk
f
732.887 429.979 mo
728.706 441.804 li
728.908 441.745 li
733.036 430.068 li
733.179 429.664 733.07 429.393 732.794 429.286 cv
732.953 429.425 733 429.66 732.887 429.979 cv
cp
0 0 0 0 cmyk
f
737.032 447.286 mo
735.166 452.562 728.416 458.777 721.768 461.428 cv
717.587 473.254 li
717.331 473.977 716.385 474.836 715.474 475.171 cv
704.78 479.097 li
704.378 479.245 704.056 479.259 703.837 479.174 cv
704.038 479.35 704.421 479.373 704.929 479.186 cv
715.623 475.258 li
716.534 474.924 717.48 474.066 717.736 473.341 cv
721.917 461.516 li
728.565 458.866 735.315 452.651 737.18 447.374 cv
738.134 444.674 737.622 442.743 736.034 441.782 cv
737.507 442.771 737.956 444.671 737.032 447.286 cv
cp
f
735.881 441.701 mo
735.683 441.584 li
735.674 441.591 li
735.881 441.701 li
cp
.252415 .199252 .203738 0 cmyk
f
726.306 448.043 mo
723.652 449.017 720.896 451.517 720.15 453.628 cv
719.665 454.999 720.153 455.863 721.279 456.036 cv
721.029 455.619 721.004 455.03 721.265 454.291 cv
722.011 452.181 724.767 449.68 727.421 448.706 cv
728.351 448.365 729.14 448.26 729.747 448.354 cv
729.283 447.58 728.031 447.409 726.306 448.043 cv
cp
f
732.88 429.318 mo
732.726 429.226 li
732.7 429.251 li
732.88 429.318 li
cp
f
715.626 475.257 mo
715.893 475.158 716.166 475.017 716.422 474.839 cv
717.528 475.497 li
717.272 475.675 717.005 475.82 716.738 475.919 cv
706.044 479.849 li
705.559 480.03 705.186 480.02 704.979 479.86 cv
704.973 479.865 li
703.902 479.228 li
704.116 479.355 704.471 479.355 704.931 479.188 cv
715.626 475.257 li
cp
.782406 .641779 0 0 cmyk
f
736.233 441.91 mo
736.995 442.363 li
738.697 443.294 739.28 445.257 738.295 448.036 cv
736.428 453.313 729.683 459.53 723.029 462.179 cv
718.849 474.004 li
718.792 474.163 718.699 474.337 718.575 474.511 cv
717.463 473.849 li
717.587 473.675 717.686 473.505 717.737 473.341 cv
721.917 461.518 li
728.565 458.865 735.315 452.651 737.183 447.374 cv
738.092 444.79 737.664 442.909 736.233 441.91 cv
cp
f
733.036 430.068 mo
728.855 441.893 li
729.376 441.718 729.871 441.585 730.355 441.467 cv
734.151 430.731 li
734.285 430.352 734.199 430.089 733.96 429.968 cv
733.965 429.964 li
732.881 429.318 li
733.095 429.446 733.164 429.706 733.036 430.068 cv
cp
f
703.831 479.19 mo
703.898 479.23 li
703.843 479.179 li
703.831 479.19 li
cp
.252415 .199252 .203738 0 cmyk
f
717.463 473.849 mo
718.575 474.511 li
718.316 474.872 717.948 475.223 717.528 475.497 cv
716.422 474.839 li
716.836 474.561 717.204 474.211 717.463 473.849 cv
cp
.234165 .60528 0 0 cmyk
f
699.882 496.607 mo
700.003 496.559 700.131 496.506 700.252 496.45 cv
703.975 498.666 li
703.848 498.718 703.726 498.775 703.599 498.819 cv
566.232 549.258 li
565.517 549.522 564.951 549.535 564.6 549.353 cv
564.594 549.359 li
560.651 547.013 li
560.681 546.985 li
560.994 547.318 561.642 547.373 562.515 547.047 cv
699.882 496.607 li
cp
level3{
gsave
clp
[-175.199 125.327 -125.327 -175.199 743.823 443.068 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-175.199 125.327 -125.327 -175.199 743.823 443.068 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
732.532 409.173 mo
736.469 411.516 li
736.408 411.572 li
736.572 411.807 736.596 412.143 736.437 412.573 cv
707.056 495.682 li
707.024 495.774 706.987 495.862 706.943 495.955 cv
703.226 493.744 li
703.27 493.65 703.307 493.562 703.339 493.47 cv
732.72 410.361 li
732.917 409.807 732.823 409.402 732.52 409.185 cv
732.532 409.173 li
cp
level3{
gsave
clp
[35.4477 -92.2365 92.2365 35.4477 704.198 493.001 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[35.4477 -92.2365 92.2365 35.4477 704.198 493.001 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
732.722 410.363 mo
703.339 493.47 li
702.92 494.655 701.373 496.058 699.883 496.605 cv
562.516 547.048 li
561.026 547.595 560.157 547.079 560.576 545.894 cv
589.96 462.788 li
590.379 461.603 591.926 460.2 593.416 459.652 cv
730.783 409.21 li
732.273 408.662 733.141 409.178 732.722 410.363 cv
cp
0 .801541 1 0 cmyk
f
724.922 417.724 mo
724.377 418.219 li
724.898 418.529 li
725.443 418.035 li
724.922 417.724 li
cp
.12726 .0970169 .102968 0 cmyk
f
577.547 533.429 mo
577.002 533.923 li
577.523 534.233 li
578.068 533.739 li
577.547 533.429 li
cp
f
725.439 418.032 mo
700.289 489.165 li
577.536 534.241 li
602.686 463.109 li
725.439 418.032 li
cp
.782406 .641779 0 0 cmyk
f
724.917 417.721 mo
699.767 488.853 li
577.014 533.93 li
602.163 462.798 li
724.917 417.721 li
cp
0 0 0 0 cmyk
f
601.229 516.26 mo
603.64 515.376 li
621.953 463.58 li
619.541 464.465 li
601.229 516.26 li
cp
609.501 513.223 mo
611.912 512.338 li
630.225 460.543 li
627.814 461.427 li
609.501 513.223 li
cp
645.579 492.711 mo
647.991 491.825 li
663.316 448.391 li
660.904 449.277 li
645.579 492.711 li
cp
650.864 498.034 mo
653.276 497.148 li
671.588 445.353 li
669.177 446.239 li
650.864 498.034 li
cp
667.409 491.958 mo
669.821 491.073 li
688.133 439.278 li
685.722 440.163 li
667.409 491.958 li
cp
675.682 488.921 mo
678.093 488.035 li
696.406 436.24 li
693.995 437.126 li
675.682 488.921 li
cp
.782406 .641779 0 0 cmyk
f
703.226 493.744 mo
706.943 495.955 li
706.449 496.975 705.231 498.089 703.975 498.666 cv
700.252 496.45 li
701.514 495.878 702.731 494.763 703.226 493.744 cv
cp
.151003 .836576 0 0 cmyk
f
732.351 410.142 mo
702.967 493.249 li
702.548 494.433 701.001 495.838 699.511 496.384 cv
562.144 546.828 li
561.531 547.052 561.032 547.089 560.676 546.981 cv
560.986 547.316 561.639 547.371 562.516 547.048 cv
699.883 496.605 li
701.373 496.058 702.92 494.655 703.339 493.47 cv
732.722 410.363 li
732.969 409.666 732.761 409.209 732.251 409.055 cv
732.468 409.289 732.523 409.655 732.351 410.142 cv
cp
0 .131472 .110536 0 cmyk
f
726.305 446.233 mo
727.608 447.008 726.747 449.377 724.382 451.523 cv
722.017 453.669 719.042 454.779 717.739 454.004 cv
716.435 453.228 717.296 450.86 719.661 448.714 cv
722.027 446.568 725.001 445.457 726.305 446.233 cv
cp
1 1 .0230716 .0349126 cmyk
f
720.572 453.879 mo
717.918 454.853 716.371 453.932 717.117 451.823 cv
717.863 449.713 720.619 447.213 723.273 446.238 cv
725.927 445.263 727.474 446.183 726.728 448.294 cv
725.982 450.403 723.226 452.904 720.572 453.879 cv
cp
725.822 440.089 mo
730.003 428.263 li
730.259 427.539 729.728 427.223 728.817 427.557 cv
718.123 431.484 li
717.212 431.819 716.266 432.677 716.01 433.402 cv
700.71 476.675 li
700.454 477.4 700.985 477.715 701.896 477.381 cv
712.589 473.454 li
713.501 473.12 714.447 472.261 714.703 471.537 cv
718.884 459.712 li
725.532 457.06 732.281 450.845 734.147 445.569 cv
736.013 440.293 732.299 437.92 725.822 440.089 cv
cp
.782406 .641779 0 0 cmyk
f
723.124 446.149 mo
720.47 447.124 717.714 449.625 716.968 451.734 cv
716.58 452.832 716.816 453.602 717.501 453.958 cv
716.933 453.571 716.758 452.836 717.117 451.823 cv
717.863 449.713 720.619 447.213 723.273 446.238 cv
724.547 445.77 725.562 445.743 726.195 446.071 cv
725.58 445.652 724.504 445.643 723.124 446.149 cv
cp
0 0 0 0 cmyk
f
729.854 428.174 mo
725.673 440 li
725.874 439.94 li
730.003 428.263 li
730.146 427.859 730.037 427.589 729.76 427.481 cv
729.919 427.621 729.967 427.855 729.854 428.174 cv
cp
f
733.998 445.481 mo
732.133 450.757 725.383 456.972 718.735 459.624 cv
714.554 471.449 li
714.298 472.172 713.352 473.031 712.441 473.366 cv
701.747 477.293 li
701.344 477.44 701.023 477.455 700.803 477.37 cv
701.004 477.546 701.387 477.568 701.896 477.381 cv
712.589 473.454 li
713.501 473.12 714.446 472.261 714.703 471.537 cv
718.883 459.712 li
725.532 457.06 732.281 450.845 734.147 445.569 cv
735.101 442.87 734.589 440.937 733.001 439.977 cv
734.474 440.966 734.923 442.866 733.998 445.481 cv
cp
f
732.848 439.896 mo
732.65 439.778 li
732.641 439.787 li
732.848 439.896 li
cp
.252415 .199252 .203738 0 cmyk
f
723.273 446.238 mo
720.619 447.213 717.863 449.713 717.117 451.823 cv
716.632 453.194 717.12 454.058 718.246 454.231 cv
717.996 453.814 717.971 453.225 718.232 452.486 cv
718.978 450.377 721.734 447.876 724.388 446.901 cv
725.318 446.56 726.107 446.456 726.714 446.549 cv
726.25 445.775 724.998 445.604 723.273 446.238 cv
cp
level3{
gsave
clp
[10.1054 -.567279 .567279 10.1054 716.788 450.314 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.1054 -.567279 .567279 10.1054 716.788 450.314 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
729.847 427.513 mo
729.693 427.422 li
729.667 427.445 li
729.847 427.513 li
cp
.252415 .199252 .203738 0 cmyk
f
712.593 473.452 mo
712.86 473.353 713.133 473.213 713.389 473.034 cv
714.495 473.692 li
714.239 473.871 713.972 474.015 713.705 474.114 cv
703.01 478.045 li
702.526 478.225 702.153 478.215 701.946 478.054 cv
701.94 478.06 li
700.869 477.423 li
701.083 477.55 701.438 477.55 701.898 477.383 cv
712.593 473.452 li
cp
.782406 .641779 0 0 cmyk
f
733.2 440.105 mo
733.961 440.558 li
735.664 441.489 736.247 443.453 735.262 446.231 cv
733.394 451.508 726.65 457.725 719.996 460.375 cv
715.816 472.199 li
715.759 472.358 715.666 472.532 715.542 472.707 cv
714.43 472.045 li
714.554 471.871 714.653 471.7 714.704 471.537 cv
718.884 459.714 li
725.532 457.06 732.282 450.846 734.15 445.569 cv
735.059 442.985 734.631 441.103 733.2 440.105 cv
cp
f
730.003 428.263 mo
725.822 440.089 li
726.343 439.914 726.838 439.78 727.322 439.663 cv
731.118 428.926 li
731.252 428.547 731.166 428.284 730.927 428.164 cv
730.932 428.159 li
729.848 427.513 li
730.062 427.641 730.131 427.901 730.003 428.263 cv
cp
f
700.798 477.385 mo
700.865 477.425 li
700.809 477.375 li
700.798 477.385 li
cp
.252415 .199252 .203738 0 cmyk
f
714.43 472.045 mo
715.542 472.707 li
715.283 473.067 714.915 473.419 714.495 473.692 cv
713.389 473.034 li
713.803 472.756 714.171 472.405 714.43 472.045 cv
cp
.234165 .60528 0 0 cmyk
f
651.134 514.649 mo
647.957 513.049 641.189 509.879 637.642 510.14 cv
628.061 510.846 612.485 524.486 603.373 527.53 cv
597.774 529.4 580.123 531.643 580.123 531.643 cv
585.982 550.955 li
585.982 550.955 602.898 553.656 605.824 553.485 cv
611.752 553.14 625.751 541.645 633.185 541.817 cv
636.32 541.889 644.457 545.225 645.551 544.821 cv
646.005 544.653 649.257 542.724 649.257 542.724 cv
649.257 542.724 651.258 542.77 652.688 542.853 cv
654.027 542.932 655.685 541.07 655.441 539.862 cv
654.792 536.649 645.22 532.783 645.22 532.783 cv
645.22 532.783 647.206 532.442 650.619 533.504 cv
653.357 534.354 657.233 535.999 660.099 536.03 cv
662.352 536.055 663.544 534.127 662.825 533.028 cv
660.73 529.827 644.993 521.344 644.993 521.344 cv
644.993 521.344 658.606 527.531 660.892 526.86 cv
662.55 526.374 663.935 524.441 663.625 523.38 cv
662.556 519.722 654.537 516.361 651.134 514.649 cv
cp
0 0 0 0 cmyk
f
477.02 361.699 mo
476.688 385.049 480.668 434.614 488.475 456.624 cv
497.345 481.63 516.557 508.761 574.394 515.893 cv
578.849 516.442 580.454 521.269 582.616 522.884 cv
583.516 523.557 585.435 524.124 587.422 524.562 cv
590.95 525.341 593.369 528.591 593.073 532.191 cv
591.582 550.373 li
591.272 554.155 588.082 557.048 584.287 556.989 cv
577.727 556.886 li
577.727 556.886 573.447 564.34 553.689 561.948 cv
461.414 550.77 445.472 511.233 434.695 485.128 cv
422.929 456.628 416.391 419.092 419.823 372.996 cv
421.965 344.236 430.528 321.737 445.94 316.742 cv
461.1 311.83 477.376 336.681 477.02 361.699 cv
cp
level3{
gsave
clp
[47.1154 229.196 229.196 -47.1154 472.191 313.417 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[47.1154 229.196 229.196 -47.1154 472.191 313.417 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
495.401 244.647 mo
495.401 244.647 497.532 263.707 499.215 271.664 cv
503.339 291.159 518.97 298.143 529.537 291.755 cv
529.663 289.804 530.884 287.556 532.454 286.528 cv
540.438 281.301 li
542.167 280.17 544.573 281.978 544.689 284.042 cv
535.081 297.446 li
533.678 298.364 530.982 297.675 530.468 296.303 cv
520.75 301.861 499.542 296.64 495.746 273.757 cv
494.415 265.734 491.41 247.26 491.41 247.26 cv
495.401 244.647 li
cp
.782406 .641779 0 0 cmyk
f
535.187 287.603 mo
536.284 286.884 539.779 284.314 540.984 283.526 cv
543.182 282.087 545.084 283.047 545.231 285.671 cv
545.379 288.295 543.716 291.588 541.517 293.027 cv
540.419 293.746 536.924 296.316 535.72 297.105 cv
533.521 298.545 531.62 297.585 531.472 294.961 cv
531.325 292.337 532.988 289.043 535.187 287.603 cv
cp
level3{
gsave
clp
[2.13958 10.4081 10.4081 -2.13958 537.534 286.339 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.13958 10.4081 10.4081 -2.13958 537.534 286.339 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
509.412 258.309 mo
509.018 269.02 500.612 274.523 490.637 270.6 cv
480.662 266.678 472.895 254.815 473.29 244.104 cv
473.684 233.393 482.089 227.89 492.064 231.812 cv
502.039 235.735 509.806 247.598 509.412 258.309 cv
cp
.845426 .823758 0 0 cmyk
f
505.967 260.548 mo
506.533 270.623 499.689 275.103 490.681 270.555 cv
481.674 266.008 473.913 254.155 473.348 244.081 cv
472.782 234.006 479.626 229.526 488.634 234.074 cv
497.641 238.621 505.402 250.474 505.967 260.548 cv
cp
0 0 0 0 cmyk
f
497.84 272.076 mo
495.712 272.195 493.365 271.615 490.866 270.353 cv
481.933 265.843 474.21 254.047 473.649 244.057 cv
473.273 237.366 476.215 233.031 481.326 232.744 cv
483.453 232.625 485.8 233.205 488.3 234.466 cv
497.232 238.976 504.955 250.772 505.516 260.762 cv
505.891 267.454 502.95 271.789 497.84 272.076 cv
cp
.782406 .641779 0 0 cmyk
f
501.445 261.022 mo
500.98 252.745 494.414 243.017 486.778 239.295 cv
482.428 237.173 478.429 237.228 476.331 239.636 cv
475.422 240.678 473.163 244.17 473.163 244.17 cv
490.25 271.397 li
490.25 271.397 495.43 270.629 497.096 270.122 cv
500.128 269.199 501.706 265.672 501.445 261.022 cv
cp
.382605 .850126 0 0 cmyk
f
494.88 263.036 mo
495.291 270.356 490.318 273.611 483.773 270.307 cv
477.228 267.003 471.588 258.389 471.177 251.069 cv
470.767 243.749 475.739 240.493 482.285 243.797 cv
488.83 247.102 494.469 255.715 494.88 263.036 cv
cp
0 0 0 0 cmyk
f
488.926 271.357 mo
487.387 271.443 485.689 271.023 483.88 270.11 cv
477.416 266.847 471.828 258.311 471.422 251.083 cv
471.15 246.241 473.279 243.104 476.977 242.896 cv
478.516 242.81 480.214 243.23 482.023 244.143 cv
488.487 247.406 494.075 255.942 494.481 263.171 cv
494.753 268.012 492.624 271.149 488.926 271.357 cv
cp
.782406 .641779 0 0 cmyk
f
526.708 169.144 mo
550.694 153.44 571.44 163.914 573.047 192.537 cv
573.195 195.168 573.312 197.9 573.231 200.658 cv
573.085 199.824 572.442 193.892 571.844 191.566 cv
569.434 182.191 568.004 182.088 565.194 179.444 cv
561.729 171.002 555.279 166.488 546.696 166.969 cv
541.419 167.265 535.47 169.49 529.495 173.402 cv
511.413 185.241 496.829 209.361 492.502 232.342 cv
492.499 232.345 li
492.437 232.653 492.22 232.959 491.828 233.215 cv
490.855 233.852 489.224 233.944 488.185 233.42 cv
487.636 233.142 487.38 232.748 487.388 232.343 cv
487.363 232.306 li
491.774 207.73 507.326 181.834 526.708 169.144 cv
cp
.504143 0 0 0 cmyk
f
521.452 689.387 mo
519.583 680.728 520.58 669.962 524.158 658.919 cv
596.735 617.016 li
600.459 624.131 601.218 633.881 599.3 644.495 cv
521.452 689.387 li
level3{
gsave
clp
[-675.779 943.45 -943.45 -675.779 885.24 101.778 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~89P7=8TkC?8p(I@96CRA9Q^^C9m$jE9lpgE:36sG:37!H:NR*I:im9L:im<M;0*?M;KEKO;f`WQ;fWTQ
<,r`S<H/fT<cJrV=)f)X=)]&X=E#2Z=`>>\>&YJ^>AtV`>AkS`>]1_b?#Lkd?#Lkd?>h"f?Z..h?u@4i
@;[@k@;[Cl@W!On@r3Uo@r3XpA8NaqAS`grAo&stAo&stB5B+!BPT1"Bko=$C25I&C2,C%CMGO'CMGR(
Chb^*D/(j,DJ:m,DJ:p-DeV'0DeV*1E+h02EG.93EG%63Eb@B5F([N7F([Q8FCmW9F_3`:F_3c;G%Ei<
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-675.779 943.45 -943.45 -675.779 885.24 101.778 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~7n?0A84cBE8P2TI8kVfM92&#Q9MA,R9MJ5U9he>V9hnGY:/=Y]:JXb^:Jaka:f1(e;,U:i;GpCj;H$Lm
;c?Xp<)cjt<E3(#<`W7%<`W:'='&L+=BJ^/=]np3>$>*5>$>-7>?b?;>[1N=>[1Q??!UcC?=$uG?XI2K
?smAM?smAN@:<SR@U`eU@U`eV@q0"ZA7T4^AS#FaAS#FbAnGXfB4kjjBP;'nBk_9qBk_9rC2.KuC2.L!
CMR^$Ci!p(D/F-,D/F-,DJj?0DJj?0Df9Q4E,]c8E,]c8EH,u<EcQ2@EcQ2@F)uDDFEDVHFEDVHF`hhL
~>
<~F`hhLF`hhLF`__IFEDVHFEDVHFEDVHFE;MEF)uDDF)uDDF)uDDF)uDDF)uDDF)l;AEcQ2@EcQ2@EcH)=
EH,u<EH,r:E,]c8E,]c8E,]`6Df9Q4Df9Q4Df9Q4Df9Q4Df9N2DJj?0DJj?0DJj?0DJj?0DJj?0DJj<.
D/F-,D/F-,D/F-,D/F-+Ci!p(Ci!p(Ci!p'CMR^$CMR^$CMR^$CMR^#C2.KuC2.KuC2.KtBk_9qBk_9q
Bk_9qBk_9qBk_9qBP;'mBP;'mBP;'mBP;'mB4kjiB4kjiAnGXeAnGXeAnGXeAnGXeAS#FaAS#FaAS#Fa
~>
<~#7(S@#RLeD#mgnE#mq"H$4@4L$OdFP$k3XT%1WjX%LrsY%M'']&.oKd&J5Te&J>]h&ebol',2,p'GV>t
'bqK"()@]&(Ddo*(`4,.)&X>2)B'P6)]Kb:*#ot>*??1B*ZcCF+!2UJ+<VdL+<VgN+X&$R+sJ6V,9nHZ
,U=W],paia-71&e-RU8i-n$Jl-n$Jm.4H\q.Olnt.Olnu.k<,$/1`>(/M/P,/hSb//hSb00/"t40JG18
0ekC;1,:U?1,:U?1G^gC1c.$G2)R6K2E!HO2E!HO2`EZS3&ilW3B9)[3]];_4$,Mc4$,Mc4?P_g4Ztqk
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
544.192 707.849 mo
554.519 701.887 li
554.519 700.414 li
545.77 694.312 li
529.51 703.698 li
528.687 703.028 527.906 702.277 527.172 701.443 cv
524.369 698.261 522.479 694.142 521.452 689.387 cv
599.3 644.495 li
597.913 652.166 595.127 660.289 591.051 668.19 cv
553.943 689.599 li
553.943 691.073 li
562.7 697.166 li
576.152 689.407 li
565.77 700.506 554.161 707.024 544.192 707.849 cv
.26627 .443702 .0491951 0 cmyk
f
562.7 697.166 mo
553.943 691.073 li
553.943 689.599 li
562.7 695.693 li
578.862 686.371 li
577.97 687.418 577.065 688.431 576.152 689.407 cv
562.7 697.166 li
level3{
gsave
clp
[-50.232 -2.25527e-09 -2.25527e-09 50.232 604.175 684.469 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-50.232 -2.25527e-09 -2.25527e-09 50.232 604.175 684.469 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
542.068 707.938 mo
541.877 707.938 541.687 707.936 541.497 707.931 cv
554.519 700.414 li
554.519 701.887 li
544.192 707.849 li
543.475 707.908 542.767 707.938 542.068 707.938 cv
level3{
gsave
clp
[-49.0017 -2.20003e-09 -2.20003e-09 49.0017 554.519 710.453 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-49.0017 -2.20003e-09 -2.20003e-09 49.0017 554.519 710.453 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
562.7 695.693 mo
553.943 689.599 li
591.051 668.19 li
588.64 672.866 585.777 677.463 582.484 681.845 cv
581.302 683.418 580.093 684.928 578.862 686.371 cv
562.7 695.693 li
.144656 .432654 0 0 cmyk
f
541.497 707.931 mo
536.987 707.825 532.895 706.453 529.51 703.698 cv
545.77 694.312 li
554.519 700.414 li
541.497 707.931 li
f
524.158 658.919 mo
525.046 656.177 526.093 653.42 527.295 650.672 cv
593.57 612.409 li
593.605 612.448 593.641 612.488 593.675 612.528 cv
594.856 613.869 595.875 615.371 596.735 617.016 cv
524.158 658.919 li
.315496 .426978 .118593 0 cmyk
f
527.295 650.672 mo
527.731 649.675 528.188 648.68 528.664 647.687 cv
592.191 611.009 li
592.667 611.447 593.126 611.912 593.57 612.409 cv
527.295 650.672 li
0 0 0 0 cmyk
f
528.664 647.687 mo
531.293 642.212 534.535 636.819 538.355 631.735 cv
550.76 615.224 566.134 605.938 578.547 605.938 cv
583.765 605.938 588.458 607.577 592.191 611.009 cv
528.664 647.687 li
level3{
gsave
clp
[227.051 0 0 227.051 392.287 616.618 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~-#N\_-#Wb`-#Wb`-#Wb`-#Wb`->rka->rka->rka-Z8tb-Z8tb-u].d-u].d-u].d.<#7e.<#7e.<#7e
.<#7e.W>@f.W>@f.W>@f.W>@f.W>@f.rbOh.rbOh.rbOh.rbOh.rkUi.rkUi/91^j/91^j/91^j/TLgk
/TLgk/TLgk/ogpl/ogpl/oq!m/oq!m067*n067*n067*n0QR3o0m!Bq13<Kr13<Kr1NWTs1ir]t208fu
2KSp!2fo$"2fo$"3-5-#3HP6$3ck?%4*(B%4ECN'4ECT)4`^`+5'$l-5B@#/5]R,16#m836ZEJ66u`Y9
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[227.051 0 0 227.051 392.287 616.618 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~,U=W\,U=W\,U=W\,U=W\,UF`_,pai`,pai`,pjrc-71&d-7:/g-RU8h-RU8h-R^Ak-n$Jl-n$Jl-n$Jl
-n$Mn.4H\p.4H\p.4H\p.4H\p.4H_r.Olnt.Olnt.Olnt.Olnt.Olnt.Olr!.k<,#.k<,#.k</%/1`>'
/1`>'/1`>(/M/P+/M/P+/M/P+/M/P,/hSb//hSb//hSb00/"t40JG180ekC;0ekC<1,:U@1G^gD1c.$H
2)R6K2E!HO2E!HO2`EZS3&ilW3B9)[3]];_4$,Mc4$,Mc4?P_g4Ztqk5!D.o5<h@s5X7S"5s[h(6UO4.
~>
<~D/O6/DJj?0DJj?0DJj?0DJj?0DJj?0DJj?0DJj?0DJj?0DJsH3Df9Q4Df9Q4Df9Q4Df9Q4Df9Q4Df9Q4
Df9Q4Df9Q4Df9Q4Df9Q4Df9Q4Df9T6E,]c8E,]c8E,]c8E,]f:EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<
EH,u<EH,u<EH,u<EH,u=EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EcQ2AF)uDDF)uDDF)uDDF)uDDF)uDDF)uDD
F)uDDF)uDDF)uDDF)uDDF)uDDF)uDDF)uDDEcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EH,u<EH,u<E,]c8
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E6'!s8W-"9\i1"U,&5"pP;
;#RC\A#mgqG$O[@O~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
440.7 752.785 mo
429.867 733.402 li
423.089 737.19 li
423.104 737.217 li
421.854 738.089 421.073 739.75 421.04 742.066 cv
420.97 747.082 424.405 753.227 428.713 755.795 cv
431.06 757.194 433.177 757.233 434.633 756.175 cv
440.7 752.785 li
cp
.623865 0 .379705 0 cmyk
f
441.24 756.203 mo
441.596 756.056 441.93 755.87 442.241 755.644 cv
501.573 722.484 li
487.566 697.422 li
427.148 731.188 li
427.175 731.237 li
425.65 732.393 424.705 734.502 424.665 737.402 cv
424.574 743.885 429.016 751.833 434.585 755.153 cv
437.076 756.637 439.367 756.938 441.151 756.244 cv
441.155 756.251 li
441.24 756.203 li
cp
level3{
gsave
clp
[18.5837 35.5513 35.5513 -18.5837 454.919 716.584 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~M#\=lM?"@kMZ=FkMuXIjNW9XkO8oglOoPslPQ2-mPlM-kPlM'iQN.3iR/dBjRK*HjSH&ZjScA`jScA`j
T)\ikT)eolT*52pT*YJtSdbZ"T+V,(T,%D,TGde1TH4(5TcsI:UF#s@UalEFUb;]JV)&)OVDnPUV`XqZ
Va1:_WC6deW_!0jW_<BmX&&crXAf0"Y#kZ(Y[%5/Z![P3Z=Eq8ZtKF>[;5gC[r;<I\9%]N\p+2T]6XGW
]RBh\]n$.`^OuRe^kVmi_2A9n_N"Tr_iOiu_ik'#`0C<&`KpQ)`gHf,`gd#/`h!/1a.ND4a.`P6aJ8e9
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[18.5837 35.5513 35.5513 -18.5837 454.919 716.584 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Ll$tFM2I1JMMmCNMi<USNK0$[O-#HcOcklkPE_;rPa%DsPa.N"QC!r*R$jA1R@9S6S=Q4ASXl=BSXuFE
St;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;RHT:_aJT:_dLTV/!PU8"EXUSFTZUSFW\Unji`V5:&dVP^5f
VP^5gVl6PnWMukrWMuksWiE)"X/i;&XKAV-Y-5%5Yct@:Z*CR>ZEpmE['[3J[C3NQ\$riV\@K/]]"5Jb
]=Y\e]Y(ni]tM.o^V@Ou^qdb$_83t(_SX1,_SX1,_o'C0`5KU4`Pog8`Pog8`Pog8`l?$<`l?$<a2c6@
~>
<~zzzzzzzzzzzzzzzzz!!!$$!sAc3#7(VC$OdIT&.oNg'GVB"(`=52*$$(B+<_pR,UFcb-n6_u/M8\10et
OA2)[ES3]fGe5!M:u6:4.07Rp!@8kVfN9hnJ\;,U=l<E<1'=^,-:?=$uH@:E_WAS,RgBkhF"D/O92EH6
,BF`qtRG^4R\H@($fIXcluJV&N,KS>/8LPUeEMi<USNfK0]OHGZgPEV5qQ'IZ$Q^=),R@0M5S=H.@St;
RHTV/!PU8"EX~>
<~()@Z#'bh>r'GD,m&eP]f&J,Kb&.]9]%LijV%1EUP$4."E#R:S="pG/6"U"r2"9S`-!<<*"zzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
494.083 721.9 mo
488.513 718.581 484.072 710.632 484.162 704.149 cv
484.253 697.666 488.841 695.101 494.41 698.422 cv
499.98 701.742 504.421 709.689 504.331 716.172 cv
504.24 722.656 499.652 725.22 494.083 721.9 cv
cp
.53814 0 .0892958 0 cmyk
f
517.028 704.69 mo
510.809 693.563 li
491.227 704.508 li
491.238 704.528 li
490.421 704.991 489.906 705.989 489.886 707.421 cv
489.846 710.294 491.814 713.816 494.283 715.288 cv
495.572 716.056 496.735 716.098 497.565 715.567 cv
517.028 704.69 li
cp
.151003 .836576 0 0 cmyk
f
514.06 704.234 mo
511.592 702.762 509.623 699.241 509.664 696.367 cv
509.704 693.494 511.737 692.357 514.205 693.829 cv
516.674 695.299 518.642 698.822 518.602 701.695 cv
518.562 704.569 516.529 705.706 514.06 704.234 cv
cp
.166354 .131136 0 0 cmyk
f
501.98 722.214 mo
500.115 723.336 497.526 723.186 494.675 721.487 cv
489.106 718.167 484.664 710.219 484.755 703.736 cv
484.794 700.937 485.674 698.874 487.106 697.694 cv
485.327 698.762 484.206 700.984 484.162 704.149 cv
484.072 710.632 488.513 718.58 494.083 721.9 cv
497.248 723.788 500.094 723.768 501.98 722.214 cv
cp
0 0 0 0 cmyk
f
514.311 704.093 mo
511.843 702.623 509.874 699.1 509.915 696.227 cv
509.934 694.864 510.411 693.908 511.161 693.42 cv
510.265 693.843 509.685 694.857 509.664 696.367 cv
509.623 699.241 511.592 702.762 514.06 704.234 cv
515.358 705.007 516.525 705.044 517.356 704.503 cv
516.547 704.885 515.482 704.792 514.311 704.093 cv
cp
.0888991 .0645151 .0694591 0 cmyk
f
598.678 593.155 mo
607.687 598.695 li
605.326 604.032 li
595.849 597.655 li
598.678 593.155 li
cp
.687068 .0624094 .248051 0 cmyk
f
539.051 716.068 mo
540.384 714.503 li
529.311 707.214 li
518.434 690.419 518.093 657.791 536.898 632.761 cv
557.178 605.77 592.152 597.694 605.607 612.973 cv
619.062 628.252 608.792 659.602 588.513 686.593 cv
571.426 709.335 552.603 721.835 539.051 716.068 cv
cp
521.459 719.975 mo
529.432 724.814 li
546.671 736.73 575.943 724.63 598.092 695.151 cv
622.411 662.784 629.069 621.545 612.934 603.221 cv
596.798 584.899 556.357 594.874 532.037 627.242 cv
508.848 658.106 508.574 698.339 522.587 717.899 cv
521.459 719.975 li
cp
level3{
gsave
clp
[-83.1009 119.911 119.911 83.1009 606.293 601.728 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-83.1009 119.911 119.911 83.1009 606.293 601.728 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
484.406 702.915 mo
425.478 735.819 li
425.437 736.194 425.409 736.582 425.404 736.989 cv
425.394 737.681 425.446 738.392 425.536 739.111 cv
484.532 706.171 li
484.341 704.906 484.361 703.849 484.406 702.915 cv
cp
0 0 0 0 cmyk
f
442.119 755.713 mo
442.034 755.759 li
442.03 755.753 li
440.246 756.447 437.955 756.146 435.464 754.662 cv
429.894 751.341 425.453 743.394 425.543 736.911 cv
425.584 734.01 426.528 731.902 428.054 730.746 cv
428.027 730.697 li
427.148 731.188 li
427.175 731.237 li
425.65 732.393 424.705 734.53 424.665 737.43 cv
424.574 743.914 429.016 751.861 434.585 755.181 cv
437.076 756.666 439.367 756.938 441.151 756.244 cv
441.155 756.251 li
441.24 756.203 li
441.574 756.066 441.887 755.889 442.182 755.681 cv
442.119 755.713 li
cp
f
529.791 702.895 mo
517.511 688.951 522.578 657.565 541.087 632.931 cv
556.17 612.856 575.594 603.37 588.914 608.091 cv
575.628 600.95 554.558 610.309 538.443 631.758 cv
519.935 656.392 514.867 687.778 527.148 701.722 cv
529.42 704.302 532.132 706.103 535.156 707.175 cv
533.184 706.115 531.379 704.698 529.791 702.895 cv
cp
.845426 .823758 0 0 cmyk
f
538.355 631.735 mo
556.692 607.329 581.509 598.713 593.675 612.528 cv
605.842 626.343 600.822 657.439 582.484 681.845 cv
564.147 706.252 539.339 715.258 527.172 701.443 cv
515.005 687.628 520.018 656.141 538.355 631.735 cv
cp
589.682 690.018 mo
614.002 657.651 620.66 616.412 604.524 598.089 cv
588.388 579.766 555.476 591.194 531.157 623.561 cv
506.838 655.929 500.18 697.169 516.315 715.491 cv
532.451 733.814 565.363 722.386 589.682 690.018 cv
cp
.782406 .641779 0 0 cmyk
f
602.852 597.81 mo
618.988 616.132 612.33 657.372 588.011 689.74 cv
570.124 713.547 547.596 726.005 530.506 723.651 cv
547.777 727.096 571.206 714.61 589.682 690.018 cv
614.002 657.651 620.66 616.412 604.524 598.089 cv
600.256 593.243 594.807 590.498 588.661 589.651 cv
594.123 590.741 598.975 593.408 602.852 597.81 cv
cp
0 0 0 0 cmyk
f
419.549 719.022 mo
429.115 727.471 li
429.789 723.59 li
422.203 714.709 li
419.549 719.022 li
cp
f
444.698 674.057 mo
445.254 671.282 441.885 668.267 437.175 667.325 cv
432.465 666.382 428.196 667.869 427.641 670.645 cv
427.085 673.422 430.454 676.436 435.164 677.379 cv
439.874 678.321 444.143 676.834 444.698 674.057 cv
cp
f
419.131 846.523 mo
419.523 845.377 420.328 844.78 420.972 844.655 cv
422.993 844.263 426.534 845.094 429.145 843.621 cv
430.372 842.928 434.265 842.472 432.936 845.172 cv
432.024 847.024 431.028 848.065 427.093 850.412 cv
426.55 850.736 424.221 851.376 424.221 851.376 cv
424.221 852.324 li
424.221 852.324 423.324 853.514 422.877 853.681 cv
421.86 854.06 419.131 852.937 419.131 852.937 cv
419.131 852.937 419.064 853.042 418.988 851.301 cv
418.994 851.302 li
418.913 850.661 418.344 848.824 419.131 846.523 cv
cp
level3{
gsave
clp
[11.8168 11.741 11.741 -11.8168 420.89 843.119 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[11.8168 11.741 11.741 -11.8168 420.89 843.119 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
420.305 847.507 mo
420.74 847.745 421.953 847.847 422.447 847.881 cv
423.72 847.97 424.783 847.714 424.977 845.827 cv
425.008 845.519 424.978 841.251 424.978 841.251 cv
424.978 840.444 419.371 840.291 419.218 840.697 cv
418.976 841.338 419.203 846.906 420.305 847.507 cv
cp
0 0 0 0 cmyk
f
437.974 858.376 mo
438.354 857.738 439.837 856.547 439.837 856.547 cv
439.837 856.547 446.633 857.672 449.43 856.866 cv
453.074 855.815 453.851 857.795 454.002 857.887 cv
454.13 857.966 454.281 858.592 454.077 858.946 cv
453.073 860.68 450.467 862.379 446.329 863.043 cv
445.722 863.14 443.709 863.259 443.709 863.259 cv
443.709 863.984 li
443.709 863.984 442.147 864.877 441.713 865.039 cv
440.726 865.406 437.48 863.376 437.48 863.376 cv
437.48 863.376 437.415 863.477 437.341 861.788 cv
437.351 861.79 li
437.314 861.41 437.543 859.1 437.974 858.376 cv
cp
level3{
gsave
clp
[14.0135 12.1198 12.1198 -14.0135 439.501 855.156 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[14.0135 12.1198 12.1198 -14.0135 439.501 855.156 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
439.763 858.672 mo
440.198 858.908 441.378 859.092 442.149 859.093 cv
443.14 859.095 444.485 858.925 444.678 857.04 cv
444.71 856.731 444.676 852.716 444.676 852.716 cv
444.676 851.91 439.043 852.527 438.889 852.933 cv
438.648 853.574 438.529 858.002 439.763 858.672 cv
cp
0 0 0 0 cmyk
f
422.038 672.477 mo
417.723 682.013 415.097 687.459 413.479 699.823 cv
412.418 707.927 413.933 712.472 418.857 722.85 cv
419.352 723.894 421.134 725.018 422.038 724.592 cv
423.196 724.047 425.949 719.82 425.296 717.396 cv
424.008 712.625 420.464 708.984 422.535 701.088 cv
423.97 695.616 431.762 684.045 431.431 673.765 cv
431.177 665.868 424.555 666.916 422.038 672.477 cv
cp
level3{
gsave
clp
[31.4466 -53.247 -53.247 -31.4466 406.417 725.451 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[31.4466 -53.247 -53.247 -31.4466 406.417 725.451 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
444.519 645.78 mo
444.519 645.78 447.493 654.413 447.7 656.502 cv
448.279 662.342 446.691 663.361 442.726 663.664 cv
439.83 663.885 436.497 664.149 434.614 660.226 cv
433.431 657.761 432.544 652.588 432.544 652.588 cv
432.048 649.208 444.035 642.473 444.519 645.78 cv
cp
0 0 0 0 cmyk
f
434.19 673.405 mo
443.847 673.383 li
442.92 661.719 li
433.165 657.672 li
433.165 657.672 433.71 662.84 433.709 663.953 cv
433.707 670.677 434.19 673.405 434.19 673.405 cv
cp
f
443.098 663.652 mo
443.134 664.486 li
443.134 664.486 441.314 664.897 439.707 664.229 cv
437.896 663.476 437.213 660.889 437.213 660.889 cv
437.921 660.477 li
437.921 660.477 439.353 663.214 443.098 663.652 cv
cp
.188876 .159243 0 0 cmyk
f
416.112 816.982 mo
416.267 814.005 416.844 806.832 417.218 803.875 cv
418.261 795.622 420.356 785.653 420.538 773.328 cv
420.699 762.368 419.366 744.38 418.955 739.459 cv
417.773 725.312 427.329 714.132 427.329 714.132 cv
453.652 719.293 li
453.652 719.293 458.837 733.785 459.647 746.977 cv
460.283 757.314 456.052 791.581 452.465 807.539 cv
451.362 812.449 450.469 813.681 449.708 816.5 cv
447.065 826.286 445.701 848.645 445.759 854.355 cv
445.526 858.539 437.713 857.532 437.663 855.241 cv
437.406 843.545 435.224 827.002 435.617 817.191 cv
435.697 815.215 436.557 807.317 436.486 805.35 cv
436.008 792.121 435.877 783.978 435.877 783.978 cv
435.877 783.978 430.178 807.655 429.5 810.59 cv
427.24 820.367 426.442 842.518 426.179 845.154 cv
425.914 847.812 419.367 847.473 418.787 845.456 cv
416.783 838.478 415.795 823.102 416.112 816.982 cv
cp
level3{
gsave
clp
[-6.3131e-09 140.291 140.291 6.3131e-09 437.883 720.5 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-6.3131e-09 140.291 140.291 6.3131e-09 437.883 720.5 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
480.525 722.725 mo
476.89 727.485 li
465.15 717.37 li
468.382 713.966 li
480.525 722.725 li
cp
0 0 0 0 cmyk
f
487.106 727.52 mo
483.71 733.494 li
483.71 733.494 477.458 729.606 476.89 727.485 cv
480.525 722.725 li
483.811 723.117 li
487.106 727.52 li
cp
f
489.518 728.697 mo
490.906 728.293 489.896 727.237 488.366 725.364 cv
487.129 723.849 483.811 723.117 483.811 723.117 cv
485.074 726.02 li
485.074 726.02 486.783 726.72 487.144 726.955 cv
487.681 727.303 489.025 728.84 489.518 728.697 cv
cp
f
483.691 733.462 mo
485.602 733.621 li
485.602 733.621 487.017 733.356 487.553 733.258 cv
487.737 733.224 488.09 733.04 488.145 732.8 cv
488.218 732.475 488.057 732.375 487.836 732.295 cv
487.355 732.12 486.168 732.44 486.168 732.44 cv
484.703 731.774 li
483.691 733.462 li
cp
f
485.088 730.459 mo
484.146 732.077 li
484.146 732.077 485.828 732.32 486.615 732.672 cv
487.258 732.961 488.145 732.8 489.209 732.576 cv
489.583 732.497 489.905 732.562 490.064 732.261 cv
490.223 731.961 489.939 731.568 489.751 731.475 cv
489.751 731.475 487.838 731.574 487.218 731.283 cv
486.303 730.854 485.088 730.459 485.088 730.459 cv
cp
f
484.872 730.363 mo
484.872 730.363 486.937 730.941 487.695 731.318 cv
488.435 731.685 489.384 731.583 490.336 731.802 cv
490.838 731.919 491.201 731.73 491.305 731.429 cv
491.424 731.084 490.936 730.561 490.639 730.401 cv
490.639 730.401 489.018 730.295 488.328 729.909 cv
487.582 729.491 486.12 728.829 486.12 728.829 cv
484.872 730.363 li
cp
f
486.538 726.702 mo
485.935 728.816 li
485.935 728.816 487.371 729.883 488.558 730.414 cv
489.181 730.692 490.33 730.464 490.996 730.707 cv
491.304 730.82 491.806 730.907 491.959 730.576 cv
492.129 730.208 491.915 729.784 491.652 729.589 cv
491.106 729.182 490.068 729.403 489.437 729.154 cv
488.154 728.646 486.538 726.702 486.538 726.702 cv
cp
f
426.5 667.412 mo
429.043 665.345 432.343 666.668 435.178 667.784 cv
435.178 667.784 431.345 673.413 440.656 673.708 cv
443.781 673.807 443.739 670.685 443.739 670.685 cv
448.432 670.648 452.501 674.095 454.364 676.576 cv
456.733 679.729 453.25 696.873 452.982 698.675 cv
451.98 705.401 453.864 710.729 454.194 719.128 cv
454.3 721.839 450.452 723.975 443.839 724.354 cv
435.337 724.84 426.212 722.308 424.524 718.159 cv
423.562 715.796 426.861 713.588 426.212 700.948 cv
426.083 698.441 425.39 695.4 424.867 692.037 cv
424.264 688.164 420.274 672.472 426.5 667.412 cv
cp
level3{
gsave
clp
[-.616327 -53.3122 53.3122 -.616327 439.677 727.748 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.616327 -53.3122 53.3122 -.616327 439.677 727.748 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
444.261 678.961 mo
442.599 687.868 449.138 703.222 453.89 709.734 cv
455.993 712.616 461.464 717.325 464.192 719.607 cv
465.686 720.856 470.148 724.161 470.909 723.546 cv
471.882 722.758 476.148 717.76 474.343 716.526 cv
472.066 714.97 463.081 701.528 463.081 701.528 cv
463.081 701.528 460.656 697.777 455.81 679.713 cv
453.849 672.404 445.232 673.755 444.261 678.961 cv
cp
level3{
gsave
clp
[-34.1349 -38.9306 38.9306 -34.1349 473.618 715.533 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-34.1349 -38.9306 38.9306 -34.1349 473.618 715.533 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
439.948 639.41 mo
435.532 637.221 424.993 638.012 420.992 645.538 cv
420.067 647.278 419.701 653.603 419.481 656.315 cv
418.993 662.327 417.563 671.451 423.78 680.052 cv
430.302 689.075 432.719 695.732 432.719 695.732 cv
432.719 695.732 451.694 686.941 444.308 673.235 cv
436.961 659.6 437.936 656.996 438.156 655.57 cv
438.557 655.755 438.933 655.898 439.271 655.987 cv
439.775 656.791 440.319 657.688 440.623 656.993 cv
440.773 656.649 440.871 656.167 440.923 655.595 cv
441.976 654.608 443.02 652.367 443.413 651.242 cv
443.638 650.599 444.087 648.738 444.182 648.628 cv
444.308 648.481 444.713 650.687 444.816 650.545 cv
445.564 649.511 446.005 646.562 445.818 645.71 cv
445.264 643.187 444.481 641.657 439.948 639.41 cv
cp
level3{
gsave
clp
[3.81197 51.3953 -51.3953 3.81197 431.349 641.308 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.81197 51.3953 -51.3953 3.81197 431.349 641.308 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
438.494 654.339 mo
441.019 653.827 442.166 657.514 441.142 658.387 cv
440.59 658.859 439.15 658.683 438.037 657.094 cv
437.231 655.943 436.758 654.692 438.494 654.339 cv
cp
0 0 0 0 cmyk
f
439.14 655.588 mo
440.167 657.326 li
439.877 657.686 439.004 656.959 438.697 656.42 cv
438.389 655.88 438.663 655.519 439.14 655.588 cv
cp
.188876 .159243 0 0 cmyk
f
819.019 134.911 mo
811.728 130.796 li
811.723 130.802 li
811.211 130.463 810.485 130.478 809.674 130.947 cv
747.409 166.884 li
745.858 167.78 744.6 169.957 744.6 171.748 cv
744.594 219.522 li
744.594 220.496 744.973 221.14 745.562 221.395 cv
745.554 221.407 li
752.735 225.464 li
819.019 134.911 li
cp
level3{
gsave
clp
[74.4249 0 0 74.4249 744.594 178.017 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[74.4249 0 0 74.4249 744.594 178.017 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
754.676 170.983 mo
816.941 135.046 li
818.492 134.15 819.749 134.877 819.749 136.667 cv
819.743 184.441 li
819.742 186.232 818.485 188.41 816.934 189.305 cv
805.383 195.972 li
805.38 212.761 li
790.905 204.329 li
754.669 225.243 li
753.118 226.138 751.861 225.412 751.861 223.621 cv
751.867 175.846 li
751.867 174.056 753.125 171.879 754.676 170.983 cv
cp
.234165 .60528 0 0 cmyk
f
841.655 238.866 mo
850.044 234.158 li
850.925 233.645 852.058 233.567 853.07 234.142 cv
906.307 264.402 li
908.074 265.422 909.506 267.903 909.506 269.943 cv
909.506 324.37 li
909.506 325.418 909.118 326.138 908.505 326.459 cv
908.508 326.464 li
900.308 331.063 li
893.148 318.62 li
893.148 337.747 li
884.828 342.414 li
841.655 238.866 li
cp
level3{
gsave
clp
[-67.8509 -3.0463e-09 -3.0463e-09 67.8509 909.506 288.078 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-67.8509 -3.0463e-09 -3.0463e-09 67.8509 909.506 288.078 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
840.216 241.447 mo
840.216 293.836 li
840.216 295.867 841.656 298.361 843.416 299.377 cv
867.755 313.428 li
884.829 342.414 li
884.829 323.286 li
897.987 330.883 li
899.747 331.899 901.186 331.068 901.186 329.036 cv
901.186 274.61 li
901.186 272.57 899.754 270.089 897.987 269.069 cv
844.75 238.809 li
842.727 237.66 840.216 239.121 840.216 241.447 cv
cp
level3{
gsave
clp
[-60.9697 -2.73736e-09 -2.73736e-09 60.9697 901.186 290.411 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-60.9697 -2.73736e-09 -2.73736e-09 60.9697 901.186 290.411 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
894.224 355.365 mo
893.224 355.361 li
893.233 353.361 li
894.233 353.365 li
894.224 355.365 li
cp
.571832 .880613 0 0 cmyk
f
894.186 363.54 mo
893.186 363.536 li
893.205 359.449 li
894.205 359.453 li
894.186 363.54 li
cp
894.148 371.714 mo
893.148 371.711 li
893.167 367.623 li
894.167 367.627 li
894.148 371.714 li
cp
894.11 379.888 mo
893.11 379.884 li
893.129 375.797 li
894.129 375.801 li
894.11 379.888 li
cp
894.072 388.062 mo
893.072 388.058 li
893.091 383.971 li
894.091 383.975 li
894.072 388.062 li
cp
894.034 396.237 mo
893.034 396.233 li
893.053 392.146 li
894.053 392.15 li
894.034 396.237 li
cp
893.996 404.411 mo
892.996 404.407 li
893.015 400.32 li
894.015 400.324 li
893.996 404.411 li
cp
893.958 412.586 mo
892.958 412.582 li
892.977 408.494 li
893.977 408.498 li
893.958 412.586 li
cp
893.921 420.759 mo
892.921 420.755 li
892.94 416.669 li
893.94 416.672 li
893.921 420.759 li
cp
893.883 428.933 mo
892.883 428.929 li
892.902 424.842 li
893.902 424.846 li
893.883 428.933 li
cp
f
893.854 435.02 mo
892.854 435.016 li
892.863 433.016 li
893.863 433.02 li
893.854 435.02 li
cp
f
788.348 228.891 mo
787.348 228.889 li
787.351 226.889 li
788.351 226.891 li
788.348 228.891 li
cp
f
788.338 236.995 mo
787.338 236.993 li
787.343 232.941 li
788.343 232.943 li
788.338 236.995 li
cp
788.328 245.099 mo
787.328 245.097 li
787.333 241.046 li
788.333 241.047 li
788.328 245.099 li
cp
788.318 253.204 mo
787.318 253.202 li
787.323 249.15 li
788.323 249.152 li
788.318 253.204 li
cp
788.308 261.308 mo
787.308 261.306 li
787.313 257.255 li
788.313 257.256 li
788.308 261.308 li
cp
788.297 269.413 mo
787.297 269.411 li
787.302 265.359 li
788.302 265.361 li
788.297 269.413 li
cp
788.287 277.517 mo
787.287 277.515 li
787.292 273.464 li
788.292 273.465 li
788.287 277.517 li
cp
788.277 285.622 mo
787.277 285.62 li
787.282 281.567 li
788.282 281.569 li
788.277 285.622 li
cp
788.267 293.726 mo
787.267 293.724 li
787.272 289.672 li
788.272 289.673 li
788.267 293.726 li
cp
788.256 301.831 mo
787.256 301.829 li
787.262 297.776 li
788.262 297.778 li
788.256 301.831 li
cp
788.246 309.935 mo
787.246 309.933 li
787.251 305.88 li
788.251 305.882 li
788.246 309.935 li
cp
788.236 318.04 mo
787.236 318.038 li
787.241 313.985 li
788.241 313.987 li
788.236 318.04 li
cp
788.226 326.144 mo
787.226 326.142 li
787.231 322.089 li
788.231 322.091 li
788.226 326.144 li
cp
788.215 334.248 mo
787.215 334.246 li
787.221 330.194 li
788.221 330.196 li
788.215 334.248 li
cp
788.205 342.352 mo
787.205 342.35 li
787.21 338.298 li
788.21 338.3 li
788.205 342.352 li
cp
788.195 350.457 mo
787.195 350.455 li
787.2 346.403 li
788.2 346.405 li
788.195 350.457 li
cp
788.185 358.561 mo
787.185 358.559 li
787.19 354.507 li
788.19 354.509 li
788.185 358.561 li
cp
788.174 366.666 mo
787.174 366.664 li
787.18 362.612 li
788.18 362.614 li
788.174 366.666 li
cp
788.164 374.77 mo
787.164 374.768 li
787.169 370.716 li
788.169 370.718 li
788.164 374.77 li
cp
788.154 382.875 mo
787.154 382.873 li
787.159 378.82 li
788.159 378.822 li
788.154 382.875 li
cp
788.144 390.979 mo
787.144 390.977 li
787.149 386.924 li
788.149 386.926 li
788.144 390.979 li
cp
788.133 399.084 mo
787.133 399.082 li
787.139 395.029 li
788.139 395.031 li
788.133 399.084 li
cp
788.123 407.188 mo
787.123 407.186 li
787.128 403.133 li
788.128 403.135 li
788.123 407.188 li
cp
788.113 415.293 mo
787.113 415.291 li
787.118 411.238 li
788.118 411.24 li
788.113 415.293 li
cp
788.103 423.397 mo
787.103 423.395 li
787.108 419.342 li
788.108 419.344 li
788.103 423.397 li
cp
788.092 431.502 mo
787.092 431.5 li
787.098 427.447 li
788.098 427.449 li
788.092 431.502 li
cp
788.082 439.605 mo
787.082 439.603 li
787.087 435.551 li
788.087 435.553 li
788.082 439.605 li
cp
788.072 447.71 mo
787.072 447.708 li
787.077 443.656 li
788.077 443.658 li
788.072 447.71 li
cp
788.062 455.814 mo
787.062 455.812 li
787.067 451.76 li
788.067 451.762 li
788.062 455.814 li
cp
788.051 463.919 mo
787.051 463.917 li
787.057 459.865 li
788.057 459.867 li
788.051 463.919 li
cp
788.041 472.023 mo
787.041 472.021 li
787.046 467.969 li
788.046 467.971 li
788.041 472.023 li
cp
788.031 480.128 mo
787.031 480.126 li
787.036 476.074 li
788.036 476.076 li
788.031 480.128 li
cp
788.021 488.232 mo
787.021 488.23 li
787.026 484.178 li
788.026 484.18 li
788.021 488.232 li
cp
788.011 496.337 mo
787.011 496.335 li
787.016 492.283 li
788.016 492.285 li
788.011 496.337 li
cp
788 504.441 mo
787 504.439 li
787.005 500.386 li
788.005 500.388 li
788 504.441 li
cp
787.99 512.546 mo
786.99 512.544 li
786.995 508.491 li
787.995 508.493 li
787.99 512.546 li
cp
787.98 520.65 mo
786.98 520.648 li
786.985 516.595 li
787.985 516.597 li
787.98 520.65 li
cp
f
787.972 526.702 mo
786.972 526.7 li
786.975 524.7 li
787.975 524.702 li
787.972 526.702 li
cp
f
810.551 763.026 mo
810.159 761.88 809.354 761.284 808.711 761.159 cv
806.689 760.766 803.15 760.875 800.539 759.401 cv
799.312 758.709 795.781 757.84 796.748 760.953 cv
797.361 762.923 798.655 763.845 802.59 766.192 cv
803.134 766.516 805.463 767.156 805.463 767.156 cv
805.463 768.104 li
805.463 768.104 806.359 769.295 806.807 769.462 cv
807.823 769.84 810.553 768.717 810.553 768.717 cv
810.553 768.717 810.62 768.822 810.695 767.082 cv
810.689 767.083 li
810.771 766.441 811.338 765.328 810.551 763.026 cv
cp
level3{
gsave
clp
[-13.5337 2.01996 -2.01996 -13.5337 810.153 763.032 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-13.5337 2.01996 -2.01996 -13.5337 810.153 763.032 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
790.475 773.762 mo
790.095 773.125 788.222 772.026 787.314 771.933 cv
785.249 771.723 781.816 773.058 779.019 772.253 cv
775.376 771.202 774.599 773.18 774.447 773.274 cv
774.319 773.353 774.168 773.978 774.372 774.333 cv
775.376 776.066 777.982 777.765 782.121 778.429 cv
782.727 778.527 784.741 778.646 784.741 778.646 cv
784.741 779.371 li
784.741 779.371 786.302 780.263 786.737 780.425 cv
787.724 780.793 790.97 778.762 790.97 778.762 cv
790.97 778.762 791.034 778.864 791.108 777.174 cv
791.099 777.175 li
791.136 776.797 790.907 774.486 790.475 773.762 cv
cp
level3{
gsave
clp
[-13.5337 6.66588 -6.66588 -13.5337 791.483 771.519 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-13.5337 6.66588 -6.66588 -13.5337 791.483 771.519 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
804.906 764.756 mo
806.26 766.293 809.312 766.035 810.433 764.784 cv
810.671 764.519 810.779 764.007 810.497 763.181 cv
810.105 762.035 809.3 761.438 808.656 761.313 cv
807.528 761.094 806.539 760.937 804.65 760.755 cv
804.19 761.76 803.543 763.211 804.906 764.756 cv
cp
.782406 .641779 0 0 cmyk
f
783.12 776.19 mo
784.355 777.116 788.056 777.404 789.885 776.626 cv
790.77 776.249 790.744 774.707 790.402 773.97 cv
790.088 773.297 788.149 772.235 787.24 772.142 cv
785.854 772.001 784.032 771.901 782.69 773.409 cv
782.019 774.163 782.283 775.563 783.12 776.19 cv
cp
f
770.16 583.797 mo
751.253 593.326 li
769.975 620.721 li
785.458 606.908 li
770.16 583.797 li
cp
level3{
gsave
clp
[3.04708 40.1661 40.1661 -3.04708 767.03 582.638 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.04708 40.1661 40.1661 -3.04708 767.03 582.638 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
782.279 606.095 mo
769.328 586.53 li
755.299 593.6 li
771.625 617.565 li
782.279 606.095 li
cp
0 0 0 0 cmyk
f
806.32 591.281 mo
806.769 600.348 807.473 612.206 803.605 621.778 cv
800.826 628.656 800.105 629.218 795.777 633.832 cv
795.06 634.595 793.228 636.398 792.267 636.216 cv
791.036 635.984 786.455 631.563 787.46 629.622 cv
788.729 627.173 791.748 621.459 793.639 614.828 cv
795.599 607.959 794.145 594.685 798.096 587.171 cv
801.132 581.398 806.059 585.993 806.32 591.281 cv
cp
level3{
gsave
clp
[19.3621 0 0 19.3621 787.317 610.362 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[19.3621 0 0 19.3621 787.317 610.362 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
812.86 733.549 mo
812.706 730.573 812.128 723.399 811.755 720.443 cv
810.712 712.19 808.616 702.22 808.435 689.895 cv
808.274 678.936 805.538 663.442 805.949 658.52 cv
807.131 644.375 801.644 630.701 801.644 630.701 cv
775.32 635.861 li
775.32 635.861 770.189 649.349 769.378 662.542 cv
768.743 672.878 774.018 703.491 776.343 722.769 cv
776.946 727.766 778.87 731.054 779.43 733.92 cv
784.457 759.677 784.276 773.427 784.294 773.608 cv
784.487 775.494 787.771 776.09 789.21 775.24 cv
789.691 774.955 789.864 774.253 790.112 773.123 cv
790.18 772.811 794.001 744.56 792.958 734.797 cv
792.722 732.596 791.121 722.051 791.108 720.618 cv
790.982 706.632 792.4 699.511 792.4 699.511 cv
792.4 699.511 799.304 723.787 799.982 726.722 cv
802.242 736.5 804.38 759.012 804.643 761.648 cv
804.716 762.38 805.656 764.466 808.057 764.306 cv
808.795 764.257 810.017 763.681 810.186 762.024 cv
810.92 754.801 813.178 739.67 812.86 733.549 cv
cp
0 0 0 0 cmyk
f
783.789 764.602 mo
784.312 770.834 784.28 773.52 784.289 773.607 cv
784.482 775.494 787.766 776.09 789.205 775.239 cv
789.686 774.955 789.859 774.253 790.107 773.123 cv
790.129 773.022 790.548 769.967 791.066 765.567 cv
789.593 766.449 784.743 766.596 783.789 764.602 cv
cp
level3{
gsave
clp
[1.21557e-12 11.8168 -11.8168 1.21557e-12 787.427 765.167 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.21557e-12 11.8168 -11.8168 1.21557e-12 787.427 765.167 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
804.021 755.539 mo
804.347 758.642 804.565 760.915 804.638 761.647 cv
804.711 762.38 805.651 764.466 808.052 764.306 cv
808.79 764.257 810.012 763.681 810.18 762.024 cv
810.395 759.915 810.591 758.799 810.963 755.764 cv
810.051 756.669 805.521 756.7 804.021 755.539 cv
cp
level3{
gsave
clp
[1.11167e-12 10.8068 -10.8068 1.11167e-12 807.492 755.37 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.11167e-12 10.8068 -10.8068 1.11167e-12 807.492 755.37 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
778.357 723.331 mo
789.857 724.95 798.523 720.959 802.028 718.911 cv
804.194 717.645 811.381 713.005 810.945 710.047 cv
810.051 703.971 808.587 697.119 808.472 689.305 cv
808.31 678.345 810.125 660.964 810.061 656.026 cv
809.903 643.825 801.687 630.701 801.687 630.701 cv
775.364 635.861 li
775.364 635.861 770.138 648.948 769.327 662.14 cv
768.704 672.27 771.355 700.211 773.752 719.586 cv
774.291 722.62 777.384 723.194 778.357 723.331 cv
cp
level3{
gsave
clp
[6.05989 85.6464 -85.6464 6.05989 787.796 637.204 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.05989 85.6464 -85.6464 6.05989 787.796 637.204 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
802.481 583.973 mo
799.938 581.907 796.638 583.228 793.803 584.345 cv
793.803 584.345 796.896 590.011 787.585 590.306 cv
784.459 590.406 785.242 587.247 785.242 587.247 cv
781.475 589.193 778.128 592.114 775.695 594.547 cv
773.109 597.133 776.745 601.781 777.964 609.965 cv
778.965 616.691 775.117 626.792 774.787 635.189 cv
774.681 637.902 780.392 641.169 786.048 640.911 cv
794.555 640.523 800.207 637.742 803.126 633.849 cv
804.961 631.403 803.463 628.215 803.301 626.826 cv
802.501 619.981 801.942 621.072 804.114 608.597 cv
804.787 604.737 808.707 589.034 802.481 583.973 cv
cp
level3{
gsave
clp
[4.45006 58.6599 -58.6599 4.45006 788.637 591.543 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.45006 58.6599 -58.6599 4.45006 788.637 591.543 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
762.048 608.078 mo
758.007 611.489 li
758.007 611.489 771.892 626.071 776.141 623.323 cv
777.78 622.263 772.988 616.726 772.988 616.726 cv
762.048 608.078 li
cp
0 0 0 0 cmyk
f
782.684 600.468 mo
784.472 605.641 783.895 615.225 778.19 623.272 cv
774.981 627.797 766.524 620.545 766.524 620.545 cv
771.822 615.678 li
771.822 615.678 772.029 604.62 773.989 597.29 cv
775.674 590.989 780.954 595.464 782.684 600.468 cv
cp
level3{
gsave
clp
[2.51484 33.1501 -33.1501 2.51484 773.551 593.281 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.51484 33.1501 -33.1501 2.51484 773.551 593.281 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
757.895 601.603 mo
751.253 603.849 li
751.253 603.849 752.824 607.049 754.249 608.728 cv
755.436 610.126 757.391 611.205 758.927 612.213 cv
762.528 608.381 li
761.424 605.9 li
757.895 601.603 li
cp
0 0 0 0 cmyk
f
756.929 599.236 mo
758.091 598.852 758.267 599.876 759.762 602.117 cv
760.711 603.539 761.424 605.9 761.424 605.9 cv
759.384 605.891 li
758.181 603.693 li
758.181 603.693 756.196 599.478 756.929 599.236 cv
cp
f
751.273 603.902 mo
751.273 603.902 750.812 601.584 750.743 600.799 cv
750.691 600.208 750.77 599.416 750.962 598.87 cv
751.028 598.683 751.283 598.351 751.549 598.347 cv
751.91 598.343 751.992 598.537 752.043 598.789 cv
752.153 599.338 752.147 600.522 752.147 600.522 cv
752.947 603.684 li
751.273 603.902 li
cp
f
754.413 603.075 mo
752.878 603.589 li
752.878 603.589 751.732 601.316 751.48 600.403 cv
751.265 599.624 751.123 598.491 751.16 597.742 cv
751.181 597.33 751.394 596.964 751.742 596.863 cv
752.091 596.763 752.361 597.196 752.43 597.416 cv
752.43 597.416 752.783 599.209 752.995 599.93 cv
753.309 600.996 754.413 603.075 754.413 603.075 cv
cp
f
754.536 603.028 mo
754.536 603.028 753.393 600.453 753.11 599.566 cv
752.834 598.699 752.256 597.781 752.173 596.723 cv
752.129 596.165 752.39 595.823 752.73 595.782 cv
753.12 595.734 753.458 596.147 753.582 596.497 cv
753.582 596.497 754.348 598.498 754.652 599.315 cv
754.982 600.199 756.331 602.351 756.331 602.351 cv
754.536 603.028 li
cp
f
758.007 601.616 mo
756.315 602.549 li
756.315 602.549 754.853 600.735 754.413 599.688 cv
754.121 598.994 753.78 597.88 753.626 597.119 cv
753.554 596.768 753.541 596.216 753.922 596.13 cv
754.344 596.033 754.765 596.355 754.933 596.676 cv
755.282 597.347 755.764 598.387 756.029 599.088 cv
756.311 599.835 758.007 601.616 758.007 601.616 cv
cp
f
770.203 591.132 mo
759.909 596.482 li
770.203 591.132 li
cp
f
760.082 596.815 mo
759.736 596.149 li
770.03 590.799 li
770.376 591.465 li
760.082 596.815 li
cp
.571832 .880613 0 0 cmyk
f
772.392 594.498 mo
762.098 599.847 li
772.392 594.498 li
cp
0 0 0 0 cmyk
f
762.271 600.18 mo
761.925 599.514 li
772.219 594.165 li
772.565 594.831 li
762.271 600.18 li
cp
.571832 .880613 0 0 cmyk
f
781.004 589.912 mo
781.004 589.912 784.005 587.375 788.835 585.71 cv
790.769 585.043 795.601 583.797 795.601 583.797 cv
795.601 583.797 796.223 583.97 796.774 584.495 cv
798.238 585.887 796.562 588.539 791.968 589.91 cv
782.755 592.66 781.004 589.912 781.004 589.912 cv
cp
0 0 0 0 cmyk
f
776.488 567.455 mo
776.488 567.455 777.5 576.597 778.212 578.589 cv
780.201 584.158 782.086 584.4 785.827 582.968 cv
788.56 581.922 791.708 580.726 791.733 576.342 cv
791.748 573.589 790.327 568.494 790.327 568.494 cv
789.322 565.203 775.505 564.235 776.488 567.455 cv
cp
f
793.586 556.376 mo
790.595 554.594 781.26 556.02 777.719 559.763 cv
774.084 563.606 776.273 571.005 776.273 571.005 cv
779.443 571.372 li
779.498 568.278 li
779.498 568.278 783.237 574.264 784.667 574.277 cv
786.608 574.296 794.371 567.255 794.371 567.255 cv
794.371 567.255 796.633 558.19 793.586 556.376 cv
cp
level3{
gsave
clp
[18.5837 39.9953 -39.9953 18.5837 783.579 560.291 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[18.5837 39.9953 -39.9953 18.5837 783.579 560.291 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
794.575 588.464 mo
786.143 590.378 li
783.904 579.722 li
791.05 572.601 li
791.05 572.601 792.21 578.384 792.587 579.589 cv
794.867 586.872 794.575 588.464 794.575 588.464 cv
cp
0 0 0 0 cmyk
f
784.671 583.371 mo
784.78 583.887 li
784.78 583.887 786.835 583.26 788.35 581.993 cv
790.056 580.565 790.117 578.388 790.117 578.388 cv
789.212 578.181 li
789.212 578.181 788.578 581.629 784.671 583.371 cv
cp
.188876 .159243 0 0 cmyk
f
785.427 557.623 mo
790.814 553.899 796.285 557.425 798.555 559.686 cv
800.57 561.694 800.404 566.048 800.42 569.139 cv
800.434 571.857 796.147 580.847 792.61 580.194 cv
789.146 579.554 786.516 574.462 786.323 574.125 cv
785.324 572.384 779.928 561.423 785.427 557.623 cv
cp
level3{
gsave
clp
[18.5837 39.9953 -39.9953 18.5837 788.429 558.038 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[18.5837 39.9953 -39.9953 18.5837 788.429 558.038 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
785.588 572.439 mo
782.894 572.49 783.35 576.791 784.671 577.277 cv
785.383 577.54 786.536 577.059 787.053 575.098 cv
787.428 573.676 787.394 572.405 785.588 572.439 cv
cp
0 0 0 0 cmyk
f
785.212 573.759 mo
784.833 575.836 li
785.248 576.084 785.841 575.054 785.948 574.415 cv
786.055 573.774 785.655 573.519 785.212 573.759 cv
cp
.188876 .159243 0 0 cmyk
f
794.393 560.359 mo
796.405 557.564 li
799.313 558.962 li
796.278 561.963 li
794.393 560.359 li
cp
.875944 .808225 .086183 .00854505 cmyk
f
789.806 558.239 mo
785.861 561.659 783.357 567.049 787.868 572.095 cv
789.508 573.93 791.27 578.014 790.117 582.705 cv
788.889 587.704 791.121 594.145 794.393 597.041 cv
799.063 601.173 799.846 605.5 799.846 605.5 cv
799.846 605.5 805.132 600.649 805.037 596.381 cv
804.981 593.862 803.759 589.157 806.219 584.495 cv
808.743 579.712 805.679 571.634 804.446 569.137 cv
802.406 565.005 803.623 562.603 800.151 558.438 cv
798.649 556.635 794.276 554.366 789.806 558.239 cv
cp
level3{
gsave
clp
[18.5837 39.9953 -39.9953 18.5837 787.965 558.253 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[18.5837 39.9953 -39.9953 18.5837 787.965 558.253 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
368.171 793.416 mo
344.966 806.812 307.344 806.812 284.139 793.415 cv
260.934 780.017 260.934 758.297 284.138 744.899 cv
307.342 731.503 344.964 731.503 368.169 744.9 cv
391.374 758.297 391.375 780.018 368.171 793.416 cv
cp
.876249 .890257 .480323 .659937 cmyk
f
320.062 732.936 mo
320.002 731.938 li
321.304 731.86 322.635 731.806 323.959 731.778 cv
323.981 732.778 li
322.669 732.806 321.35 732.859 320.062 732.936 cv
cp
333.781 733.04 mo
332.477 732.942 331.159 732.869 329.864 732.822 cv
329.9 731.822 li
331.208 731.87 332.539 731.944 333.856 732.042 cv
333.781 733.04 li
cp
310.32 733.999 mo
310.162 733.01 li
311.461 732.802 312.781 732.619 314.085 732.464 cv
314.203 733.457 li
312.912 733.61 311.606 733.793 310.32 733.999 cv
cp
343.507 734.256 mo
342.24 734.032 340.936 733.829 339.631 733.652 cv
339.765 732.662 li
341.084 732.839 342.401 733.046 343.682 733.272 cv
343.507 734.256 li
cp
300.747 736.06 mo
300.483 735.095 li
301.747 734.75 303.04 734.426 304.327 734.136 cv
304.547 735.111 li
303.275 735.399 301.997 735.718 300.747 736.06 cv
cp
353.048 736.482 mo
351.818 736.121 350.544 735.779 349.261 735.464 cv
349.499 734.494 li
350.796 734.811 352.085 735.157 353.33 735.523 cv
353.048 736.482 li
cp
291.484 739.21 mo
291.102 738.286 li
292.304 737.789 293.551 737.311 294.807 736.867 cv
295.141 737.81 li
293.9 738.249 292.67 738.719 291.484 739.21 cv
cp
362.245 739.817 mo
361.071 739.3 359.852 738.804 358.62 738.341 cv
358.972 737.406 li
360.221 737.875 361.457 738.379 362.648 738.901 cv
362.245 739.817 li
cp
282.792 743.567 mo
282.494 743.162 li
282.241 742.73 li
282.281 742.707 li
283.376 742.047 284.528 741.403 285.702 740.794 cv
286.163 741.68 li
285.008 742.28 283.874 742.915 282.792 743.567 cv
cp
370.866 744.406 mo
370.424 744.124 369.974 743.843 369.515 743.566 cv
368.857 743.17 368.187 742.784 367.507 742.409 cv
367.989 741.534 li
368.681 741.915 369.362 742.306 370.031 742.711 cv
370.498 742.992 370.956 743.276 371.405 743.564 cv
370.866 744.406 li
cp
274.921 749.378 mo
274.246 748.639 li
275.199 747.768 276.227 746.909 277.302 746.086 cv
277.91 746.879 li
276.858 747.685 275.852 748.526 274.921 749.378 cv
cp
378.5 750.437 mo
377.603 749.552 376.629 748.676 375.604 747.837 cv
376.238 747.063 li
377.287 747.922 378.284 748.819 379.203 749.726 cv
378.5 750.437 li
cp
268.702 756.795 mo
267.849 756.273 li
268.527 755.165 269.301 754.064 270.149 753.001 cv
270.931 753.624 li
270.108 754.656 269.358 755.722 268.702 756.795 cv
cp
384.369 758.12 mo
383.772 757.015 383.077 755.913 382.305 754.844 cv
383.115 754.258 li
383.913 755.362 384.631 756.502 385.249 757.645 cv
384.369 758.12 li
cp
265.271 765.758 mo
264.284 765.594 li
264.502 764.291 264.835 762.981 265.274 761.701 cv
266.219 762.025 li
265.798 763.254 265.479 764.509 265.271 765.758 cv
cp
387.237 767.269 mo
387.114 766.005 386.878 764.731 386.537 763.482 cv
387.501 763.218 li
387.858 764.521 388.103 765.851 388.233 767.172 cv
387.237 767.269 li
cp
264.795 775.569 mo
264.441 774.265 264.198 772.935 264.072 771.615 cv
265.067 771.519 li
265.188 772.784 265.421 774.058 265.76 775.307 cv
264.795 775.569 li
cp
387.05 777.088 mo
386.103 776.765 li
386.522 775.537 386.839 774.279 387.045 773.029 cv
388.032 773.191 li
387.817 774.496 387.486 775.807 387.05 777.088 cv
cp
269.166 784.537 mo
268.371 783.434 267.654 782.294 267.037 781.146 cv
267.917 780.672 li
268.514 781.781 269.207 782.884 269.977 783.951 cv
269.166 784.537 li
cp
382.188 785.797 mo
381.405 785.173 li
382.227 784.141 382.975 783.074 383.63 782 cv
384.484 782.521 li
383.807 783.63 383.035 784.731 382.188 785.797 cv
cp
276.034 791.742 mo
274.992 790.885 273.995 789.988 273.072 789.076 cv
273.775 788.365 li
274.676 789.255 275.65 790.131 276.669 790.968 cv
276.034 791.742 li
cp
375.043 792.718 mo
374.435 791.925 li
375.479 791.124 376.484 790.283 377.42 789.424 cv
378.096 790.161 li
377.138 791.04 376.111 791.9 375.043 792.718 cv
cp
284.278 797.276 mo
283.601 796.902 282.933 796.517 282.277 796.123 cv
281.796 795.833 281.325 795.54 280.863 795.242 cv
281.405 794.402 li
281.858 794.694 282.321 794.981 282.793 795.265 cv
283.438 795.654 284.095 796.033 284.761 796.401 cv
284.278 797.276 li
cp
366.565 798.061 mo
366.105 797.173 li
367.277 796.566 368.425 795.924 369.517 795.266 cv
369.854 795.647 li
370.039 796.119 li
368.923 796.792 367.757 797.444 366.565 798.061 cv
cp
293.292 801.411 mo
292.045 800.941 290.809 800.437 289.618 799.913 cv
290.021 798.997 li
291.195 799.514 292.415 800.011 293.645 800.475 cv
293.292 801.411 li
cp
357.457 801.98 mo
357.124 801.037 li
358.364 800.599 359.595 800.13 360.781 799.64 cv
361.163 800.564 li
359.96 801.06 358.713 801.537 357.457 801.98 cv
cp
302.764 804.328 mo
301.473 804.012 300.184 803.665 298.933 803.297 cv
299.216 802.338 li
300.452 802.702 301.726 803.045 303.002 803.357 cv
302.764 804.328 li
cp
347.936 804.708 mo
347.716 803.733 li
348.995 803.444 350.274 803.125 351.517 802.786 cv
351.78 803.751 li
350.523 804.093 349.23 804.416 347.936 804.708 cv
cp
312.497 806.166 mo
311.186 805.989 309.869 805.783 308.581 805.553 cv
308.756 804.569 li
310.03 804.796 311.334 805 312.631 805.175 cv
312.497 806.166 li
cp
338.177 806.374 mo
338.06 805.381 li
339.358 805.227 340.665 805.046 341.942 804.841 cv
342.1 805.83 li
340.809 806.035 339.489 806.218 338.177 806.374 cv
cp
322.362 807.009 mo
321.037 806.961 319.706 806.886 318.406 806.788 cv
318.482 805.79 li
319.769 805.888 321.087 805.962 322.398 806.009 cv
322.362 807.009 li
cp
328.302 807.056 mo
328.282 806.056 li
329.576 806.03 330.895 805.977 332.201 805.9 cv
332.259 806.898 li
330.941 806.976 329.61 807.029 328.302 807.056 cv
cp
.571832 .880613 0 0 cmyk
f
385.532 234.046 mo
385.532 242.139 li
392.542 238.092 li
392.542 229.998 li
385.532 234.046 li
cp
384.532 243.872 mo
384.532 233.467 li
393.542 228.265 li
393.542 238.671 li
384.532 243.872 li
cp
f
368.151 789.943 mo
345.316 803.127 308.293 803.127 285.458 789.942 cv
262.622 776.758 262.622 755.382 285.457 742.199 cv
308.291 729.015 345.314 729.015 368.15 742.2 cv
390.985 755.383 390.986 776.759 368.151 789.943 cv
cp
0 0 0 0 cmyk
ef
365.775 788.218 mo
344.252 800.644 309.357 800.644 287.834 788.218 cv
266.311 775.792 266.31 755.645 287.833 743.218 cv
309.355 730.793 344.251 730.793 365.774 743.219 cv
387.297 755.646 387.297 775.793 365.775 788.218 cv
cp
.041474 .203189 0 0 cmyk
ef
354.773 780.066 mo
339.327 788.984 314.282 788.984 298.835 780.066 cv
283.389 771.147 283.388 756.688 298.835 747.77 cv
314.281 738.852 339.325 738.852 354.772 747.771 cv
370.219 756.689 370.219 771.148 354.773 780.066 cv
cp
.234165 .60528 0 0 cmyk
ef
368.151 788.181 mo
345.316 801.365 308.293 801.365 285.458 788.18 cv
274.428 781.812 268.742 773.533 268.367 765.189 cv
267.966 774.12 273.651 783.126 285.458 789.942 cv
308.293 803.127 345.316 803.127 368.151 789.943 cv
379.957 783.127 385.642 774.122 385.24 765.191 cv
384.866 773.535 379.18 781.813 368.151 788.181 cv
cp
level3{
gsave
[116.913 0 0 116.913 268.347 782.51 ]ct
<<
/PatternType 2
/Shading
/2 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[116.913 0 0 116.913 268.347 782.51 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/2 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
383.104 696.205 mo
268.926 696.432 li
288.859 763.89 li
289.767 768.588 293.332 773.146 299.571 776.749 cv
314.176 785.181 337.856 785.181 352.46 776.75 cv
358.704 773.144 362.27 768.581 363.174 763.88 cv
383.104 696.205 li
cp
level3{
gsave
[-.600135 63.9144 -63.9144 -.600135 325.763 723.174 ]ct
<<
/PatternType 2
/Shading
/5 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[-.600135 63.9144 -63.9144 -.600135 325.763 723.174 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/5 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
366.853 715.357 mo
344.299 728.379 307.733 728.378 285.179 715.356 cv
262.625 702.335 262.624 681.223 285.178 668.202 cv
307.731 655.18 344.298 655.181 366.852 668.203 cv
389.405 681.224 389.406 702.336 366.853 715.357 cv
cp
level3{
gsave
[115.504 0 0 115.504 268.263 691.779 ]ct
<<
/PatternType 2
/Shading
/2 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[115.504 0 0 115.504 268.263 691.779 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/2 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
362.628 711.989 mo
342.408 723.663 309.624 723.663 289.403 711.988 cv
269.183 700.313 269.182 682.315 289.402 670.641 cv
309.622 658.966 342.406 658.967 362.627 670.641 cv
382.848 682.316 382.848 700.314 362.628 711.989 cv
cp
366.852 668.203 mo
344.298 655.181 307.731 655.18 285.178 668.202 cv
262.624 681.223 262.625 702.335 285.179 715.356 cv
307.733 728.378 344.299 728.378 366.853 715.357 cv
389.406 702.336 389.406 681.224 366.852 668.203 cv
cp
.382605 .850126 0 0 cmyk
ef
366.852 668.203 mo
356.264 662.089 342.589 658.847 328.725 658.473 cv
342.261 658.847 355.608 662.017 365.945 667.986 cv
387.999 680.718 387.999 701.362 365.947 714.094 cv
343.894 726.827 308.139 726.826 286.085 714.093 cv
264.031 701.361 264.031 680.717 286.084 667.985 cv
296.42 662.017 309.768 658.846 323.304 658.473 cv
309.44 658.847 295.765 662.089 285.178 668.202 cv
262.624 681.223 262.625 702.335 285.179 715.356 cv
307.733 728.378 344.299 728.378 366.853 715.357 cv
389.406 702.336 389.406 681.224 366.852 668.203 cv
cp
0 0 0 0 cmyk
ef
362.627 687.237 mo
342.406 675.563 309.622 675.562 289.402 687.237 cv
283.1 690.875 278.764 695.128 276.39 699.612 cv
278.764 704.096 283.101 708.349 289.403 711.988 cv
309.624 723.663 342.408 723.663 362.628 711.989 cv
368.93 708.35 373.266 704.097 375.64 699.613 cv
373.266 695.13 368.929 690.876 362.627 687.237 cv
cp
1 1 .0230716 .0349126 cmyk
ef
353.033 774.731 mo
338.112 783.346 313.92 783.346 298.999 774.731 cv
294.017 771.855 290.729 768.38 289.076 764.71 cv
290.224 769.115 293.696 773.357 299.571 776.749 cv
314.176 785.181 337.856 785.181 352.46 776.75 cv
358.333 773.358 361.806 769.118 362.954 764.714 cv
361.301 768.383 358.012 771.857 353.033 774.731 cv
cp
ef
285.351 659.722 mo
287.405 664.525 289.802 671.119 291.909 677.065 cv
294.014 683.01 295.799 688.344 296.529 690.688 cv
298.907 698.316 301.37 705.893 303.846 713.443 cv
302.682 714.18 301.524 714.913 300.371 715.643 cv
299.647 713.5 297.504 707.066 295.329 700.187 cv
293.156 693.302 290.971 685.93 289.953 682.026 cv
288.436 676.224 285.738 663.674 285.351 659.722 cv
cp
level3{
gsave
[4.05091 130.304 -130.304 4.05091 291.885 599.308 ]ct
<<
/PatternType 2
/Shading
/2 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[4.05091 130.304 -130.304 4.05091 291.885 599.308 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/2 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
293.83 628.736 mo
294.772 636.987 296.416 647.803 298.134 657.414 cv
299.852 667.015 301.583 675.473 302.406 679.13 cv
303.761 685.134 305.122 691.141 306.53 697.117 cv
307.936 703.088 311.204 715.967 311.204 715.967 cv
311.204 715.967 313.885 715.871 315.684 715.179 cv
314.901 712.422 312.661 700.234 309.78 689.449 cv
306.895 678.662 303.899 667.027 302.451 660.998 cv
301.404 656.636 299.706 649.886 298.035 643.569 cv
296.364 637.255 294.753 631.356 293.83 628.736 cv
cp
level3{
gsave
[4.05091 130.304 -130.304 4.05091 302.488 598.978 ]ct
<<
/PatternType 2
/Shading
/2 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[4.05091 130.304 -130.304 4.05091 302.488 598.978 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/2 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
352.142 633.62 mo
350.202 641.695 348.043 652.42 346.366 662.038 cv
344.693 671.647 343.423 680.186 342.944 683.904 cv
342.162 690.009 341.384 696.12 340.66 702.215 cv
339.938 708.307 339.731 711.555 339.063 717.648 cv
340.974 717.615 342.889 717.581 344.816 717.547 cv
345.024 714.688 345.354 707.244 346.34 696.124 cv
347.323 685.002 348.491 673.045 349.196 666.883 cv
349.705 662.427 350.421 655.504 351.014 648.997 cv
351.605 642.492 352.112 636.397 352.142 633.62 cv
cp
level3{
gsave
[4.05091 130.304 -130.304 4.05091 343.18 597.713 ]ct
<<
/PatternType 2
/Shading
/2 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[4.05091 130.304 -130.304 4.05091 343.18 597.713 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/2 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
316.177 596.852 mo
315.999 607.517 316.349 621.665 316.884 634.347 cv
317.418 647.027 318.08 658.287 318.449 663.178 cv
319.06 671.264 319.671 679.355 320.263 687.43 cv
320.858 695.506 321.466 703.583 322.056 711.659 cv
323.887 711.559 325.728 711.459 327.56 711.358 cv
327.357 708.025 326.49 694.414 325.461 679.604 cv
324.43 664.792 323.202 648.752 322.38 640.551 cv
321.789 634.692 320.673 625.565 319.493 617.029 cv
318.314 608.489 317.017 600.485 316.177 596.852 cv
cp
level3{
gsave
[4.05091 130.304 -130.304 4.05091 319.878 598.437 ]ct
<<
/PatternType 2
/Shading
/2 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[4.05091 130.304 -130.304 4.05091 319.878 598.437 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/2 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
337.891 603.573 mo
335.897 614.051 333.831 628.051 332.196 640.64 cv
330.561 653.224 329.294 664.432 328.824 669.316 cv
328.048 677.387 327.271 685.464 326.477 693.522 cv
325.687 701.582 324.563 709.413 324.115 717.702 cv
325.936 717.915 327.767 718.13 329.589 718.343 cv
329.957 715.025 331.423 701.464 332.934 686.696 cv
334.442 671.924 335.967 655.91 336.554 647.69 cv
336.971 641.816 337.427 632.632 337.72 624.019 cv
338.013 615.403 338.1 607.296 337.891 603.573 cv
cp
level3{
gsave
[4.05091 130.304 -130.304 4.05091 329.068 598.152 ]ct
<<
/PatternType 2
/Shading
/2 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[4.05091 130.304 -130.304 4.05091 329.068 598.152 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/2 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
376.105 657.109 mo
375.272 662.266 373.77 669.119 372.369 675.27 cv
370.969 681.419 369.623 686.88 368.986 689.252 cv
366.915 696.968 363.148 711.321 363.148 711.321 cv
363.148 711.321 360.248 712.391 358.884 712.391 cv
359.419 710.193 361.049 703.611 362.891 696.635 cv
364.738 689.656 366.835 682.258 368.063 678.415 cv
369.885 672.702 374.319 660.655 376.105 657.109 cv
cp
level3{
gsave
[4.05091 130.304 -130.304 4.05091 364.768 597.042 ]ct
<<
/PatternType 2
/Shading
/2 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[4.05091 130.304 -130.304 4.05091 364.768 597.042 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/2 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
360.406 710.478 mo
359.872 710.478 li
361.53 704.104 363.18 698.251 364.951 691.65 cv
365.588 689.278 366.934 683.817 368.335 677.668 cv
369.735 671.516 371.238 664.664 372.071 659.506 cv
370.284 663.053 365.85 675.1 364.028 680.813 cv
362.801 684.657 360.703 692.054 358.856 699.033 cv
357.729 703.302 356.682 707.419 355.916 710.478 cv
355.028 710.478 li
356.495 704.479 357.986 698.478 359.533 692.484 cv
361.428 685.143 363.417 677.806 365.446 670.473 cv
366.67 666.039 369.287 655.848 372.197 644.397 cv
375.114 632.931 378.357 620.163 380.363 610.547 cv
378.666 613.862 375.603 621.135 372.64 628.905 cv
369.683 636.66 366.763 644.933 365.056 650.257 cv
362.655 657.738 358.444 672.417 354.951 685.931 cv
354.474 687.776 354.01 689.594 353.561 691.375 cv
353.738 690.265 353.912 689.156 354.089 688.047 cv
354.527 685.308 355.421 679.027 356.285 671.956 cv
357.154 664.883 358.029 656.995 358.395 651.062 cv
356.905 655.151 353.532 669.007 352.199 675.572 cv
351.322 679.879 349.92 688.03 348.672 695.859 cv
348.71 695.539 348.738 695.197 348.781 694.887 cv
349.7 688.254 350.673 681.617 351.65 674.973 cv
352.241 670.955 353.492 661.737 354.832 651.363 cv
356.169 640.985 357.633 629.421 358.463 620.714 cv
357.608 623.719 356.102 630.305 354.647 637.333 cv
353.191 644.354 351.779 651.859 350.946 656.672 cv
349.776 663.432 347.749 676.675 346.048 688.863 cv
344.901 697.065 344.112 706.355 343.621 712.35 cv
342.948 712.47 342.276 712.589 341.599 712.696 cv
342.297 706.787 343.45 697.424 344.009 689.632 cv
344.804 678.496 345.771 666.52 346.372 660.348 cv
346.806 655.883 347.405 648.95 347.888 642.433 cv
348.37 635.92 348.774 629.817 348.758 627.04 cv
346.954 635.146 344.975 645.906 343.461 655.551 cv
341.95 665.187 340.824 673.747 340.408 677.471 cv
339.728 683.589 339.054 689.712 338.432 695.819 cv
337.962 700.449 337.115 707.544 336.487 713.365 cv
336.373 713.377 336.259 713.391 336.145 713.403 cv
336.856 705.803 337.566 698.201 338.323 690.6 cv
339.133 682.542 339.993 674.477 340.864 666.404 cv
341.392 661.556 342.395 650.427 343.347 637.899 cv
344.305 625.368 345.215 611.421 345.433 600.913 cv
344.353 604.544 342.617 612.476 341.023 620.967 cv
339.434 629.451 337.948 638.496 337.128 644.303 cv
335.957 652.627 334.123 669.098 332.676 684.048 cv
331.964 691.417 331.336 698.419 330.859 703.911 cv
330.687 697.471 330.501 689.901 330.399 682.968 cv
330.177 668.122 329.827 652.038 329.454 643.806 cv
329.183 637.923 328.567 628.749 327.855 620.161 cv
327.144 611.569 326.286 603.506 325.645 599.833 cv
324.885 610.472 324.462 624.618 324.304 637.311 cv
324.145 650.001 324.192 661.28 324.293 666.184 cv
324.462 674.292 324.631 682.404 324.781 690.5 cv
324.906 697.116 325.33 706.375 325.562 713.957 cv
325.241 713.958 324.919 713.952 324.598 713.949 cv
324.415 708.38 324.141 698.793 323.427 690.557 cv
322.457 679.454 321.268 667.518 320.52 661.371 cv
319.984 656.924 318.968 650.014 317.924 643.519 cv
316.887 637.023 315.771 630.941 315.078 628.165 cv
315.239 636.205 315.879 646.892 316.515 656.477 cv
317.149 666.058 317.821 674.57 318.166 678.279 cv
318.268 679.378 318.362 680.475 318.464 681.574 cv
316.707 667.94 314.629 653.705 313.333 646.207 cv
312.352 640.52 310.606 631.666 308.777 623.362 cv
306.95 615.052 304.998 607.279 303.857 603.738 cv
304.586 614.021 306.104 627.671 307.528 639.934 cv
308.948 652.193 310.311 663.089 310.975 667.835 cv
312.077 675.661 313.136 683.503 314.143 691.322 cv
314.602 694.893 315.045 698.468 315.483 702.043 cv
314.841 697.859 314.096 693.157 313.283 688.311 cv
311.045 674.95 308.242 660.513 306.558 653.093 cv
305.345 647.756 303.22 639.433 301.02 631.629 cv
298.818 623.809 296.487 616.478 295.158 613.11 cv
296.382 622.702 298.54 635.458 300.448 646.929 cv
302.353 658.387 304.096 668.57 304.912 673.014 cv
306.255 680.327 307.55 687.636 308.76 694.932 cv
309.766 700.972 310.702 707.013 311.62 713.052 cv
311.279 713.007 310.943 712.951 310.604 712.902 cv
309.444 707.225 307.212 696.27 304.716 685.475 cv
301.609 672.067 297.937 657.688 295.79 650.291 cv
294.23 644.915 291.523 636.552 288.783 628.722 cv
286.04 620.884 283.2 613.53 281.593 610.183 cv
283.113 619.887 285.79 632.777 288.254 644.368 cv
290.202 653.542 292.044 661.892 293.269 667.206 cv
290.74 660.872 287.711 653.85 286.166 651.132 cv
287.149 657.062 288.996 664.926 290.712 672.004 cv
292.424 679.07 294.081 685.348 294.859 688.081 cv
297.039 695.744 299.13 703.413 301.192 711.079 cv
300.746 710.968 300.302 710.854 299.858 710.737 cv
298.578 706.219 296.752 699.881 294.811 693.909 cv
291.741 684.444 288.214 674.322 286.177 669.101 cv
283.2 661.46 275.983 645.361 273.184 640.617 cv
274.816 647.513 277.497 656.659 279.968 664.883 cv
282.438 673.102 284.729 680.41 285.797 683.589 cv
287.468 688.572 289.116 693.552 290.713 698.529 cv
287.548 692.574 284.43 686.923 282.49 683.67 cv
278.815 677.495 270.21 664.615 267.031 660.889 cv
269.287 666.609 272.82 674.115 276.045 680.861 cv
279.269 687.599 282.267 693.571 283.629 696.16 cv
286.656 701.921 289.553 706.964 292.486 712.636 cv
292.65 713.055 292.825 713.478 292.99 713.934 cv
312.306 722.907 339.031 723.047 359.037 713.829 cv
359.029 713.849 li
359.27 713.725 li
360.954 712.941 362.606 712.115 364.185 711.196 cv
365.769 706.785 366.678 705.969 368.321 701.569 cv
369.011 699.733 370.506 695.494 372.092 690.712 cv
373.68 685.925 375.408 680.6 376.443 676.54 cv
369.925 686.242 365.832 696.172 361.874 706.883 cv
361.363 708.267 360.869 709.413 360.406 710.478 cv
cp
.234165 .60528 0 0 cmyk
ef
360.406 710.478 mo
359.872 710.478 li
360.233 709.09 360.594 707.733 360.956 706.381 cv
360.057 706.894 359.227 707.53 358.512 708.278 cv
358.178 708.627 357.843 709.014 357.38 709.153 cv
356.987 709.271 356.629 709.191 356.285 709.013 cv
356.156 709.522 356.032 710.016 355.916 710.478 cv
355.028 710.478 li
355.191 709.811 355.358 709.144 355.522 708.477 cv
354.825 707.893 354.131 707.176 353.27 707.166 cv
351.664 707.146 351.169 709.391 349.867 710.333 cv
348.684 711.187 346.94 710.777 345.856 709.8 cv
345.041 709.066 344.511 708.092 344.066 707.079 cv
343.897 709.006 343.748 710.792 343.621 712.35 cv
342.948 712.47 342.276 712.589 341.599 712.696 cv
341.771 711.237 341.971 709.567 342.183 707.763 cv
341.238 709.073 340.543 710.566 340.213 712.148 cv
339.15 711.419 338.087 710.688 337.025 709.959 cv
336.959 710.284 336.865 710.601 336.756 710.913 cv
336.663 711.747 336.573 712.569 336.487 713.365 cv
336.373 713.377 336.259 713.391 336.145 713.403 cv
336.189 712.93 336.236 712.457 336.28 711.984 cv
335.551 713.348 334.419 714.5 333.038 715.2 cv
332.302 713.96 331.263 712.551 329.825 712.666 cv
329.203 712.714 328.65 713.056 328.075 713.299 cv
327.281 713.635 326.413 713.76 325.554 713.712 cv
325.562 713.957 li
325.241 713.958 324.919 713.952 324.598 713.949 cv
324.594 713.833 324.59 713.704 324.586 713.583 cv
323.366 713.315 322.226 712.685 321.412 711.737 cv
320.775 710.996 320.283 710.058 319.395 709.65 cv
318.508 709.241 317.125 709.922 317.411 710.856 cv
316.305 711.479 315.533 708.6 314.401 709.174 cv
314.154 709.299 314.016 709.564 313.893 709.811 cv
313.521 710.565 313.148 711.318 312.776 712.071 cv
312.199 711.652 311.7 711.141 311.241 710.596 cv
311.366 711.415 311.495 712.234 311.62 713.052 cv
311.279 713.007 310.943 712.951 310.604 712.902 cv
310.286 711.346 309.885 709.385 309.423 707.149 cv
309.354 706.943 li
307.988 709.104 306.514 711.197 304.941 713.213 cv
304.093 712.825 303.346 712.22 302.789 711.473 cv
302.38 711.949 301.714 712.189 301.095 712.084 cv
300.193 711.929 299.535 711.14 298.677 710.824 cv
297.819 710.507 296.518 711.26 296.974 712.053 cv
295.093 709.912 293.212 707.77 291.331 705.63 cv
291.208 706.466 291.085 707.303 290.962 708.14 cv
290.321 708.537 li
291.042 709.879 291.763 711.238 292.486 712.636 cv
292.65 713.055 292.825 713.478 292.99 713.934 cv
325.396 729.95 358.884 715.643 364.185 711.196 cv
365.004 708.919 365.641 707.598 366.293 706.25 cv
365.444 706.158 364.62 705.813 364.026 705.197 cv
363.437 705.324 362.864 705.513 362.304 705.737 cv
362.161 706.121 362.016 706.498 361.874 706.883 cv
361.363 708.267 360.869 709.413 360.406 710.478 cv
cp
level3{
gsave
[.312395 58.7302 -58.7302 .312395 328.322 710.153 ]ct
<<
/PatternType 2
/Shading
/2 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[.312395 58.7302 -58.7302 .312395 328.322 710.153 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/2 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 23.0.1
%%For: ( ) ()
%%Title: (m0029-04.eps)
%%CreationDate: 12/5/2018 4:29 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBm\;ufC8[Jf>W4n2haRA62O"$ZrlZ+8.'3J9:\IBgc0Il4)O5;kI84hS=,L/MsYKsYaroM8%(8nc-4k-)-suu%SlnJh>T]"
%pubt!c#J04[:Yl!hcd@'he]D4VWV7\k5+bKh08+^;V>=L29hgF]QIEpQgnDlnLHL/%sCa0e,FT537pqqUM/!n$qL%qdH=9>or<'5
%B0*/edU$k]G:W$&G)tRMi0jNml1WP90Kec^>L'fL5FS5.iZCX/'f:H5l$)mNZX`cE.ij\EO3fdc^E1)bl%OL\pj(]'I+Qa(!t7JN
%&`X**IY/0FVH^L`](tl%HI*[lLRiF/d/WbS[M1iFfU]M"P7BYTpU\u)U"k<bXZ5/*SG't(9<GiBHlV$Y@2$+SDbfeg&RFM*1qFNM
%_@-7<HeAq(XQfMH=0$eecUQ)o=mS>ARk`d;?kjZ`A_D%Vi"tUB)rNA.WKT0T_njH7B6Z8%(X.-oG'\Pal\nc&,s##4=@LR-f/:.P
%mT4Bg5b)3HBZ@XHd%,=2>1[&kZg6<1)Z=DY"lIQWc#G<5X.0*:YOsa>m%m(09#5JZebp:\7Q3.@Ybl.4`4OK)3rG]/*Q)h:qTWZ'
%IPobNHVcqF+R+"SZ_Ua"s1H?pB6]MuJPl]c;hXbUQC$Fhp$)"icK>n(hV^><F-?7+#OeXmCQ<$M]c!EpdarULAu2?ie5=\0)%PKC
%"F03d\1_8#D]P=aL;YZK(\(lHki'djHdM0;>LPa1[H;`mVj/XImTrX<Y0lgm5AGT%PMX#uo3T<SN5oX>b_p@dMI&kBVld_fiqM(h
%4?_QcGIfbh"uNH-/Rg%McrNC!N&r^.^2E08Vghn/kA`P7ZN(fd2"<fG+'u[Bs.`-_C79B(9g!3[Gh+_)fd*97fk$1reJnh/3=])2
%*3A9^8Ko)GIB;K+=N?15?1.Slc1eI]I_u+e/W-c9']GlcKP."blQce.9bPL?bEE&Z,RM)=FddH@on_FfS]+7@H..GinUT//>kfDA
%iOHg>ff:#drl7&Z./ZkN(Xp2Q`c9ser.]j@s4A$T/ClWf$NJT-nH8cLj2/F63Ft@hC,e'JO*-TgIhPYQcEipNF319ds0GAOkh,r<
%pK?t;rMfAi<2'_H@5T#Lrl:lQ+PFih3=\%HJCSUt!n(n"fYog>r/]`SJ.)tX5OU`6K`A:qNY2:I?nuh4PKS9&pCt,&SJRY=5f^IW
%jrUS.aV/a57aD9(SS)5<G@k\"Yd#\;Klq?b!_76\F?(:#4,mags&b9>3f]?I$bI8U@iZO3>V<6c:_K6]Fq9>l!hBMC#eZqX1R)<=
%+c&P%QH_VZ+.IV#B/Y%bGl\a:51Y.`-LT3KB+;*:m);'4#aJgVK0>\HejMhXL<;OLZYSK>6+o:LM93p)J76$^JK,?fnf4,%jlau+
%F.GZ#q]r&&0$gF`FB<QegmL%D/k(>A00F8UWUlHbYZ(@[]e#(ic]@DrQeOFq.6k,)la$!TOhEl<IJ:D@mN-i]!BZPgfddKap\`*=
%E-WG0TCO4R[G1%pIUk)`HZ;610Z<u"^?iK,`f<#J_hp"7c\66sKqfe5X)GLqdOCIUPfp=&8%7p-0!@F7EeMX%:DpadS*iJJ9&5/4
%8%Q=T*7qt$j_'"fEHsa4r5clAH'DYVD+a"IouJeYk7Vr;L&4q:)sg8_\,`n8U;h:;pi>_1#!RE3G(I\lJGW;.aOs#L*.M8(c[$C_
%:r=oO%;ifb]>,Yj!V<UQ098#W,5\lp[$_.01;Kkuq:oq]L(?__?S&f;&BP*l^#nlHg/;B%?^G&_B*15&iZQF$2AaXkk]2TW$/$]S
%nOp-FZ_3:8JSfcP[&J)TqBM\.*HnLB_8T"a(&MPpFtm:Gp``UJ-6@u"rVGkI`XA2?e.,p8OUY_Cg7/K;;r.L>f<F6YNa)_!^lN&M
%TuK8K*c5M^$Y(-Y'Detpc6ZQl,&!a'#6JaW:dTka>R\6K>i5(BaS+Z8FsW_@Mg["YM`SNGK'\**haQa4YoVPL*FogcQrnf_EGh<Q
%;$,W`i^_JeiZ-`c(;!D.1)&$20I0`o2;`Ni.#)NQI"[Ajj3S2gSA:nY(Xo4>3kN3-bS-G[B=!Z*ToFWKCL=EqU$<t"#j;:;@U"Rg
%XCaKC$$?\A_[CSH`u/X9jn;M9Rp#M_b:^rX3jukb);on/d)(F'LgX[Yf7:>JpfUrJK7lXT!r1kP`))&ZL*$_0QJZ=e(IH:n_Op6[
%T-C:c2FR/>'0/+C"iLeeFXtc,!G@!F+&g3p;$2ZoO1tt4&Bnm,N)rE:Hq9QU1BFSobAdSr,6qJ,-ilOM:(;8d6Gs0pL)R=t/u7W=
%(O5#B68,[*HF@f_ZiTTFlln]<@0h%-EeU1kp;Ee"0GDsBU@nW!7HAc+.5R=F6P414%ASk?[ICB9K1KGfJd?bU[QGL!S"YSShgcoh
%7Ym.fD:HBb/feT=k@,5/0.+J_IQLS>(Ru42Dd]*4D-KTi"n3Dd3l;>#)=YXB2+%g<R>LWQcC/5f0`6i>(UHq*"`:-2M`?;`@0:E"
%JY0lLSKrb^)E"5k:4tU<N2tRZJ!>BUD+o=3F]1*?fr1Y+qN+fJq,i7k);OCd)7F,Ae9MGs-^tH%AiP>@`=Z]*c6fb@M2LZ:LKST$
%!,;XOCu[Y371HkrPANkW_R<`H0`mudGC`"g`,O>h\6qogOTE!B-=jIh@<P#eF^Rs\HNLf-Tu@^h;8n*cls_k*9N=]%bI61CB7c,o
%E_P9pA\?sfK%]6Am+6d4";[@6*SJF6[#;7])8lR12M%Q*&X!N9QnHcJE7;8RSH:YqRU8'^&F>"D"rMa'2O$\5Wa4,[$q7Okr3k<+
%JhA<Y`70=l0cH)b\hk@t?l(L1T"p7&X:qNuDoOPSNZ+AE1aTT(95pL\;.j;RMX5s-CkOL\&[SrZK5>CWj_j1pe`0*3<[ircp,'F\
%\U;!#UPK.3G#c/^M@XhnX,+P],G'9nGX:Zt5?aWl'pVQ$hEnj4m).>7Gp6RV/]6Lc7Woq%j=Gn'(>>FH&^*.2HujJIhH#f5"\h[n
%Hqk;#'&4@>J:*ntoMm=r?,P$iBJYFU"-lAe'B789,Fs5t7sY9lYhF\7n0;Y=2-<pf)19_l#FV$>/leYmB,=M6Q:^jj<[kqf:;T%/
%eKhLM^<:c;0<Z)m2-Qko9nE0mM,L6_aQu5Z#q[61A&KPj"MpMB?,446%lmrMG#:_g1(G]XM4HTk6]F)UTFGs1TFiY18iHMiZc)=&
%AAfoA@&Uo/-\#b[UG/K7&akPCU-^-:)S;B1J-\YuQjJub*<#tuSUIShe*,Tr-TkAK"e:GsE0Y!jh_U*Q")Y+gp.HDibf;=uPl9g5
%5h?\/"5u@k"D`PoJKMcL2%%)'7@_0=HP;[kR>0rDcplSAVQl&Im";/FM1\NYCj\"J)rWWD+LEl?9Y6B`_l[Fpjj,5-0o9a@@NQnm
%FC*e'KJjP3FGh%_HWs(tkje5dcW7Zn/i()<E5H8iga@Bgk<^,EA]X<Xlp<a:OV:?I#g'q+l\!$EI?`-48smPc"Z*tKU%fu5dn'mA
%V\oo<Jj?m@?rjFc?B5im7>20<`QYQ;\To'%[&Y#D9VV*IN"L0BCIDTo7$_`qHD(/@QQiHKMJ*(:cgsWQ?GSIF-"^#l4:#YZnfpA&
%kfFJ,pY]^'(;'_YXK0-e_&<n;Ou(JR#Bnj<pr?t(:4iAE;+n"]$jIQ,;&%r[l\bi-Vpb^m"4"PfpjipV<Q@*b-P(Mk6%dAd&l%A3
%(SP,.?jdWMKRCur7jU-=2TSBH@L]TX`M<2\fEEB!9S7m5O-:4OFr:"*NsZ`hd'Z37^o6qjA3,Ph8-q(-3iMA2-$Fj@Ypq"1(YHe4
%/eI@i2Kmsg!_p0a0u=D75gX]e""Xc8($]FUpW2P_/)4pYJg0="BL>8uA!.bo9n9u%N]7sdmYCpn(uY0$k(NIe^?HGaIOT#@eBC#]
%7TU>aZA3f76`<qH$X.+)K&dak/4RJ3%4d9XblGBdYk&:S%-F.@(lrd":bN:Y5[+k0^.-mi;B06@>7qSV<+"Sa,r&i$MWi,b?Dd+t
%&`Vn2cFfQpoaM+P*'_>e0e\ZWbCL;Bk!*'FkkQ.2SPVac:K7p;6!YY86hY'D0I5jp]FIG-`FMZYMS`3J]f>#A"?u#LJII#/\>UeY
%>\'9]bX$)2UDE9]<.J[fJAHX<@j&NQM>A)B0H!qX#Os]Gir0A_+9QT\JJW!^iEJ8HAPQH,$igrG0+#>=%:.l"8d]#C<)Q?j/Rq),
%o89[dCl"JfZ5G&8K?;tdm)>_q)PC_iG.+V0E+'pl)OJD$8:qJ25sCA9J&b[t>us+CHB@ZB>%'H.P:27oB(f*Sd`[[T#(^YZT-)&,
%%h)p4=]!a!q]a3G?c!$b]oQl2GeaqA/8Qf2=71I'.N0YmJKuQtIF4V$*,=t/@[1m8`>GueQj'ZIhMIUb1[f(P'1VbO:Q^j2;*C9i
%//4XMF;,T&$jSPs5RA6?lm6bhpm07g!'N3Gpq67LnR2Xgd.'iG"EOe>NVYd&lrY0*c+Do+Y@eD?;95tm`TPsN.[`UL(5Undd?K]C
%LKNJ)3Q,K6OEb'ed06SoeQmof>%)+9>*44"\XjmsH8$/A@!'6?!6i9NGm3sOe1h2S)jjVA:K>X02aH8>Ooghd%3)7l&j_O6LToHJ
%<8o\)0arLkU'?S!j!Z(2/q0r1%)\l^0bLM1/E8e"=?$@8#f=qI9.DZ$Cfq(Wg[LM*@SX&2L`1$F@Y/bHTglZ^a?9hVdk9RRKeD/:
%ZKrR"QDfZGV7.7L6k%a9ET2eP@d>hD?fU,ul'53'Xu4p%*KguobV12)16Q@pDjL(7*;U((-H5s1S-RLeEco\8j051fcl?O%%C8)`
%R8k_O'Je.q@U`XQK7N9mHs.&ScB'268oKL0"EVYP3nW!<Wg)=f7PX_";Y&P%CBn9&`+:WM@sB`#\$.&hVSHJkH-kXu9*o\Xr6$LO
%^KFi$Mh&,fL1eER#kV[7L^qa:VNHK[(-8T9_eauKK1[=Cf3O?0=Y_!>->42qGuF[FBGWr*&S5"`HtAI6j6'*f-penZ*nk#$\2XR[
%LjmF\TJVdaA%0W$m[/:@QjM._DA#=I7PVp]$`H@'fUV:pIS\<D.`\N%j*Fab5m96Z4u9q,bQ&;pc7Y2InE?bNj%D)[:!P]-e@&d$
%Ho?GD9&ITk^?.L^atW%:9Y-0[YSUaN,Eq-UPLdoN6528;b?0m`M9-#i\d]K`Gk>.9:W=,?X5o5U?nlVlX)CfeSJQNgm'^3OD%e7`
%3!1#c5\tC+RQA*sf@Wk'3\<(AY3^\7,R@:E-7bp-mi;1FBc"]5E"6hu60'dG'Gjs2&!ERkC`<rjL*Ug4%HIk6)eT4./s-\(2F1Es
%aoug(kU]5nXU8N-N.5=G'\*H4-04]KhHOM.-CafL;gT!t;.U8ZYR@,u#cGP#&NSLkO)qa[ahkEZ-d#M0@(Z]K!AA@)@R.1c9TeiO
%+a>V(-M]b$88H4Q%S3d6!`Ph;-R+rC.VrPu]9pS^->QWdM%!XCKSrQDR>!rMDfDZZ_[)i@)>GcG)C+/`;A1cT7NO:.?tk1Q.PrdQ
%!";+<Jg4bBGf9&i3@O;hHa($P?uM):_Dd-6AlOh6L0+Ub!71RhI#r^l3JnXX_ZTlRT-G[$&>V9Hf->TSW8P6&7D4g<&4sCM-:?-*
%4Gnr)+)G-:5lhO%oYL+a_G#lPof7U.TZL0SX0@L2d%A-,!!hNCg,rQJ$/!%fdYuKW(q'o_N5.DX$oK/e1["q!0E[M,7DLZ.I><Xb
%TD>FJ'Gsp1#pB<u$c8`Y'SbT^Tmro%/2WP^+9X$KM91\X+RdI2YOI@=O4]mXXQ"d6"[$pTgSI^[:*=86N'Wo234K9W&$?+[6mOV]
%*Nknm@X/LK&YM:MZ/VArm^(9;?>H-T$r#*JOY+Xio+3JTP>qo0ha5@mkZYFRiOW,=AGTg:W8jUq!Q"oU(aa!"UcGY(',Q[2r5>m+
%ORjZ=@%_QrYH)(?e`-f"!mi-ZL's@T:CPETbfYLa1OsbRa&0ccr^2'[<WHeGH7\`X"nX6=B+iuk0d$N/7pq"G-r>;CFdBl$'_!d>
%oB1e=po4Pe>+ZOKF\q>TdS=!&$"D?U%A3=<%q$0Icjo\%N(c_P&s*e[A\9_a)9j[^4Y?'DU7ihL>jhGUP<9621\fF2Zi5>k0DR4I
%Ym>l031UjVm)#E_1T5jOHS`k]'*^*/jW3hP0U'mOO)+?SHbXDB4e#+W@$ls1^lFBA/b1Q&0S9nR$[g\;:alj4+tB*#mcF0GeO[YT
%CDb#Q2jX3*To@<>*#s<WRIMnk"_j)2;Zne4>("Xb"3WL]r8&sO43RU/4Je1hN6Q<ab%QsV\m5\f2jP(4psDM81Rfqm`EK^p;WN8S
%s-]<Hnsuu]%JcAsKCaB\isB-;EEJ8N&-_6LU_q=,"VY#"RFOXYN'a3/;JoiL-40.)a-8P66$%m->m=FJIj/AFA;UBF4BpmiE5&XM
%OWuIA&YA:k$L&MKUVQ[4,ETG9!%q;K$XFRgm?Q-uU(E/[`W3Al(ml25%iL-il=Tsc6f+Z=1,;0FnQM81BZI!'\[+PML3bOHj-`I,
%kW9&8ZiO`20l#'p_SF(j;;Wo?_FBm&"87tFGm7NimC9b?oc-b^4<%HABgKB73_btS[jtcKQ0oLokf!?qb6.Ejm.WDpSA=XaVZ?[k
%SBeZCB(CTf!bl8s&c8H;B3P0`$M2EEQi&aSU&#DW$ZK+=H5Z,T1P$amZACi:"&nbu-9Qb6A;WF\4i:brq[,t#ApPFi3^c.qBbfoT
%^a\l!ENJ-j1=ZJsbt52]AIZKslk_1l;)/0B9cf)%7QcL4/R4Un8Z\G82D[ZEXocC%Bm8uQQ<kkfaoOFCGFq4jo=7/??8kIKPCN>;
%F#u/iR3<@/n4&(mLObe=OVnAVUm?a[4qG2GGqG"'Jp?Tn6I2Am18-Cd+hQ#M:DP5i=eRG:j,.kDCshWn<k&qH.,/aa;E]Mrc$p'A
%kHG\K!!)1:\hEal0DB^==ck_j8+3hcQ096%H@f(nL;kr/N)!G<H1`oU1TEojF`Qc.'+),D`[$:1K:2/eT$hmco)l:o:kmLDjs3?[
%O#6t1fn_`AfQ0Rcq3E#uN73N1.!YK>=d\]m.$@GY1Aaf6,M+EkML!aV%\CP9P7fPsE#Vg8WB-RsO=a0IOR,qJbA=$I/AR`#j4$YD
%,-q>+NFi]ocJ^\%!+pt.V@TJ37:$7p:AD^K&hf)qTWFW88^>=in']kO,grZ%(ItjbjoaBB8D#rum?[iYR5=ql't8s!Al_O:Foo"=
%C\#D_k@@W/=H&Z=TAAbbSQ>mMN6]`Nk=eXokYBK3R1ABb>iAsfNTLFQ<Cg-0N_@(NHRCmYcbqAMm]QEK1I!OsjqX#WdnF^>f>]#b
%;0S0D2jHtr6_(12E#Le_T3%7sF4&X,@$O`\P%\WgSH%:uXshBLEd\"sf:pZ_BJ\[3;9#ST^,)/V8Sm[$G]SOXlXlm2NgkfSVQ^GJ
%[)"_noYu^>PgctqWgB4J8%^t]abhDdc2&YjNaL>o8aM>b.bEGR4ac04rtl3*nN!08\4?6HaN`\:2`T`.o.P3'.ik7R>[`](U`Ve6
%*l%s85!EuWau?NW3UbF/mhAM\)%KD;T(Vg_=2)3_lj\-df)'Q54;`8A:%qh0G5d"F[ot`T8[5Db@:pD1JF?X3ohP8Ber0fs?>#Y6
%fNG_M^5A].ol7Q-(`qiLY[?/`^XCus6u&+>;e^6XfBIL6/NT"Opp0c5SE[gOj\94'FSqn3S*=m6!n0K<:n:M];^t>9<,VB7gTNG"
%^NG:k^B_Y$"B_jO8rr!Q%+isXdTJ/>*MqfP_fD7Ef<_hF)P<&=X^q$Y-eQ^9B,ApfgZu\BB[H'fpX8$Om]a<u1u-@$pokM,df/)O
%RnWN5#8@6#rMJ"Pe:Be'$p,hlh;)*k4<5HN[KhFkep>U:lq[+33e^Y8giVlRn]mfZ*?Ae%Oal&;=mk_Od]LijEN4c3pfQ3Xs%T-1
%:N[Aa6?rRIE6PJQX7ouqDV8$4GCl$ZFI0+8R[La6'Mi<7iBK!I?&54>CbgnId+s=WgDY9r:W0`Qka=-$^"3EW14`S'Xg@\E#8kq5
%m`l5U7p,/&qnR&P>Gp:sRM5JSp]M\ahV($WS>8Q%U?5M5V#:UqX"6EceujC1Bs"TmMq9>oc<_<_o=``"fBM0En[6=sg!ZRr#q&n[
%b@lTV=2+KTjdZ-K^2XQ0VIMVE4j)B!4NDXI.$uLs4)HC&X$OT"Cm1^?Z3Q@up6?T,&JWGA9fsF'W*c.\=e>"H6_<UhT'lhhkXAhE
%[CsN1I,-_`AsR@&_&QDb_fC2sBmab^$+)t<(iNeJE<>mW2h;om\,nl#TgV1.84"oX6R+ET$PresDWld<Y)Ncu..&^FZq/7)8Koql
%2$^V(M4b5R&;<sqJT;g>EOBYba$smb<c#f1eC]bofT-,J,)Y,OP.&rmgIBqN@cKk`h6tr/gHdo;6N^/]h+eS7d1alo'-f4F/$Yd-
%ZlBtgRflQ\1J+)N?<=jd895mM=U?Q(bXti=nlK&nLDFCb3@d[LJPkC9F;gVsVGo,G+3Kje@,uJhHC+XJ`QJSgNrR/q_&3UU/?tTU
%V%##^=eg7p@SeeY=B*omi[jp_LERDtH;a?d\Y%n.k$G[X=4:XCV,P3i,qUORk%ILGpN+">$,mGZ=u6RTbVd\Sc"7q4[g*)hY*aPY
%`u'&/#e\LhNp$O_["1`9^ao(K"%$c*bDCb5#/F)U>6\>`D#pOlJE(C[d+Z:*,2g?>mIYqafa2KQe0a[$4j\^igQ\'I!`/QA[puG+
%NU+')n*@^M-,;-B@)aA2"WufX$Za)gM.(]7a:HN!$Dg`AOW/monNkI1+E;5Q%$aiuBttY@:/"er!QZ`$A<m>Gb5s,)34bjcqe4`h
%*RXJ.I+u!$O1'\Qdb(F6fXe1fR.VJ(OVNJ(nS.ZiA(d/ZR?h:GQ3OFhD8p0uL1XiiVJ!K;@tLt%R\iB_dmG4.BuV9'6JB$._pf?'
%42Mb%BY`9SHE9V_LmrsP\_!CRfTfoGMHMAtYs=5%?@>gM7S>5->q).a#82\1H&69.==HP4pj%E+fdEt$ge)Q9`NBo:8K>qF@TJ@S
%-!]#q,\<,RjfM%lV;b=VWSf6FPDVXpVnsb_"?@931$K6(J&Hb+e.`H_q*\4(;3jl)L%JpiNEJY^-IJ8JoVV4/,lr5O)^[C5kYn8S
%3UER8!&aU@OgJ*qdA94;BbPn=KpkE+##Qici&Lq3KW)=RPT(;/7RY'9;)-M(:UH)"V;`%\gI0X/dC)X=%C8W*Y&c:\J7_-?.l%]6
%IRqs1d+hj-l^u$;WLJ3,De\O+@;;rr+&'l0:&NprRd&i;>R62$3:P`X5Z+qs(>pi(Ym'F]VmEiDNW="KJ]Rme_.h6HFMe,b=MlfO
%,0b0;Q_!h4_dZ^1G<bEdGjd?3[<nU3c_8])P8&><XO*0jCD*r+D"g_'IXSBs7YJQNq:,f!AbF[8Wb7Qq^nBCR8ha3>R!Qdf3md#r
%9V'*$)QJ#K"A`R.SsH!a-_pfQ2aXB"$5/n"NDidKPcM6D[R6]$OA;Hng7X*;eCum@0r1CeD%Itc!96adUi_Bdk:hlD0G5'?^lNS`
%kJbN"a\2TU(B8r#no%VMZ#UoB8<Luk&s=1\Y4Ar*[&&9d`1X)FAC=U'(0sUR"tfql"[e?=E@-K>gWek#3WjC96sK`I,:4GdT_geJ
%?FZn%6ME8"?ET:2LEa6,!clLm9*=s;?ueMWC\2]U>;?gYie>TA7,uYan.cM,9L(&BV)h%D0I17n+KGO/@hM0"Lge8skKoD#($Zpi
%'/%cL6okaq,r';"=Op'b[Rk"a,QL!_.ush#7H0,T3m_r-=kt]5gGVcu8H@42ga-3P@JUA\?q?(3_drqi+k*+[Y[Q7"k\Ta)p`<cL
%cd9boe%d;^9a.!p2B?U#>XAXb'L4sQ(n)A?nJ$8Z[dNH"k]Xo2I*Hcl"(bga?Zn]6ZY[o-FUt,<;<?nPDh7G!^dLP280AbH#<7AY
%2!@!C!RoJ>Qh^0`,tS16mUs02!dM79M3j]C?;AcWjpj+:"C&BVO5(na6Nif8F,K$r&QW^gO"^fq(P4D3DA#f5:bcF^F<oXUU3#G7
%XN1t86Lc?n!\[H(Qord+9JO%VYt1S2h'tao#T#qHh%0d72fL,Hn5u#=>(eCl\.IB)_hG]3%.6$ph(C>ME8c2<!cifO@;=U'(F`M4
%@GmlZN$b#)!0:Ms1uKg5oY=s!*C^$6-\aos!7M!ei;n]@JQLgj@gqAU*fr'rn@#/*#If9^I?G:]?kWb-h*1@HO:gRKZcM)AOG$0G
%]n]i3SU*!j5R2qc-=2\%\d^^5!G7i(4?>_t*FL2QUJ#tp$;c0$!V6l[4RS)"\1V5(mKDa""#(jP+E$9.[[:QW6$OO-Ck/VfrQNYY
%O>j\=c/L@M]G+Xh!oE;gb\+ad0]<'`(@7D+P[S0)H6pRIPGmWlLe/lMR-6tsLcH\iAkY3tbbth%l,7+rOAErV]hCV0(6$ZJU_K"g
%.%u<AZ8)`?nqfpd-D++$$2N*5&h;rHR`D3;?u'X:OgV.PB>@m=2&H6./QK.<cJU;a1APH*OIM"ui)#m'VC<6nEH\I)]9BtRgIK67
%N#%?>-\a9S_`NJg_?jB[DCAOJi=t5(Vosus.!D:dKi3:9K`\Scn<XhP!_K)m$RIEi-ndu,@A*gXiYRJR-uP_<X?_^1P?fS;TbI`4
%Hkh&p!!Hsi",i`b9"RpZ6AZ$qPRGR%TMU#:11uJ5%MG>&+rB06"<Cii.:.Zpn]Eer9CX2GMI:Ep0#`aQ4imKB>`/,4'IR$*5];ha
%O]rn/DOKYM9>rCq="6t=fS)Zg-+%>Wc6osVKT]V<U<$ZYUemG2$4N>SX%IP;70U_3m_6hN^/R3lTZ,]kQ+ONr@ManJ'sg^lP0]Y+
%H'*NI8YNL!7>gm14`%'IVB<o&&VF1L#FYalP!aEG\d>a>Z&aWW"50=j8'`91%kd('HB$<p[d3*5\pil;43-SllTj*(\qVP5h9RC"
%lRRnCbL*%M!hZH',iYN:!%9r2AJ69r#oPN'R56b*/Jm'+:NR6O6]6N#-"P_CPY-i1;`KN$`N(1<)d![QAb<ng=dVNH1a0W%s5)%Y
%,8FmYHi6*6MXgFMbe<qSNN@c#,(_6)W-U>0/k=UV@S6m"m_rQ(ifo>FY@h\jFFTMXU3F8jPSo!)2Qf.X,2sc['G^.OG2,E+`//?Q
%:"tE"Ku;CDj3%M!9]thLFIAk=f)mhS,$/K1Y#;cja'6G0Ma=@1$u,lP$RlN#-k%"C$R#g&LW#&[U&\?1%rBu)-EI:_NBdql8Hge5
%cF#rQq&o6*fPAjm&=o:5i(];_D%c(c#]gZTAK(b3$?$0f[LSK:>.@_0"Yqn8KF,cYZ9Y!.A7FL=_^<H*1oa@qnoT39/dPWm6?sh]
%NJ16#Q9,e'jq.3q3Qb#n<cZ+-igrNr4Z'IkUBmskoF$\B1&2MnmT3r5`K9s5R?*IFO8Bi$^.":(NE_m!*ej>#$FD3<>ilk>iB*Y1
%_+B7mYfVN/>cSEVf]U5k;I`$-c%`Nt:bW;M`W._(:o8:9TW%@HQ2H5;0.ZTr]XPuN12b,mSLJe(\T;`aQ3cp7-Duk6I5R_u2N5^'
%k>#Cd(6XTKc%?E/\IWNEWqXV<O045GQ&l(LSN[fSh]\o2:X4lS*#e&!5j(9qKP,aj]J#E?Pu,Je5oF#fAUJda(^dTc09$r>,1e?g
%oE*"DRd2g]cV$5TR7f?YgmR6I,UKdajV8N9]]:%ciLGjb).$>32*aX[9N!lYITRj+<?n%rIYB7Lj0kQV;Gs&6:8ln_BjaotZtrRN
%;!1019<Ta:b#b*?4YeDK7n&IqMd6li?p#VV9[h)!BFqnGSC?+Q/EIFEngKCSF6?[o=;V\u635As:bYHgS7MGO-KQLVNl/19?,BF!
%!_kl1gt@-O==E[WBFaM??S$`WV@XC"(rNR5IVIlK[(+QtE@W6BV1_nmSHNPYgjpp;%2L`)!t(MEgo5/^CcS]d(HHUe[P++YMNRk]
%HkJnI?!KTjMX*(\7Y*HUKBLRiac,98$$raj)s6oH;(tIO9HA@b$Nit.+Zl2b*+;270j:_d6c&A$.O`s!JF2?-2OI4!aY1Q"Z>BqU
%+gTZ2nm!!&S"=c3St=p8P/5&q.MPen$*;@?md\fMBYLDOWe["/#aKJ+5Uq^h6EXLuS5,q<Rft\%acp)q)b/`2jRG[B,tgPrG]X,6
%&W9&`cQXn'6T\BA7eVj7*`2!qehV<DS>'#QP#[j!<L7UBe#Pmk\Ool&:t;OD"_F^88:e@7.K-Rd!P-fWd:W]!6G)O=!-6R__a=a.
%)kbWCB**8r+diR]X)CjsQFeP]oGZ58k]8]$Hl\mEJc%qc%(_[=nR/`D8/8;9/RLjmMG)a!lK^Fap#d]ODZ]HUPuOHQA3oN!\QT0k
%g#[nQB/XcOa;#TS)PmcY4G]>XF*Yoic]a)K/JBPOK@^\o6PD)723MoJ(<3eh+?#FFI\m3:64]l:T?^B-YZQU\J"Higo-:Vr,\FV]
%VT0&R5'Od)Y'/c)cX#bO@@fR$4`\ZU=cTE$kfiWV3S>XVB.5B<(-luIljc\2n1\n[9X`0N>`US^pE3*;W6(7iYhTF=H2\'%?'u^O
%ng(-gAe/"4'DF"2ItC-rKUBCV!Vm"+ZJ[56!187i&3rr2#m,X?k.kBO"dQ:p3giV0;f*;lRBC0Jmcc&l/`iI8XsG^O)*<rPD'(cm
%d'qVL:ea&FlGC*#3B+bnp%2S4%$XF<g#rc&)((((&R.0&c4st<pL#/]c4k\0fsgb2i,A.D7?g(k.=8($6fc(IWM(!%!7oZhPnZiQ
%o5TK(0(a:[X3:=J>Xttq!";BHan`*7JrLTL1/lX>(;VFicc$#2R:Y!L[HDAh*"Mrt7@^EHo2C<+JKu_ghp/%`)-if@\PDBfede"-
%''P%u>I_A#j.!T2KJP#%LJUA?V4G/NF<b;B=jBtd(DiiLgpCUDQ&4$R'3?h=7E_uGJE9;ac%F/t7$$n"j".7[p0>oKC5C"%@n=-s
%&]fE\9Q5n`n.7DW%EQHH+rrZPLug=QEeR>uZWnZ;PRsImKOV5&9GkB3q8WdJ0FL@,Q:h$Z>\XnQX191W)(MIo2e(a*-SV=R4;[F,
%FJ/MqXlbesAWn@0M.IitKkP)8=bp_Lpbte+dPEW6jt?We>NW_+pgRY6>L4LY19^oj=VgW)%!3qAc.ObK=(faIX[]I)LI82eTe7Nr
%mrk@DOgQHqXDVisUQ]0Y2,6S=o50[bHf'%Xf`@IK,0p?1#j`!\`6'*TFY:]*23^*@@3c%,5F/>fT("c`bLN#&TS=f_n2"C#DWYe2
%E*enHk68qig^cq^CS'U)n<M/5F"PrmbMI$s^Fjc8_'nuuaP\-+M@\GdL0""U:\%pAZi[.SST6^/K3dNPcC?6_M$5LE,b^<X"J8(K
%EIDlqg*nC@7^uGq3DFNLgQtq_8#;U:P]b#EFB"9X)T9ANG\AhWl"1^,YThn>X`;-TK7h$%@i."GBiULs'NZ1,=TYQn)%I"[,,L;P
%AmrgpUc'iDMn'sB@Mf%PU$H=U(iu401'T<Wh">8iR0Zo"Y*&t!D=H(GZ`"X^rdV52@ocPKX-A:,-Zu_R%r'$TrRJ6uO'Dk6nisE"
%O)qBeY"KPkku;;#IpA<k#R^#h`'^>26-pUs)%e;F$\GrI1L2\U6d%Kcorn3#jm#HIEa8eH<*'dC$YtTsY:?]V.u"feXY)6.0U>=R
%NNok9(u=[;<ZBYo34:i&W>$e(I_tA[C&P;==^5'/>[13tXX4Oae\q8e@OGAQ9^@LcC;`a(i]:PRJiM&MN-WQYEV4::`lU=YTW==;
%Mf%-c_./DB'uP;XV2-V`aca/U:L5JT>p[]5nqg,(;V;/c*#:(PVl!%-CComupj>,si.S&=:!$"DMF+%MV!*\kOek17qnm%g$qgr$
%93S^IU2^ie-I:$=o;Gc[kM#-bnJoHm_>kFuVLTd3U.p1G3GUmg"jV;iq:4s@@0EnT7OTVEje2g`YS'V>-Ff>j].cmf_dp/KNQb?l
%,?#7e"gJbF.'+"j$6L^CTQ%GH`='4sG7N_oLG/4;7D@d,cI@6&L\7(@+7Y>Ig<qH41K40BnV;CSdoU!mQ$1OXn9G;:kS:Duasi[\
%cXs1r4r6QacaVD\Wp?FCACB7<$K[)C2C;4$FYZrO,bH*'m"B,p<KradF]!]?D[Kti`p@9Z)B6(JC"0!00QemRWp<t@lWs'=/u5/)
%=1Hb^CT4IJWNKVP+p-mZY?e-/=5e]j*h;8e\d8`JcEj16[&gjEW7p@5R]WfiRRP_WpP:-G`<FdSjY5\/S5A;%/.cN9APURgO)3Sp
%XTf6?TVKE<BiZ!_e@8;Vc'>DY`Lk>%CGt',,u[U8P[:!Z,FLL]N$1OGiD+fgYS8?^<r4>fl%2qB/XqUt,RM9+OGmg4[O^?m/."mP
%2at[)QQ9sar:*J4T3"H8XBH&6IVuS>RA`4r=)GAkBso:$[NoRq,e<Cr8ZE3RY34hg-!A`Z<\E''Ie/6;3[VcdZHYAOgbA=)b.G.*
%;T$\R7V3q9,ZA;e$3O4C.fgt0C-d6$Q75jEI0I$M;GOuiq2cm2S2l]gW:ck+*j`_,$dqWh]<K^2cSI)RnL:9/()'S5>1ZYC8Nl*?
%PqtSB^pa\$@pK/9#987p`o=iCqOlfb_^U'Lo1"id`<V0HW6IOi:HMf1oRQC-_@?iU;_Xe*YtaGJI.t1O;L#))cco.RH=l.nbiHu9
%hCt.JRJ]"38UW(EiRTPQUL`Y?n'I:P0h^/::>+V^X,p=b>Z)maPdQq4+Jk8=I$H/8ra'DkcV+Y;elK%mn70Zha?7C]IVi?BT?Sou
%fZ(_lWi7,^T9smt`po=4ps*%(4k5F]?p!,?54aSsQCl\RW"r91CR1(4#C==;(jljQdWVj8R)^k5H$GDubO.D]+>ksY,ibnfh5))\
%X^,Q$H\RTWjdVQO)a"MNAek@n?X\P3r@5.aY07ZL_$j-YY@IB_/_6f0,(J3R8[NVubiZJ*gpC3++#:K`2B1@dBQLGcl.=C]?W"[/
%:0nuFFf$SHq=^;hP[Z7.kld7?\@gp48Ia"T(<tBKnSFLBo<C4Jd?gHM_KK54V9HcZV'*r2o%1M&A/0LOda5!$Sepr"(,B2OFaSX,
%I-NIc:rc3:9s]eGH+/j(OUXc!I20UcodVs5535MS!'I^MQ!nb$g374]W$+>a'D?r9G=+\GB?S.WVq*sXe#E.p21q4Xi8QM,UdcZ&
%s6B22(:/H7/b:/EdV@@`2!\nFFZ%FTRV#jM(KjgLeusoe.n_(U>lgC"!Ld9p<de$LZ[PsUZa))H@fjr)2'u^@!]DAJk90GE"e(^3
%f//HJ>ibnWmaNqVL9W93A#W6O2Cn%1%:_C7\UV:S22nA?/Bbh2lLS6)@X]hc^Le"WQXAi]fJiW86n[[Tc5'T1I,jZRH(ioWhmhWh
%5gOAdc+_T`Za5Y*flPrc_FEFoQ20`$cY't@X86c=\t>R)pN,p&dFR<SRI_GaVcP<e!PW0I\mbHBmF$on_5*?(flkXJMtU/Bmo-jM
%W9JYn=`)g*7baaWRUp!32k&]A@kuaeGTo/=XTcXU]%V*OQ"jSlIig6U13MDb<(RDQd"kfdCJ17V;CBcHb]tY\WXf>;B+"q^V+$8N
%R:<dcigd61Hg4[Veb9=MZQMO[`"QZ)T(5'*Ee:8]0s(S'k$&plTero&@69_&C(^m4\0)3S63)f.7c#Hq`8\V&R$8#MP#H@+<6SE2
%Z,@7k7MN[8=Qmb[IS]4I]OIIhp5+-LLo7P::ec(>&=H\_b79a-/3H&8Z9o8TfnuO\m'`%[_Pm`K!'AL<MCF6^-ES;W'L&Ph*6'9X
%1TgAbY_oA+ki.t[V_.nd.$q&LFG9HEO-/Y9Up2i1Ejc1X+:E.;T6QZ7:pblZ8Vik1qikEp%o&GS_K3'!qQPjR2p+Ra>VsUB3@N(R
%="`isEfo`8,)7>:Ci_X_'08;2I*S6%N6DR8ppB:[C>bAcMlR+c.;12d:#/]co:?`pR&_]!@ha58HSh*C6hCS0'!!E&B+k)?8TX;m
%oN]f@>&.<=jI+LG/X]cRA:dffM(84>0XD!Vjc>Q;O-((PAHZ.RK85MpRi50W#F+=hZLmK``ApsO;qSH3]4@pa>sNWE<K)9!ZLp.t
%4E7*-#Di6T*>\J+9Fl5(K@UbVVJCP6nR6Bl#QA'0%&eG)4?(`k%ia8gY]7#DC:!YLZhNaq`6rD/f^-:t&[,g8eRn:#B(+8^n'u%=
%eRn:#WjZ3*$"6mo<blkbD0B5Kj/^jYog3!0cE#48X3Jqjc-E@sFluc:IZl@qZH8CF$Z#;cR_4P*n"Rq9=K/q@]7,YO]<]CI'<#RG
%'ht?1^=T2pYmFB7`2a2D1kCN2:sfCqRQs:TW2OCaokoSC(P9;^->i.,0:+TjA4ej\akL&H8%pW7o$!`V+ZAh+o1cIi#r@:*<,qtP
%O=TCT3c5OeaA;=S.ci!#,H0[RKXk9HMKt\C%/"@\>YrVegOeuM!Xm;<P]JjD+J*2/LKO,oMI3i?'bnOE#%Y$.*gP2=1R@$5-)d%^
%.oC0*?Z#<T>)]AYnV(N.Z8->jML;l.4"0-4@1dF\c3ooob>`f]?S(]3ebZpWm4A/ZQMh^J`BIAjjfhG"\pd[k]MZkeHAbJSaO>C)
%YEi(63Ehr@p^8YlQ(V0';a-OdaEQ4;p1LDoZsE9k6On8(4/hF#=*;`b^0g]u@\<UPO#NNqs"(2=RF5CNZJ!39>G7FL@MB3<!=F^6
%S\ea;lI/e*dhVhc;Pkr<d,H>$hQ7J,AR9W3jYB8UcX^l`*q:B-,gt]l7CkS^K-b"5-(h14P+l;aomr9n\fYMK5#_5fQ/BhcI[`R[
%`6=JFZJ#gK`Iqj#qD75?<r^>IJA_-8'./7OA's';J/52?J8>RWN<*W$\=#@m$j+Nr!,=I2VWHS]O>ef<%0J?pQ7pc1QjhmelIr\D
%)e+j1:L']h9$U2\AonbfrbU2Y>EuC!D<4_t>EQ33Y[&&:jXr%=\_:naPu^kt@h-R*04:p(+QgFNFKS9nF&<e.0T4@*`SDd2$CLZb
%Rn0h:,hm\KaaE\NZ]ZgQA/e%Y6FA3&?H_nn$uSRn-O<kFg`0X*WH_c<!<FJO>"!ArPL$O/))E%RatOYOdt18GQ@Jb<(fN!aFQl)K
%&a7pe4[p#*U?L&N'L>Ft?>"f0E[hSr6mF:Va##+W.C&*qM9HY96]C"Km'2C"4Z5$*=Fc\r4ZZFW?67ee_X&`h?CATLZ]-]a$$d5*
%n1N%\0^9I8/qI2KTe/ltBI"2+,cQT&0^5&gXUW!![`RXCOShl9<ctae*0?YSW"\ZVI_KrJ`)D(PnddON1`ksqKtUS<O[q&jpS(Ab
%!"NQAYi943!Ig?K`.SC0;HsWN1Qe)?6HEUm'o0\E,[P;2+.KHMAd)/C/DjjLI7n3BY(?MsV8$'==!3`Kl*"+S'f9**rKX&jcUfQS
%T3[O-)Ql#?/0--FX>aXMVa03o19Zqh;@Gd^[07m?D:?rc[O[FEZf1B_K(r*?@b((GFI][BI;[/0^B9!bh,q50enq^8^OjB`GDf2(
%DNh3WAEu/,\k<hc>KptiVgcZsVm9g<&drK\Fdm4'-<mt$em57k?)N,Z<l])[@)E$b(>,k,rr<G.J!RY*Q<>=@IYb4`]PKjY:l8D#
%UZ,I^Z6s.%pBl#skOC\IlA0^"0Tk-Ang=+>'\6[<aq>1#H;RqQ?#X<l"W(58+imNH1R)E!re2s!J2Omj_?>/UIb@REnotS7a-5[P
%Z/g:p%7LG&L1&%<oU<_:cbV"aGGQ/+d7JRC.(%'CNCdLqJ=[5W.2LXbJ0lij@CDe@S-=+Q$LS$6gnE)T$*;"OI1#DL*K;iEMSU=W
%[hGGU%.)nm(X/qtTM>XJd%gnA`W-pJn.BXPEA4)_.jj5Ea)g8Rm^-I7S.*J1QOnloDWHg<iKdtK\SPCU?paj3Cpr6#fR2)hQ=Dn.
%AJt&:Q+6+\Rftb@kX5=L7$cNR-;SHr1H`N*cbh7q(/[2`NAG(aOF]Kf9-b^YN"-H>P/Yo%O=a\,0f-6h=L1N63l.2)pBNAm+AT2(
%TO>oC`g"GCJUunE&E9M1"\S4:E-Qh!T#EsDOSW@RqJ._]0;abs2/YC3.gg;t#1(n'!b^Ph]W"e+g&\\<m\Fdmp/1?;UW'5?-bE!/
%Kr]>Y;!hd22kJ+=iC]?XMc2$ITid"HHl7V^,(u[);fn0hBbsBH-rF<,hSMSc$H4Y4Y>F"@iQb_BZ/jstlqgr/op-W47Ahe_r'H<F
%N<<:+!gd3/R6*AYTj0k>"GO]u_p[OtH+*:6)'Q]absf/l7>1<U2m\h6ba[Prb4^c?3qHtY!OaHs$u-=J"aZYQ/nCEC0,:Ze>cB]:
%@M]C9QdDHQAV6D)X=uXn9[=N4A8-E_U$recJ-g8aR%-GX'f*o%I'W\39>qQu*igM@c!4r`MBa]@abqG[ZVWE?ca)!i+t"T^L!hRf
%.0\Uio"l39jb44Sq(gYD_t4q<I,u^%P%GLTqKu!D5"q4ClkR#,frdQC_,YDl<Qm$@h7r#taB2n<nTXd\Se`@[]\P-t;^?[(P1jW3
%3mO&1\?o!o?_uW)QG](Pq[/S[lroB!o!jcNcI-``K%lNZKdo33C-5SUV*(KY4Pr,>5"t*e'00FEdsYZ?5/CRGcF*.5fXTBmg>]hV
%==eHE)uSA6WTkPrHbP6QDY]k3rO++97>G"k7("&e/Np?T;7:Y;r3KXXDZ$Z`fQ8V]Rp62,HBu?*[M4WOa'oF^r!`V2I1ij!&eGig
%^1.5IF*.h:-MYQN'2#k`fM\"XjU"O>Jh08C+BBmDbS#i?b53L+3LuW"r5dY8Kk4&#`_:A"JimNihf0dr@A*I-!+qNtF(`Xe@$*Bh
%%X5efY9blYl<hEAJHc,:No55%S`d,$KtLEDB<LA-0&_j(i>J^\0Ts:_99sbF(#tC75XUE3eE*"WNZT&O^&/HmbjiSlHD`C!;,b4E
%T0]EWJknp9"@]u%KWD*2P>W-./Se3ffMYi*,->`a>1Gf`Gme!8Y-sY0]"ga<iZ]s%3W#!SC>]W^7O:KG%c[rT4NIF,du:K1M?($m
%dpsMF)l*Z!Mn#oUO2T/'8F`@J]X9*M^?9BIPo"Rf[2OWu8PJda?N)YMoZ&/lP5G*DVn_TacVmiSd,cdOU)JSeHuQ9ZSEcHRrWN<1
%_Qk(tNTroKQ?FaBLT:2I>h^j6me3LPLqLIVN'QXd&J7&!<35O@7m02Dq,6A4[^5`5$R@+p'X'(D1`t-,9e+C0r:;cfrH$gseVdX<
%$S.)+Jqp\reWg$"RHH@"=-bt5Z:>PS[.*._aj3+#H51!E@Nf.oM$h1.3E\2=8J.6#IoA8-RGT@r[NWlC4CN=8^DMp/kS]j-8H2<(
%SEKC)W[Dj?T@`9XlTib-No^*^e$%(so$<W$<+[In2_kuj&pZ/&a@0:he`PG5aC>jN9FbF<j_"t/`$2<AcY:hh#9.8uDfP/33NFUQ
%ZC9KpZ]*lJ,?\[p80p<80O==1Hj1bX$Z%U8'/UbsG#XE7'r`>[S0QAe1s1-]OL#I.+QknmJ2<8maNZj**4"oYQl;/VZ;70+b(#$5
%4#$)a`37"`T2=m_^OS#<$NSb43D5hjM!YnpUGt&F+CT%\(rHt;M_Qg"[M\$;X@k6#`kDQX@k>iu>nmh.s'"QkN&##-o7cL*[ToAM
%0DPZl^'g4igP,#l`n<H[]K$$9e![ige>X0kF^^gi)-&BEilLE)<]<&g^f-FaASSs(N"d?B-Bf8u@"sN>c=Itj:5,uqh0!IRWQs*l
%Q;[r3TndtuY%DpU8<!]:8]U/AHCd:gKdt=Ce*B;LF4fl@]D[@4hn2,Rgh;Ci<H_^K34m>^m,T/rUc;@/.TMHtnHJ)Y*%Hk,d>fMJ
%@;c7F^'WC`^<p*%%;iAhRFp<=api5F\\Ze@A"L!L75hj$pf9/bl)D'u\qQOYN\<EhabYV48?V!<28#I;JLEd]bK6JP&qV)+1$#T7
%]opFq$Y&9[SP8IjAND]l_(uJ']E^l%g4Q-2-(TRK<nMDDml,7JRhCs%#tc)*8oCo5:u]+60M)!c8=:1kiNOM=8MO8*:,8"IIn;H2
%ndPb;=f,)F]Xl>:`6p1@2Z^GtFo^!]=UTs"8=I*9b%5`J1[Gatf$Qf7C?NRTrF2rFOdB%#W>q,HU9ISi#Us[4kS2redPIOVljD*t
%Zg@f+Ia#Xi:bX,L+`h`O&e"jNd1I@>87kh&J7Vi&GiiIm'cEmtEtI&iB;R#)BB:8W).qEpjg#`KQI=_]Xp&5r#>Dr<$3=*Y+Kc#0
%8:].n5WB8#,W[/[J0IN>J<p:2[K.^=9Wnm:csYu\Qua)+)5m`$(ASh5!+lpZ6`1f\@-0S=2%+%*k)3)e7l+^sb\(&(0L"Z"3%$n>
%E3J2!@Q#P`,^$F9Fr_3bKUP%':.jK5O:eAf=q4>#[Nnm[>f"9<OVHG&G\G-s#']i@kmbduZmfqAZN-j&Z]K2WgL-X]VBoi`>!NH*
%d"FnLXs%Xjd\]]5?.s9rlo1>L!0?)4TMloWb^u8Ec/83R`pXRbRH-G'!\]tKa(0>IpNYs5PM?7cjdXu+hh.nt^R+n[q6G2ur@$!<
%qLTL9^Ie];(4o+m(=(,-gEL//V?GY3K.KiJ_F)kN['BWki!M0/[WcC"XtubDk3BoOopd_L=GU.r.5)I2%dHUJLZj3mV?IL'<d!Y@
%,t"kF^g2m8Xa\61A\iFtFu<l5@s0_A=(?D2AliJcS\<"^ltXbI`p?k@'tl?6/g!d%NnFTNaO.6"[HVZd32^QYjOX2U8[gWRTo4-$
%c`MQ`mDi9]?Ouj.qAa^'a5'%r1]0Aqe4/cd5KCH$S6YB=a2@>jkr9^>C>FGu_/S$Uf@`=Rp@a5TT5#4F]?e8.bYI04n`Q+#:>UXa
%\pg]&G7,>V*u$7(e`iXq>(:bj`eP5-U!60:TEDj`SHTHLGkNTMSK)f:l*H/ph,>.$<a+!\#!7=1]AmjLg>@NHL4atfO(k65m"^%6
%4Am#$U%Y3MWIfP^7P556T>_7*NJ%ejm_Rja@3hT,1.1-/_Dj_lTUF?VA`JX-e)AU=3>eWge"-n37E%[re<iCbrorsBh/VV]</#83
%Po#1Nl^Bt`=?E'NRLIY0:Xf<G$He\"05>H^J#>Hn6TTRMm&HHub8Oa/JGOo#EHf&W8V<+Z1ST3Mh4>6+(2>?TRn4jOVi>)mjA!*r
%!DVkSF>tg+cg19P0p@4?KXDSLCYf!V@15oZ@:q\>.Z>[W\u5XH%8M\j.9IoELYZ5N&1KnYiUd`lN_]kSmT>HR^/-IR".n>"]5bF>
%g1X0j7@8*rA'-[+giANRA'-[+ggZ#5^^O;kPZ.)&Xf*PT5O?2Xp0J9@UW/U8Cq6BOHAsN.fQ)s'\#d$.Fh)>!0`<NhD&mfn#(L!;
%i7sc@)6=i),[2.%7h$f3gYQ??L--h".peOlg_l+Giq0El#Q(9lA]iO>26NM,kp/iC:9/K!>/6?Il"JT6oY\eG>Ah,W!T!HK=SgkU
%H+M-8<*8)8!j-&lnlU5+2;$e.V;j#SYemdHL;pZb<8Kto"ge#J#JItChVX*Pm?W?oq:nngcL?.<_E!=GLsbI+^U'DIm<6t`<2eZX
%KQ@T4FHZ(+3LrPsX6>[H0]m?$VnLA0)Y?P[:1%R3eOpZ95#$HUm=.k8rH,1Ck*N0J_#["A]OoL;^C$1qmfI>r>A4dEDU>TOC;@>]
%)u*(j(n6.qJ,E3hq/GN?F^p>nl:\9=XJF9#VdH*R$nSMmnDDf:<[Z%pC`G]+/0%A^k%%k-V+%)DaquHc5RM#*Q<I]\;IR=1$fo#O
%@k^p&@'0L!=oi?i)0X&Ua6?\PVS#f)nI*@[(Z]o]Dg&]*/]:+<Y,2dnO/I2%E]RO'_h/Y9E[A+6F[E^1nG&`kBX3"<8rqCR=-cW=
%)"b[RRf9?!:g*W/TDup*NAXo@"..g1H.hbUP_O7io9f/mKiRHK=j*cOV2:(fK'6OMf22i0YFo`U=]3KY`iq3Q=VZ2*+ak0,oaZ^(
%LP+IA5_7`CTc):_Z)))CQ[sEfVBq6P/!h1:ol]oRbE,AC)9?#*hQf37IDO*V(.mF7S->qrL8?7+(%#a9#X]bXG6QUl.mU%9g](Vb
%gV:,>@T<QWMJl<F.5sXa0\,7k$XT0mJlKpc5]Sll!<oi6)/VWM0M<KSH`%EYM@M`HIbNOKHg.]%c_u03U;dutKPBQj?hKQc9:NFQ
%3pCd1e)Rf"IapG]8WeY;rNjqPI+/NGB>]rtWouU?i_hRpV.]*$DQ&h/lc1#Z:*Gg/--QN-aK17g*T:Jc=4<hKh#'kQ(<]J<.Z6l"
%Ek`+ghp0BK0U9IZ1t=5u[4,LW1`P,m?dn4O:/%YdU&_m1R)uhpmIeuWh0Otu9X!2H3st6*]:IgHX+<m/X]0G"q;qTpE3'*\Wj\jG
%BTnZpfh79bePboIZ[.NJM?7i=%obBt_;`J]+7p;h^9bFuH@.b",G`-'UrnT6<i>\9kHb5eJUebbL5M^meQ`s".1BibAN)5BCJhtd
%VW;)\^q%.lm^W.\'#nK_(M[)pqV>X-'"RV1H>j0KAm=kq9U)A-cuq'@-AorR<lKKl_O2fE?s%`l\4i;=.XPL(?n0;FIUZ]KMm?Ns
%-n=Rm<CG/jkFsB'Q7J,VU4cLhT8R_MoRY2MMkVto-5WN#7JRkMk#1?9kl63='I>*3oPD4_79NN05m9$EU/A+?/rC8mQCZMYCG*ct
%A]dG=)9f*WrC'1i<\^LA$'oXONCC^)[5ZE1b4'-gZ$Mm<X:?AeBJ1.SK1iV%@IWV^9RFX(\mQ&r.`sCZO'f6Bcb_Ul]6"QjSo^6d
%L9Jk>f:7T!.83%Ff,DBSn?nP>C[E;Cd\prJ93k1&W!ugD\CuG%X#8&RV,Gk_Y1@R"s"mf@,=8"<&Dpg&.8cIao7gdW.KJ+_dJRP9
%2IrU;"Uu>,A5p>^>AMn!fnaIkn!"FtV7MT5`dg'cG5k-\S%[,1:D^Y^E$5>[lHcP87K1p+n"op;ro@]l(,DRYd`sgQ>!amm>nm3L
%dGO5-8i'/%#8>_hYM,j1UD)FKB(fV5C/^Qo[$aRn&^%+iKVGMT?*b3eU7fu`2[lgbg[JQc_0Z8J_f5cR[(aa&Qc3)MoBc7XCoYnE
%HD]S$0Q\+pT<%UWnWc]*<u]G70o^Z?653)-U3n/[>1G$a,/l)pJ)21cT+"1sLVGj?`2Co&cPFV.+u-Zoj8o\6^8"7@1Dq$3Bjm=+
%_AFW=PR:p)(8s8EN'W-u+"`TSWf1@a3`]Ytk2OB7Ve3U619iY%NXq3"Z&4?E.G6\Q:g#4bq1U_6]G*\Q'a#%h_KKLRJXVjQ:&K5.
%ikH;B-!q>c>unDg`..54n_Y=YRtm.`n_XX?C#Zm%r3qO_?BFl:&R[u\:t-b[R.$2a[[,]Ud_pO&Qu<Z0SQgIk#g_r<rokhj#(7'U
%I2*a&>d6!E5a?;s'K:=ke6^Y'5,Z*Ni:#>dlZE^Ja&$2](Uk,Z(gZrhKkUu'XSd1M&*f<-gksXKSG+VIUugZcM1h&_LbAQ3YtOF,
%;rWOkRr$H]aVm*@j!MB[DR/DUYtOF1@iG<c_(\U\)k\LS)^'sK#D8#N\q=<MhAE,:)hVRs5;B=sps0^A;kAS&Zh&,0piJX_@<Mf2
%'K$\\KoX#hdN3d7oUe]t([S#U]B"cmM(7FMF&QO[BY<E;kXqR40V_;-HdE_p_brQ<7ORFQW/&8D[W5bA;+q.pj!126&R2qZWQC%l
%[f+MYfG/H:0YaE']JPY8`pqJ:?>9\p3*mNDb5qfRj*4^5`s[*t0ZORq_N=eoEP*j-"kkqBk&J$b:?fAQGs4m]5hb3%cUrPG0&)QC
%9=N0a>Y^U)A[G"R[+_!DW,*$lCc8O<@p&HL-</!hm$g_J-_`3-<4oRW9mjcIGq;Kf+)c>6'E.<XE*Qk,ed0=X:f<Tb3*q?1R-(bJ
%)?IDH!bGqRA$Z9djk>9"%_+F/0/^?p/IG4)B:lUB4*uUpRtoMk=#MM=>c[E1p=<tZjY)TcYk#uj'cn("2i6i7;D%lN*,;I36/cOY
%<,&nbA*LPU@"3ZjNfb67l(0(l?8\1$6Y$$Ig&Pc:mc?80Q45U9ojQO5Km)]31u6T_cc4>H]6d/LBY<2rjBZY@2LFGT_;&;:.+`QF
%!<H2bh?E2W\uA"bLT+JV>uksU@A9L7Ir>0$948,dN?;YaCmpX`@sF?UO.e=``fIC3QL:d#I,i7\r#!T]RDt<8pb>gfO+F2.\>,:H
%e/81O+jR`I_5T)G)2*U6l;DI#dm$!EZTIUQV6nTOY.U]!C$Q*f^[-&3BeiB^4AG^b.OIH\rh@E@5O?2Xp0J9@.SD\PFYh((28>fD
%-+:hLna7Z0FhumbosVIq,ucGF?=n*&m-qZn)\&ccO_15ZW[cKa1UI.E[m(iPX+5u*/T)g@:Xp<n<2A5UOYX&l/86t"95=/mRZ)7W
%?:g&rrlh]cd$JeNCnD2]:4",E=4o%Tm!^]u/;mlLVIV$TLoY^57:(tKF>e=+g>ts%b.6c78IL%fhs[isIArmtZDW(!dF$+4I&RP:
%E[Q6oJWX1]DnJF5apL2i[EIlq+3u\M)INE5>$q1Op!^pHX!gc'/bdeL;Ids/f%d+.jqK(hA'Hm^>[u$L&L*2l[mJZ9_PRYjB[%ub
%C.4,m-FKj.k8JEE1$9HrXtf,%;+'`oA^5]@%/(0c*>LVQCq6CHjjs(I@*L-_dE5R4C,!3Rp=s5+BRtd"dqm+0Ge71"!W@m<#&`Ps
%Q"]m3D"a,r_0mUF34R/L]ImfKN5^#DHXI)`kJuK7l#h012HoIF_+A:K48sV'aV?iTJ*s;G$$j3Qi>iC!'%)j$GZKNW&k'BtUnY3_
%'@Sp$Q^(qsm9kKMD++8s7[K%BXnMAW'K.f,ce"*[I<qKoMNq#P@SmE/quj%%h2[Ye;lIC.;>kpAZkG`d5ONo9)K1iF=2&'>j&8Lc
%)P%B441hIAfS\2u"86!;:k%9hb/bn%-O=)MND=RoJbD/)G)oFa@Y%\,701t:fGuI/_)Ff,[o@QK6R!kjJ3A1lPkl)<8On$)()FOR
%,s+Fei$B1k/#gcNRR*\d/<Dg8os!D?d1-kL#Vkg/Co$>B$QG^iO;,BFs)TsZVfN;$^SF_a)PuX*.Rf=lFQ"7ni\\<r8l:eF]]?g(
%\^Z@'$#6!d?VlqJRT)c]#$+nAH79-gUIfJ(_AKB9*eOe=5$B'F<Z/fN]qGdC0GcYPFhd,19?#2\4$Gc%PodrL;UY*@,pE#oj3:>C
%U']KYa!G>2NGr,4-"Yb`UWOF>>r^,DPr&P_q#sA8)cpB)Y+c03H._&\.Qq-nGH;9:^1]0#&gK$\,IhCS/[CN?fus07\')G-CpPin
%ZSBi/fL/BmV=%:UbA7I47hss=MQ=P[QX4bsJZD:>ZFEq4EZK@s3JBV$k%0+%[Hr3liN$Yp>Ac?=\J2d$]#D^V?P0b<)Hur"1=e(q
%-5gS+)YhbLP4@YH9FD``S$01?G*1:h_OF5h"[":H/%KaNG&o(\9@"5)P^jU[rP`s7^(c-]'nFQWURJ@V<9fauVe&+BX<q10.U%+O
%qQ_jB+8=5mdN*c[B?ht2KoMBb(h;@Sl)!iKrJuZdMh3j0ic;T>P10Eu]9QnOlY]@22/'EZB_Gsod7eJGfd^E5\Bs:J13%8)nFj*8
%+76*k8RVpFIdXlH`p9nbMW[Uqd1#=VX%>7QO#lK$b$36Y2&=J?n[1rnr%]^e?`43N4p:+rn4_Ft[JP=(_iX(@)h7_VHI1Q&<bRPf
%2?%ri*d%;MR4I1-5,!$=41Em)L&Z)T&NS43?uN95[_h"fkcj`[e*e9P_q(=9*qXI'aVHrWFaCah!>F\0lLnW4]*nX7G7SIahn@QD
%k8f.?'YEr?L,P`T3.a^b]L@*B\j:h77W582I/eV</f9VXE(BC0rt-/!r\UD;bt]o4O4,W:?oL#gi4/2Y^2&7iZ0o-9mT]<LKAYU>
%YN_A?nj2+0p^UIENJHS'rUgq;IJrpo9LS-`Q#AR)Z!l*;*6j4M4Bp8DLGcF+Bs)*:n3QXc_e#`/c`gS;G+bgY%h-]s4aCEPXmgn8
%q^jsHcIEoP1bmHqh69W2_@O6D)OB9tHYK?q@&n7niEkgcIPO<l0UsL$F:B/=2)B#IVq*]Be6I1!jm1DR+.L.YU9dUg28dEd@Ulhm
%2$O`Vfe@'k1#$YiCf@fJPIdbsVJ`u!*jWEI2K_1KU#AV]enr2Sm"/k2[d/`c4(qaJnLOMIm@&=PY]$C+dq?bN#BQtTIE-qBo/SW9
%h0(nNSj;1W@*kW.C(2L#>*F[J2mmJFTXu/?CO;d5_mO<OJJfh1c^OBs)'#,SjK4(s.-PQ_:B,3_[_LDt_kjd6G@q<eVr,Yf$?[f4
%0K_V=%7=g8ri2@q)eWp<aMr(dSo2pU2:"4/LOHN1@;tK?^rkp^!_NL%R$C5g@K6gG>sXjH(2lbpbT;D9k@"I]"9\f\bHV@8D*u+S
%'4`EC!gIj/@7=B)P*`?+fU-AFXkBlFR0L'l3CjA(S./#$\O:M?3JYF1)k-lQ3>S?kUT$Mo4;.kAXIB]]^*E2Cf.A^\NFC\T?(?4+
%2]/YmUaf:F&?=m(N0%l-2sGqs1hmY;q&8c*5oc2k!KRkQRY]0E@Mp'i5%'_39:aF(a5fL.EV]ta%_UR@:j%Ai?=7k9&A1Zka#+k%
%OCfAr_9%QD1P;uo]IIQc#2u":jDW0Cp2nd73-09q0mtlD;oUrW7O/c:=^$Q)Q<D.2gU%BAc&L\=Z/W/P2IdN<^rGZn`.%B\S]ri)
%=d`Zd:Cb)A\Pj5sfro%N[%L+?afWn04+eS4p&APKX7Y_R47I^=KAG!d^uMp\L8h]^l)sd^ok=8,0H%$C!p7@A8%>2Jasq>+j3s4C
%b>/)q'JuoBk2>=mK[dg'T=!2*GA3u,\f(4iFRNeP5CT6hP&Q%IBnt#CQeeT_2qX"Z4nJ#"h*p'%C]=5"`j]`==6]C-&$bs8DdiKB
%f#c28h>+8.hYD;,m]3_gqZf>bY6$R$!8mY3LM(Vm7JaQ<?JaX1>Oo]H:N$b=jHI#3q4ot%l1Ei/-`=Y?#V4LlXn'A('[*prJY`$F
%>B\s8dllOpe1kgpEj,VXUcLS_:Mum\!BsmN[UU!i3Z+`nkRbsgq>0dM^pUXfhf[h)q!d^Zqp+%,-?U0oXjk+eb*;ni2Q.*(G&M!m
%r6RAC5Pe6NIi^"JNolh-Hd=p+^c_Ra9""V=_oUY[B=q1,+3_&s1[J$>>`2D8Pkd*Tf60<*qYUNc!rn8[2@A<SNSaHU#<2Vn^PRrp
%3:IsG!A0Lbc`bu[[OfQEhsBbPV*f\5Csrr3)e(L=C[:WRA=/BHXUhqXD<oGRl0r69ja0U+s0O+(=VAc%aGGFF>2+h1a#gD9rOqhF
%ptpD'RF@DY?,ieEPJNW_Y`h@K'eDXP)-_c>^&'khB,lk"l1jr9EDF9q]8;f.=S66+e^J<7;Oc&W0[6uOEfp"3_0A(%0(@'lGtUgF
%-?^p,4me3e<\W0JpadK6ko,:,f6o[3mIX_;oj4RKf@\*)#i8`=+YW0FAidk9'?8kCdO2s#hC%;pm=3,i?_K64KL4La]!W#Y+lV-P
%n16Teou-41LDF:qE&NIj#HZfTH6&*rID#"8BrBQ'Ir;qns%7Y6jC\1`[J!bbFP%M%NdKT2g):(kC/D1<.Thpf,OTq/2XEuB4!8ZM
%d#ZJN"p+jWmnEa*J)9,9cGXT2-8OCmD2eS`)8]#`=s4B19,$Q"dX[G_e)=YJCEVhZ1ujJL?MC8'4#fFg_(CD7BFOas'%!p>.[2S(
%G"."aCOa0N#/_3I[14d$WlOmo&h2dGZU9W'&Q+OfPCTUZ)3/nFS`*m*hp&_<2ncUH1n(3=@.spLh)ZA_10qn])B3/pl_H>T'p_[q
%]@RsDs31['kel8q41C1":-m<d%f!/ic3__6W-`pGb7hj0-6To+0IrVqdCm5WmQ1@W$uJa_-_7ranf<cQUSAG.5mJnr1BLT+EVa=M
%i,h(p]d&'h@s2\CZmUo;Drm^+_OPg?!uQ.fPEY_1Z.H">R5[77&$j]R=]kgSbWa)Wl\4;7$L6:Kf$\=%FTG:MaHo;3`ru9-1bI'8
%lLb,AN4/<A^%q1u]%9).DS8\ORSLDS.q=]aqKS/8(\M4lH7ce9E*#,2a>fbml0'gR-t/]h++['giK?-titJ)H)&LBqLjDCZi6F"/
%#%+3p$bFM,^O+6kC-D"ciu@sEVnY:1dDjD'#unnX1D;7DhMd>!=+71GKDt5a'%H4J+&?P;s%GQf<A+u)cT].8/ht2ql]e(qi!b]0
%,B&9eb1/-X.F(.,;aXL85H.@G(DQrsb#!Z]_@^4*VJtuWFgcgCQNQ2dS@b[Dcqp'ZrI%NW]f55LC5bnHTL3iqr>Kda21%dGfC$uH
%,3@5Ohb/LW/&97s^$b=M@H5(946r?%)e9W&rHEI(p&da^-bSS>YjXHie%Bh/P%KYkk&PFlM^97-m5XOFY%daVE?1o+cg@C.LoO*&
%6@bT$YNrnc)`;7\Ju<L6?BTkNG50#Gm#XRC4cjT:h1OC+B[iI878'CY&BeU`GN%Je^UG2_"\?;&kf7[(md,MMFTJ''ceY")_X41Q
%F&HlS'9MMI@(;QkE=A&1X*+10?sGfYJ)FA:*.H#Qc3RnujR@I2Q\fLYh`:K4Z]i*AqurkjeEQEC%YgI*3]HS+qK\"p2H+_]#:Cm5
%B.,cdH,A<JS8ahFqB(?\_9&)?O(Dsjd<\"/Bt[rQAB39&M9('HGB57IMj"3$r?Og:8m#/pD..:K7CqDXeoG%rC3UD(pK;uqE(dSP
%mj%ogX^MQFKjYoNe:!Z)]]ood<2sgH]>nsJ$.D.^b>Gh'KA.GHZ3)H)76[d!$-YEL80Qoj6>b:o[st2-'a\:JLNM^-2uS)Lb6HPS
%)L)%)5UQW,[grM!>Ff3V)BYiY]l_#1g)IL$ZS<8+eGB%rmC,P*,b.o5hg3l>S_dg<F%g?t>5LQeXj.2Jk-Q;!_0YF&&N(!s8*mfR
%_k.13Xcjf23p='$]e5nMDQlS@3o,5m`"u]L\)oW_dt/NO%J4)/>2oWA[%"M8A%8>bC%XOR]$D3<l("8oi*d\b&LO;?LS+8"FOWJ;
%kDc`.oD8R4:SHBmrObMR;<tT=e0"VE?^GH>DN^^Th-p%GE\gJkTYYRbqNk(D1pdgsH>,"cCtbW/$1lkp1RV#+n;0lQ)Y=9HLVprJ
%)T.)m]jGc>B<e[=$`\3OBo'jco,%PsO#MgrS71KARfe2jkNT<221.ELb97ZmLWDH`F(%%n\CceLV-o`/gXPKD3o'fT8d>7a4%)/M
%VffnK`_Ze>q]Mrsjp\Bom2+e?;sHT`3<S50&_;E/gJd('`56RHH-u!e>W$>1eoeK4W"^PH8N21D7&Q3dS9>FuN^0gL\4Z&@1l;C<
%7&U*VbJSR'k7)<-3s3sP_f.^VoT;[WnU_Y+ronK`*@sqX1ua]G\j15`LVqTj5>/5K&bVV[;K/5,:iap$:51%q_O3kpCcA9q/dCkC
%pAh-V'CbU!-Ykm:?!1"Xk.=Si_[s[.fGtHF3ocQtcY98!=\9?3:InAc[<T5sLt/eD$)/E6c]1:'%<_r*(#m$/XJp5U.>hBu]1PKE
%0I@(@\sld45*IqVchC+6/7$7OLm7&%aM[-[C[pC6PgiiXWQVVniKRRfKraO'TiBZf75[(5bC>7l:#5cNS3Juq.s'qJs'ke6"jT6t
%3o7nirEW5-b89%5-u"UAQmqfoGkCEsLDa;bq2;eFEPe)cPZ8:Wm'N!eld;1@+)g':nDLp<cB!1@RlB3*Ko_!bNXtS!oWLGSY26_b
%?.A8CO1oacGhR>Dh0](;PD??C8,$?ho%g@e_p_mMBcF7glagY5e$N!M7so8GqtBR"DsQ:F^45<VoQ^#F\-ock]^bRX:t0eT%M,/F
%IJNZPQ#9%H#7l%=p%@b`.ee8"pCl?/NK`]&gn13tj$.u%Xe455"NQ.]UYshVq!duEkLsV_>Mjl8s6+n*!H&S>CX73>>Pm"EpYGR^
%5Q2:38*fUkhc6h'n(5VSO-3ilh]&[>hi@/15>?#Zg"V;:d!R.S"")"a^OC.>hW*IRp\)MBEHLFDX;>L0pD`Y*rpnCUpE+hXJMdS$
%*_!gar&0($2u\c.m6/'"Y'GME)f2W^la'@af\&??g\?9R]Y3(V[GTi"%]rMGpOheoNSEFX429[%*.@QK&uDM`5CEM/g>U'>DW_9i
%F`4b`?QQLWle:0T47%Fnqn;E9chG<5ogdoA%<)8e)SFk:nL"h)f&MbQLF1frfm*P_j.O0ah=9k;Y;Yg[a1jb#]'eD%^)7?'TBWhG
%mcdl<]CGL?H^Hhf]@?deC4#]ddG594=b$,&k1Z@_m(&V+C^`PA]`'m:G5p9Op)W&1KmW?rO3Y.gDD_.UpAO`4+7C(/f7'Q>+82nU
%O<-I??UM&FF?V[&q`%Rd_kUG])Fr0KHS78Tf5%SL]:JgXP,l'A*o_#V4RjAu6<2r%g<T_i=nLhL_rO#]FT4`*"fia$C&cI^1O_*N
%!=&S&h1#.'IE.-c*B`6hI<]^\A+,K1^C`</*^b9m6<i4LC5(!?0)V/^6,36R*S*h7qTZ_m`h-qU6(rX93BoTTliu57+1L;/].a/"
%G<4W0)`g&F]Y4>%rq%ns527.`S)<YJ$FUBW;'9h-rTP5*[.eY=a57u0B!]F;[t(Tq*TaDK^%L>_!OSI'nbuR9O/<WFmG,;OnCkke
%"sn('DU\T\hgQYN5<_ja%u5p)=SH-MGXPC!m-`4$#_%9dFu\u@/'hgIkjm5]WFEZ^VVj?O[i_-s9]DWbC<u9onF)4bAIUeEFp=!d
%[`ACU[\&UVX0Yr\VDRrIqEGInic!Sme,EV@#3DgFIHRNMbo8%>U-n,"cg;b?rqCCn*8])kbm,1j:Y:V:e+*!#nEIJY3-Tl>pB4(]
%`HqIK&%BHe!/%;\p#kk'i6?3!X!HDKmV2NUS\6<&48t'rBal&RKK\M7LV.V>r:7\MiR@10%n`CCgH\!O2t<*,lRCWTm<rM'VRD!C
%_k>`@EkPcRFD(O4jF98*Is](Z?(-t:B;<:le/`ZP@\%9V2iV%nSit?=[?9=XE==]&mM7#"X4n/Vs86-Wp#$YEBdT@`rpoq6j%k$B
%_:J)$j1F+P2\XcXrc_//@/JL4i:6^3B:Yjc^&8O\F8r]"r["%rPP1Q`CEpCKh"qZ`J*OLeO8cd8mQcHRlS(5Fj5Y>:JQG&1/pPu0
%q-L5u[dt28iHLUbmdU,Hi5JJrICP9Td7&abO13paDk`SJDX.H<o)4Pm5PXZUJk1-Q,bJs[4f!W/"7E'P>4t_UX?ZffE)_o]dcKA=
%=FDr<hq?k7!#,2%"-E;=hqihW^bP(iY]],K5O*FLmc!*,@[6?U`J^X0ao/YrMpBaa%_hD<qV/1p?OqM0[<7/Sa.,t3mnrh+lgakC
%]C+h1=7>dPhgPjT)csdk)n3Q[/^g7Z0-B5PLOeXc""i?>pIN&?1O>;aL9$;k(U:"4)h&6Y6Ul/DI<Du))K504"1gV,6\N4.XJt.W
%>2n7OnN5d[cR3S2EZ[:uf#M.Wls:jdHC["5DM'l![dc?Crkn)[%B>$9fq^f/-ZCoh:r#,E,@tB)DW(_8j)5md>(.E*UHD3%l+4LT
%=#"FAjAp7el(SVL9*9I(cR,]O]jh`/5M14M9u7Z?Bm-!Cnn<%L5+DseARL`F!OjKYK3a0%PrDG?TrBNea9*>^rfrqpDZ(jL"Pfj[
%d"cb"2\dmFe+>(.(V=J^Q"*uLH77\U<dpHr/'!u3k46nnS?E06X@,?`7NUWc`l`5bk-[U_E1:Y^+-]6`:!:4Z)iom4M=PHHD!A)(
%2E:e1GZ+V0_]3s$1/:;86S]T`(H4-._GHMY-D@uGG#bGElGQYtTijl"^q%Z-Ios`#BlFrLcA.>]'0^.)ZTCu:h`79WlOA8O+NVRf
%3q(\pJXugLE^AmorSZN2_$a(!?_!AA8$Msk76c(!lUPo`-eFu<Jn_K.3g.L'qY'dajO8ANqo9Z0k1/6`U!)JK[9J]ZB([JX2_tp(
%G[`hc3o:qD^78SNXaQ\>/Uf>jlnd`.V"\`JaOA%&C%/9T.uO%T%t=W=s6aSRZe^V5?Qu?N(>S'/CH_*;oR-\3E#\2uj7hHeI+#b-
%HEd/9g:IS/V6aU6f*RrX++Ls?5C[YFgQEH;DX@Al/oZ<No9?%`]k"ke(<Q9BV6NY4Ri^u;`9I$`GEZQ!1pHjp1UK=_)k#[TcuHkl
%4^,V6Z#fB\]kE\"</uQ2rC'\#\4oPq(+M0NNg[g)BE0-*rc`abrO[FJ)Oe0ae2=@THcJXk1H;$.b-g8rhnM_A>C/$oGs]8rB^H5J
%SuSWBYW7KDVeYJ4D),U>/_:e=%?JA*4oH[U&N\eMQJC1;m+71d:VJ(?7hdAei@tGNc[48]70eV8&]ajBN=VkWpdaQV>NQ/1,+BS.
%J%0sGkl;+uZj8#3*)]isTD%.)Ad$bn@5g7F(kIP.]_]=qmW^Ou[Fs;*@f'fup;88mY6dnOoRm/aif.<`GCP#:#gU,sA);J/i@R8U
%\=pH'V`UC%b835f^r4f_M=e3L4kfZom.K7+g:eXlb>I3i-X^a<iR?.7%5n+0&#61W:ju[TfR3TKn2F[TALB7'J,$YADL\8[W/`FN
%TH'T*^V0U0IHODRb-js'Xqs>$&#eFUC5-*id/!5ZfQsjt#AEc@L;r6qY56YuqffcfqshMI;^2J#n&@OQn`Xq69%-I'4:4EI-JT[8
%hh?/fo\%aLrM"4i@P,4(^e?,/L43:OmbfG,rVHK#Utn96h72kpH[4YC]DM/Epic6`Ls)EN?ZW+Q!o`P4XnRKnFFooX65CJTpBK$O
%\G%6+aP4+148RokG3AUPgUGr+Is``us-)u:TC;bC88c.ddRE@af:KJON3GBUcE"KM^"*![OJc\M_2W][9"4*T`a=)&s1%:!O]ta0
%@s$Je;K404_a'fr`Qs=ss#up2V4JeIUI>0[i8/>/_%6K(I/3#'97D/&(7R]F_njB`ic8\f^$!Dhbu2//)6\I97oRQ)>RMCg]2AJ!
%pWe4?Zdql8Ktfd"s6Y'T;"2;Zm6BXCM0X;NJ,9-S<nW5<=he21n\%Qnh:'"9UT%^cs6fpT,8Vc.,Ba^WEGj[_]rS?#><ctbAJ+WE
%n#do<[*_YkJp5tYIqerNS;d!e+*(;=Ikr#akpCHu49M\=+3O/E=2!GHI=(8\\fWtPdEXo"gt91M-TCJ-VVf7^pY@FcroE?Ya1"`-
%e]6G7o?ge7Wc.5gh)T_-n&&G8pZ$np"8CE">ET'*"H7F%k2YEhIgR)bmfQVDD!u1ipO,d1mt.G-&mG+meQ2V/VoS])M\k,/\q\f(
%V'h\^j"U.8qo6*Laero5IKN[VG4i#a:ZM+lHY\]2^&I%_P'70bkC6&fiXTGs)m[bs5IWQ)J8T:$j65a8lhS*!_>R(k"8BuDj:Vk%
%['pO>K7efI^`6_;KW,3e:`UOVLO'k=[J]q#M7$G#qoR1!f2V:XhVG5V;%7d]HLe6tb\#Ua!Or(F>5#Wo"W,7J9bj!KIW9_DMo9\O
%]lWr2P8XQ)2&#KRrb]p5%,TcT^NdC'Sk*U+-?&P?cE5,+^](GDXfW&4E:@cI[VYs:pqChBj2MbYgs-UE%S3cBG1s^7*V;V\]NB+P
%f%JbF.mZKITai8!>p\:tm,>qh$Jd\&S0+@kYG:i<Y*O-n4h,qD\DdGu34/>anCIOehVWfue4ck;q#9!t'@I'@*5+jklPEF\Qb6V&
%s6*V:rKl<[,uB<#V^du4h7S5Zo_AF'P8J0>ltjRTs1Gu8Zd`@"\b87\V=`]N44ZSX#nC<FajjTc+)@p%LDrHIq@CWAbZW&"dm"2n
%gO\\*6VIUXo]2(k`J<q_W=;+\CEF/bYJT<Y%rJ_ZErE2ob3q<(cQ=!qB&!&GBPuZg&tjQ^pA"TE+1o&o'r*jQgr@5rO+H'rY!2jV
%d;E-tlZ]7X[rZSOdi:l/D0Pd?VYB.tqg26C_1NQdFm[l&-hmGu>ao@^EppEeqt0Bteq;r[4$VQ9iue8@m3I/NI/iEpK3p1)KJXr;
%hqm](Ri`aO&o=+VT5kstH)n>sG9?*YmuP/W%'!Y's4MbJ2E?dID>=!5(]U00"1CKim#.28e1DW/&_P)][K'guQ>?qE6]2i=?iQ_p
%/<Q?#=k+h/4Ms:Bk*j]),I/LK,>Oagl[:t0qs.TqIBS.Nc@:'7B=asHr]G$>JNs)7BCm"a=>=Ij#qSjb8ISCDp?OZor8o4b"i"g6
%V'#[,-iNN6\G6BbZ@@MdF.5nSDa!p\]0EZBs44Bfp[L=`?i@lp2a>'GhgPG2p23Sc,#'kq"$A5LDnPYh:G,1OF?_?1rV2<GpA*7b
%^3]\S=0ItDTeu#4biCAb5[<nAm9t-EotN`ffr$p/_,L*I#P@05pHMtECd5O85Q'baYC1]h/J9_Nr;=h,p%n2;=7\MG]aG@uHe1Hn
%F5t<Ae,8XqWun4bJ$WXDT0Bg^iK)<7HhIA"YQ!SL2r;8nI)qERohS3=h?2]lNIQKWG4A72I.F=&^)$]krJbUmq:S:.m?\oBi9(XF
%X7qF35']`]PJ@+j(9TM->!F?rj+F72mf2:AU"HXCqsfqen%S\`9@,N`?G$0U?[m1jK3*Qu8)fG6rtr&*chDqgbA6gRF'F@qo%L:r
%gV<aQbthKg?_Ok&<W;NT1tUKc/9`""ILs'MFcp86W![*]kJpZY(&tUo!;46JAtHkZhoIWuIsgYH^MJ!8ro)mEXB[G\kU=+A,MZdY
%_CLq]htl.NgHMUp'j.-3h>VbG\ms'AT^e(Ei)BIHV/*hon+FEl3MN_'kdgIGD9E$jiVME$rAWp.r92jq?_7YgS"nfNG$tVpo364N
%SA+RJmsZ>XI.a7qIe(<s8b:W]hu)O4pMYKLe_)mrqtWl]h1#Y#g)CEKqr+UJQ66(lCAYu^kI>I!_MRi)(LMUd'oc+9o''Lp?ZS@\
%5JKBVSQK+NQ>9QU>@j]S6,NQk_r(CQm>i<[h7`QU/Xc3s^\ms%?iRQS/>fUrs//)2oBLZeqs:F8V*5GDcdb8Xn.DkKJtRSinb`c_
%mCr2>+3o@cmI?ff=.Hu'T.aLIbI+g_rq*\7IcI!jduA'*pre`_VESe6"0YtIl$@K!DuQ&Y`I7ROl6#Honu$F*jk=J\Y.]2JK.#9"
%qsqpKZR>V'm2nOi"^(=IMa.!Yk;.^=o6#BX2b:*_naUu!hIec33qVV5gUCO=pZABgIf.?d5GJ$%IRa8!m,@jrdWmQZ@sZ&iJ#XT=
%rq&BVf:1C+b2l-3r8QsJmZdbCO&t5mjCEn"%K9oT\$E*UWbKn)cno\?])Ln3a!f<XI!/g\]_13Bh`Q;NY?*&dibQ#@?$u9J\G>Fe
%B6UQSO+-]bT0Br<mE6$3S4t>)H0"^LrSm(rJ,ATsf8/_e)-]h&KB]+qndjVB,T5d_\)71mHZG=[`p&P?P?n!;QKmLsYMT<=X%@,1
%%/JLon*T^"IhcV$*5WS9cp(k80`UgFn?a-!RBoY:JFnqalUTFpol#<XpZqJ5pHD_.el_(LI6nS,6hgAUHfOi2B-pn2hm8rg!>#(8
%=7?(XK#EED4N"GAO?^F"otf8K]fI1/?)ql_UpA'G,cmSC>^c'*hmj&EkQY'3n2iqTe^sZU7rM\g\GbUBDgq98n(3$af&,^Jqh$tK
%rUnXC5:1O9b)OA!aMWKX+2@R5^WR)VdIk!KZ8).H0Ga&@-a,aZl_;%Tc[PW2.sL:WG<blu[c(FMs3Koq^\"G5Y2!\tSY]-APo0n`
%q<K]J,-Lb:eaee$]_O'=<OZ>4gY`OUoeg6P=5SE(Mq>[gF1TLQ#-*0cH_$2J]mG5(dURh&_>2]t^-u,_h=FFF5.LINbKE__M&!]'
%VdDQR/\sd,/hgo8m&c2D5IrZ89p=mm1%h.W1$j+'8[DH-[bO+??[qX_c[X(\5t`0mCSYVCr>/Q(s6>C.P7[Ll^nLPH[GUuQ9/h2Z
%*W5ND^AdPIn,/llp?BV)d+@'-O+8k5ci3VW&=g%dhn$!67D2#Dr8l)f>K^eHrp6:KVVFE9q-1W2H)K-co3]jIq?R/P>8R<p`:DME
%roq=eqT!OQq5+)@-]dKIhFUNJr[MnJoTf^(\Xbp-NKXDqGhfNm5.p^YmGC(?qrH&?]=0BjD%#`J'?q$?E//)#D1rtd\c9q1a%oG`
%*]tJ-<9o["qV^Cl7peIV`tV(cfmW>Gs5jFiYU;66^0:C:KspOI.m`QYi8$p:I!G8^5gc&G>ik4dp[A%3mCT_L?f&MAZFujGm<s"f
%6K-tZ?f<qJab6/04hUUOleN)"G]@emN3L]ZmEs1.:Amh=ZFA]j&@'k-kk`[f5[ZR^qX2Hc6>=b'PkGWG:td3X+>D<,=E>462:JXn
%@smf'HZ?`B^A*JA#i.KLT0+L+g;!Q\,T<4j-5oSqFnZtO5_)B0]9paM*;C7(iP*W?/f1*c>Hb.<=T?t83J`07nAXW.GFmU%M7Dh^
%,kl&pqnoW*I<55gdL%(Dq;piWQY%K3oCn>T\b5l(..VERViPb#mcib[06QgSiM4j^847@c1p"D$4a73/kGOAQ.2`&IBCF,$-SB]:
%ab*;!`Pmbl4%8;aPXF.k5Ag9f>ccWHcX/phX=`i"-[/?D0CtmuY9!E-_ia$UkN<0K?@NY&#RJj8rYg4Ee)\&4LXWGq-'Z/<mn:^^
%f#\a.3k=s?Y-(8V?6$<,5NJ*oAa_dlFo1V*`=^t`k=<!V^Eb0%on,d7hnI/!4us]8k)6i10D=MliaL&ZaWhTAp\t@uQM\!&E:RY6
%d?6`]4,J;M?+K.I\F\+e3S^ktbXZ=12*3^&.I`LSIddUcYr=>XN5OiL3cg>!ShiDKr'HMlp'uA+PCF+7r8qKt[ei5p?d>UNQ_4'Y
%SE"`PCYX;TNA2=Im=Qcnmpus77ka</l^PSOoBq!KC=$aF4Tu7TE@pD'YP1r]UK`d#TAI51s1s/HOWRfs%)4\N5@t3cO8&#t5C*,i
%:qHA*.N.a?rJP=7C&G/iVjD?:HK)cY>>P"?/NrW+@Dr0P'_)G*Ll@+9I*%&_M8$Nb7!=T5nR)mLckFL7g-:<IXsGdpSd-PTCN%?6
%4oEj!=L6.>*a_%B]/NGV*kJl]prT5jr9Ye/5+1RCmlj&0[<HOQ*/ES&#J]*hi)7F<F:%jL5J8?@*B,AfPX@CiY<.MeN:J*X%nM*>
%adjg.E'*XIq,t9[+;<))T:OG\E=&-A5P1&5Y<*+CPP+)[c)PYep?]bn]uO$B62KFS$`K94[dhIgTTS?R1MQO_Oo<t)IWS_%oCDG9
%^"3bLQhR,BhR\&jb_(Zl5Q0U34t;kL*^9Gk_*YhA]@pl'XT9b2HqXq=mG'n0p;e&?bIDJ_+.qE)rRFVE;t`Fu0dXL#J+0VU?jqh6
%L*QNWrZuWKUk!6#Ft)iMh8Zd.hn4+/dI#V]Y!09KhC9QP1$^.Na#`\q4ne(n<RmlUis%/dI/;gdaX=R43&uJ-'@d6bo(%R.]_DD4
%?9.g>lr%L>lc]OPf*BqgMum)JaghRigG6%S>]M9`eQu\TmbL#fM8p[n7LnqT#@%OTs.drsDEcb"PBgc)Q:*<c9:n'-q"`CNAq0a'
%SVO!@%A9H=^AI&IST;7o^O>ST5c?SaAMOV0K!J;6@;.+CHG]'T_TY\bF)r!ZZe*nfa/53D8'-[YpMVLf^g;83q:0W#"_o^L<t)jY
%&&DY$iA47V5<EDa9<?<<n(tI@*ZKbu?fR??(sM[6_'hT'G'a%M8G,t84gn5OlR+(q#.*_.B'%#LdR's/:;u]"$*'cNI_mr[1E*HH
%nUpjdq2D\$eA_Kk_Y*eRB'D,&:fgNglEuhp%tlLikOa[n#GN3pp2a2O]8D)%r?qSm&-$<#\<B_gL&_!$rUkC2^OMi"GOiA05C_fj
%DZ,)Hs6t[@\<:ooVqnn(E[A`V::"m;j;rH.]$bSHfb"u?Z_;Pc/;?Jc6%AIra7l:4gcG8RLa]'#\.U2>?dWXrnKFM?+&O#]Q<Ho5
%W\[1!Ptu1l@B];;:K-Nf5:c]>VGp@&l_g_+IrZij)Gb-aoOmA:T=S"uaf"o?ms@+?alA-V0J2,2oeDW1rA:=5cs>sObU&jN?$t85
%3.&*Ca?B4F>Uo\DCYG_p<.9`YXmG'?=YW)ee7GVl<SDR<=s"ZHn=4a\-S5mRf0P(*%j+?L:[NX=I;0Jo*47;hL$Io8T([rZ]b5s9
%VnNg7@]GKcd?LFH>_sNk_i`$#WBS``,4,\\,a=@dQ)E1u1ta@fL/WEK3a+$E6G!qf6;B.D&9O/X*T],De5'W=J1@@.NMrbu6dqOS
%h?14ke6b<u`u(t'H=,8h40>)8kOf9iY=*eE3m+F7qP)Pgg>ciUXTi[>:B81f%)ULFUUtbS>,K?8b7PJ+oaH&52T8_,K,:D9#^`8/
%h=*_5d/LNhX;-F_d@*j0VPUea6)Z"R/=3E9Q^aD+C$;(-i)VlJ%Q)LMdR-[_>&!<9/jRK[`*RTTL`Ze'!2A/qe9Ec95UBZ_274(;
%TfqC9Nu,k#U%m(tDj$gYD1/R,o2utT'H>Z_V,o,0S58&=nT['g^b9]ER=KO*G4gG>R6Nf9fGsR7plfL!X#)iZR:<'4Z&0Em##lNW
%U.M:#XFuJBV*^?%FucG$1mYs=L%:Z?UTp[23^lOP@eV]KON14/Y]1o_([+uX,O;n5c1=[Z.F?PObI[RCm$r5m[Y]IlC9j*L6K'ds
%fPPoFT=,T[I$^r!6M?gB7K]J=Su(,P2S#h^Oj9=eq?hr%Z4]/P=f-WlX`Bm"V/h5/GRW4TFX13XQ0FM+2l*<MlS95F>(n+*OV:kG
%O].#K_C]"[\=CXe.CcD@#N_7Ij@s<?jA[F6m<Zo`)/m+P_:(GO\+Z-'2Yc2g<.IFgI0FNj\!H*#E+0+FI%7[;)lG(bl`to.hE*W2
%Xk9jXqE$0p^\[I2ro7Lf?N02k+8eVhH23_h:Hq._[;d(k>,3QklRniX3?</W"./PTjd%+GNQ@GZlhXpm@f_2L$Fq+/OpWo^-3[T:
%8=.L_+XXd(J_W?Q5V"EO<m$8tLafIEpd1'.!jU9b]1&4D8n/?#e/e(ff8UPdF2A5t2e[&qFGT$>@Br;q-+,j=KCI:h`a4UskkOd"
%7++rMe#5#<IMi\rDg]k+9lfA^kWfj;SJV!W7#Kh^R*)85pS=q%K&ikqG[F<S:Ta7a8iQBa`5)hpiufU12j"S8VKZN>_T0N\;5&oh
%`M+A@UWc9U>"Vl1,HJ-'8hspXDRAb$r6[QI&pAqsn$j"l9mj9J>,u%`i,TZqa3&H9=!s_O:4OA(J"PL-HGLWRM\89r:&#>!fj!;U
%Q5/+7l5=lijkb%\2s%(!,U%+1H/]AZ-&j\)UDA9BdcI-NY<l"n"oOkCIADqC<N10K%olSdM*?%95,(0Q#83RgQY^"R>r`W$#!EBh
%BZf,^k.&-D/KDiiM##E*TIG]q[io#(<MU]k2:FM2$"QVd[`0VjHJDYFU4m^QqMJTt\":d%d,[e(M'OAqS7!,=EH.9YdUm9JoMTO^
%=bf(5a[fFPN=arU>J:5'=AaEL8!mVNjM'!/_p:Q9-r\I>ek036euGb)Y1%j=2c!YJ8=37K$Ht2Kl).j^"n+Ca2cf_WW(j(joK]n4
%`q+:>doZ%CZQDFoH%tk8G)nlfo(hK:pXu77Cf0*740Q?kf%mr^fRl$e&?XRQI!bb.YAZV;rRu&Ugq8.&md3NV+O_-=_qBRD^%VGr
%gE/Viq<5rNqd0fE?Nh6`X,k#:Hg*n#*t_N#BB+86;-G(2PF2Yc(fD,FS>1\j5OT$\*Q]n?Sh]oJ3oKgN`'rJ60Q\lfH2%:Yq"d1!
%H5#GP@5Nmn/iR7u]1;hL4T34obNa/g&E]VbqUTPtJ+M(4H]NAmRfW9+_//:T]B\*Iin+4d9cEiBfX1JFq:0]68G:Gt%j'Pj^7!4X
%;!"=eoOK9:5G':Ze=8[[8iZ%n^k6NZ&igtrO9N6'.^aL:S:%=jZ;<p/Oi*GZ\hFLn,gN/8cXeSFW[oV'Z-`b=9WsY!lK>:t<9],p
%Kq_#r_fYW`D8e`gA_g>9+O3HC#kL;denfP=-CC<AS#p);VSgX4ks\]uPoC2+-XjX3pS(PQlb1MHa,A<Va3DX<0l1JiPPik:eN<6-
%2:>'b3'+0K;i]_InEs&0T1pI:Ea?p/_9kgoP9FNY)7$.'Dn*8T9Ufh2[4Qa%OXo)SNEYUoYMejnMo_dmk%"]>Ac$@U6e(%0S9IM>
%WZnpGe`m#O8Y%@i#RUF;:p^Np2kB=S[PLo?:,0B!bsi>%,8%m3@b)-]D)m#d=09'3C9=2?3c?$K:eTYmS5b>GR^I;roT2lu7M3l-
%E8b/_PnLVL*@Zc@8#`jV4slT&fh.,kR0Hf9&80>c3*j"AH`]69k.%33b"Stg1g\Vi`1XsC9Zb71(Xhba3`JgZJ'bOJWr90A_i8K^
%i\lr9m)_kgU$4/IOBaKQ-,>+Rh2Ek@[0=.*1QFChTm$\2]JcW*Y]nq[Y7_S>PV@#6,@PGpeKblVfVu%.p9bUIG1<%A((4pFe=+/Z
%]eU_i`-c6.VX[iqd5,H"CIcTWd^Vbn'._,e-u9sSN](Zco-AB4cW&)+do>m.fNp)]kTD>OV*B%HAfi6)b5@\/Q=sG:Zg#gr/Bj8r
%G8aR>@(du^QF)pCU8g@OO"SGFfpTq"$n)l-[[Rhl%MJlQVQ)/*hSI]QH8-Qgg."8CdV=G$Opj'?)gt2"kYSVM.RELQ=ItrE@Ff%+
%*c]%4E8NrOGFn"jbhBE?/]INKgMl[0iL!9Lp*;mnjd:,#DRe<^G.Kc1CE_X:!HEan8]bI+Zm9FuL-ge3h\]l5opTc_];?ibV;D:@
%fMobf;/X=.*UmX7,J.b4B"uum,N<-R2Ipd#,:CD1X(nRPKLDrTW>gLYe#+&,?G_BFFK=YPW][j0;Gq5O@QKJFdRklYQ8_/)Wgh4#
%(]E@'AFZp-\`b<&N"PkL%6;jJal]WR7^(H`Oj<FEKYPC.CpC=_erj\hX(@4?1(&r$N\"s;N2(Z4V*E5O8o#Ob<L5t!A]EM70lE.q
%(i4qE5-JK^)]lRn?X+4RE.jpj)O$kq/h+tb1Refte`@PO/JW2JHOnLPYN2Do<`DR^+=/e$<$MP4>Ummu43"c_*=c:,LBH.Mm<T&<
%*eK3%bhU:r\jbq=q-%f\EVVS1YSB>2)4B-:QqmfIg[$1CYGPPOa(R(?%mrURpfbL'8k1[U80\_H$U<X_>8ru6R7&if8X$8:<gSbj
%eSM*sii>B0gdeHH\64\F$Xh8tlTn4p"lGRj8=NAoeS,>r3)gm+ZU[0<.E=V"3$Z>(kH3n\I4dV4WV5'k9<$fC[t,rlK!?q!g%P]q
%H?%okM.gXq.4dcR4X0/K8r]r#]=U_hEMj?!c/tjogYu-"ektK*[P.??^(+;R,nVJCWFo3=Am[rUL2Lq9rM@QJs--MrB/Dl/V\kJH
%U8/LCL@_:fTN^Zk"^3]d/acCTKTqEZ8L:,6rpe\hWPlebZ%TO1q4&!hR#<P'Oi.k`_tgHZ5P"ZLe.RNB;GAE+ZSR_'\_;euad_6R
%2-aF-knW_LAb^\<5qY3#XAYh,MH+eT<OqrtXK"XhK(?N*<gBm^XQmF9W\j$DI-YcR;aLeH+'6$I`RRX@6&T?GR('E(HaqC1G837c
%,T%Fi#EaZ&p!,M,osQq)s&9`Y=/N\n%(!^`rQcp!lGJ,.HuecM8XM%e=%4$("hAc3.iRI]YXurQV\PX,?TceRFBEcGNbAa86#9FJ
%F8>n_5J#iQRfA!"<t:k\Cu5ARKpb_UM0\e4pA-PFgfVNdpFs^:\bu1?jY#6I9?_F`JopSt!UpO>8FV/Yn_R:O92A#u*F^;[G:l/t
%0MRZD"QFgQ"A*DTl"dCAB6?2M=6;[Nq.@]XnD8b!!b.Y7>*dW_R82tt2`:s7NF+7#f7(R.q[>9Nm@.Oh2Y.em&FdL=9O,:H@0)5G
%okGE2e4_')826R??:dYciY%$eV^jVkg<[a-9rF8`h2Y3g_kaV!nM+]9We]1CSZ<CQ0qSjt'?5=^jdbA'c_"Q@Xut$PHgp63qaR22
%aY`c#P!,%?4n2G](PG1fFRN4==EG7?*A-UY7beP$DN2^R<]=a=YU)n,>Nqs-f"TR`E/9a<R^_HD'&?UP5[0I.RkDd(9"FSKJ`CBd
%;m-)9B_TjkcM#Me>asCT0*q>\!_-EfiJ:@_&>#YC`3R9*Q;OUk0pkZnWC%sOK\[3_W^"T"e$!l3e(jO;q<b`-*s-%M`I,8NA3)#E
%I%X8Piti()[U8ADi12Zom@.Oh2Y.em&FdL=>g$hYL>(;lV,HcVKDmE61%?9=?SR(mV@cETLBLfp`,Y,$nd0H>"'4t2\d9'$P93SB
%R*ujV6HeVf9ICNJe:X.Z[df7Z"kt\Bikn&<SF)eS\Mgc3?;U-b'MNUlg=RGd@=O;nW4oaki=Ska+os8S(69m]g6Sch&qlW[P%8'q
%c_iLoYgO+Z>;`ZqD=XH!E7j03oBF1D;iH<:jc<V.F\]d5(D?ro2T+4^)&@!DTA]qW+&'MH7!K1!%.J]^jhZib+qV9QK^98OX1J]\
%;/4#H$KII/7h/*/BtFJYN"<q9=!mr2.<n$^Pj+Eakm^!QHR[TrZ'U&DAiSO(_fBU+1VBC=K.30%M:d5WLB_"4(@"-M+Bbh7'*V.7
%.`#,T[$!#.)-5QEJ\17S2*,#bGbY1'ngec'K7MpdaB^B%`8c6g-d13,jRI%Y^TF#<fV96I=HK`b5Va,d*rg'&pks9_O8jfV%jbOP
%CK\@3Do=uC;U+\mn#4/uI5H!s6708]]NhL0]oJl57A328@Rt4F,JrM[VR)Pu^F/%ZB:6uA9/<%VIM%TCr5K6_!jMW2Qi1aP"D<'.
%=>%g6Jf!Kp0_lpOXn8Rc?(Zl'D;GjMpJcs/ZtZF(&;VbAPM;'<.m9r&dgp*dU*JXN[9p"/rr(Il`2t__%`,_j38QdWZ@(O(_:&1\
%5M0CrfK$e$Sd?/_1S<S/r>nYI8;<Ei2DBa`PO?,d%VX1&\C$Bk;8fWe&M.f81$#cHP,UrB:YP4b#_4b$`S0D1U\)0c0$/3M6URSB
%/c2@$nV_hDn(J1_qdrs5c"r+N'RV;4_^(=#;M/(e6CR8SXc@ASM5_sf`d!A/A@D=[jN*a5K>cch\XSVt]p()#GL;P/7@D*!2YZrU
%6Ltu)C=C]cdjY<=ik*tC`R5$n^Xus]gH!1)^)7]%1S<V0!?Y"N,a-a"iE<DXjr-+KFj\S>1dug'I53>Gduq"^eUZ$Y-%Wr/e(d8p
%ks3UGNO1J8d0R8,"]XH(oBDE3VZ^7UI$3JQ%W&nI#l(VAcM#L:?^eqB0*q>\![d#\GY(n6DZuZS]r_diZnXTF>`4dsN5.^h7ZROa
%kfgV#<,6#6DKfX,iKuU11AU\*87m$(RuWLM:T"nc=Sl4L`\3W9@/\%s8+Nf#cM#Me=I]*p0.?Tl$4a%t(f1CdW07p]/Yuk+;4REC
%`9p'W?EB=)h<(LRO@E),K[j/8)SLFa(*+ZNQuQSPmNY/mV/2i_Tb?g($eKd7.^Q)XNGe3J@pK"@6,*$pM`j.@r3JQH0:$05rX7^K
%R/M3$5NJhnMO'^"Ihs,EFF&#E_&+0'mAZ#`AUtq&]YrjZ7eZ-,8dCM/-\f;tq6B;$`?N$N\TKW2P1c(G6\OPZ/Ut!H?g&#TrV*Pd
%ch<=4=I8jY0<"VAl9uh@DFnY.5km+t`M.ue7l=d/&q#'`1ILIQ&@*!\T1D?r15pQckm2em[%UO_4qd2S0'C(8fOD<E?'4C$IYR@2
%d/1g9Q3K2E`@UNQTGc&Kc*1<>q$\n^pg=.U#bC*(YCNnuOh\5GTP+e((K+*jcl,Gc^5q',8GkAleY@sjrCTRI[_/#^[jV.r"462:
%"e!VO^CdHSFe@f.^Xs?P[PG\P^'U)51Rm;+koMH;7*Xm.r23N=F>iSQE>rQ,A3L%mKC;auYo2IQ)T\"9Eu/3iA8[YU;Tq3H@YRTs
%>FGEd<8;*7!LO>FRHOY?Kb?=nZ&g!m(OHn+Po7m@c*1<>q$\o)pgD&m+O!<J6mU+5>O]q>UEWqj:U4mTrM7!Q5\c-I\-X%iU7R';
%?RF0Ef&8SOq>.7nO$^TQTEp6P3$FF52<WFWR83"5!D?_Rpr.i6m2&+(LX0qJDhc6Zb\)/d^B`4@i#Sk3^EaXAi4@b!lA0C>%,d73
%JE&Zj/4],So0g!<NC8p5j$dm1!9CDDUTcoWd>YgJB#hhFT?YJo(;#47TsF3@"o[-c-I_ELj.G]VJ%72<nR#,]_4kiQC+1qX(Q_)Q
%c$;G?!7o$._$$9Mj?$7,F@HKXNWlC-!Z?:Eaium][Gq%cacAa$]5iMddq+qB%DNM=W\&,d@[XX'^Y##u]J@CX^)7]%1S<V0"Wo8r
%#NW@@#oR4q203'I4+J5Z;<j+tlQk]uR)suM_NIqm2K4im/Z<^;6$dkaBd2rhacAs.CW%u?$Sn3J^]@rUoR-jY^R,W&+VUC5Rp`KV
%o*JaMn%nW(\>NXA6EC:_s5$dH!;;Yr12u6MTK^j.IQB7?30[FEA<$:5pQ^a_`?MJRRf$jkS%&1QI(J*D3_P%!pB==^*WicW9E]aq
%$toHL=KKbpL)1PO0Eo?/>Qk;9_CSh@LND;QHo!]:h#RF,1.6m'k=s=rb,?nKdf:F)*Lt%c-IUb@r)aY,r,ABr_Bh#Sdq+qB7::Ft
%rA2W(/<+?>Ma>/ac>^41L;hljB6Z_Y#O??9K"ae,+Ycsm7od'%HNr4]16!._<U?ikVlcD](D0]u1RnJtGA8(2DY">BTZn-UDp8-m
%8AHW>[%&_hCeD?*ATbCsr*UDSUVBnIJ9Ob-[Vpcn_CR$Y6+_p#0'NfLXT`MG'\^(+eIM&e5[+\RU_Ge&]'u6aQ9#/N]F9]QgnS*@
%Yjtuc`QHE^,OI*q@paf8DBbW,jLqp95M/K;/*!8h)h5RQZf,7&m_MRU!H2-C)EeB-_*GCE*FX-CLE6K6AfuZ]RGrt7MfGC*\e-=&
%kPtm"#STS^SGXda@kOfn8SN_#:??"HSa/&%`U)YaqQ@?uMp7VFre:-,&"hfsh[GFNREtASJe+\cLo@#)ZJg>VRD!0<bW7kk)e5]M
%Hu,2[QB"-h)!aWO#qBD(3rlfC^LGUL;9Hj_a")3Q`UZZJ5)OS>Z%NB*<_84Rl%3:sk$`T*"^khSitjKQSphikhns(dgGd#dD3cuj
%+Q.l02d/M6"Ka2i`%\jEo+'asdCdN0kSrI>@EZnD11l8oLpDD&c,FNB)UI03J@c]<Dbb^3klDO(`at^A@69J5S4kl88,5&1-Bhdf
%D85q*+[6r+_qDaAQ>8:Gi<B0$9YVHQ)]U2\XC)PIfR)2s2+&$;m/WGQEriOU.20LYZY=s\5V$nM/\F67lYYLpm\p6L[kd\T(bj?m
%%i/[@;+O.b>I3Ro9P:4Yi/3me4+=G.4k<sG"$V*eZ[FV\en.+`$N`MZJ6P7?5lp&:'Mc9Le_s:/eHJi3JeNCj#,prH9G7<2kA%H6
%go[BmU&ugfdo"bhq^<Ym@t6k='tW]mE4QjljX.<:n.)I0]"[]m:"(cq_BL?<SD\5@"H/P5:[is`%p%Xcc;h),4PU:o66Bh,^kDI"
%@K:ofW>L7SQfa$1b@Zn5JTQm+Cupcq*T=@`o4Y5Lr-d;DB!WeO9l1E4;]k_e*pa\im:P)dSF)eRYqYbU?I8,6[#5[k8WpGWlDRo]
%c?VKZ5=]!]]&J%c,1VK>ZP6m$2G;B@bRu-RB\l%fVY"j<[cdWR/SF\.4O9nSMhlZ.g"Jg,qLcJIZgI;/p5QglQYH@6[!OLaKauoA
%35#oVLqt&HZ]:'?3sIq_OLcaCfuW1niWPdG:$U<>HCA=cSdZ=aFqWkrRQRQFil(!/a.Q^uadAL(@MI_NI(CHh@>6Sf_mECcnV`+R
%@)$+7I>/Wbp<>9u[)EG,kk@pM"m++R$M&()p57PJVKVY@O6$&43fAYoq_m6Ea?=>@<ekEF,=-5(!EcPT#'eJFgrH'pTNA#Lc:,B8
%kE:g_kpfJAFu*YsKtd)0-2kssR!bN7K!Tk=bZAC?_$fNkN-`#9)N'`R+/=i;PWV0Uml=&'=i'^#-",l3?33a:NZoB'/%U8i-)kR0
%iia[jY=rs7aMj?df)hA,r#kqq=ldWkdN/Ze:P'tu9\El(JLaY=rA3"T67`I.G^ojT&D6XW&+Hcu1go^N:BN:eF+RnO_X7a3ZU+ZR
%2#@k*\J+Er,.9n?+E="BbX\ou`R-n[-VjRZ&)NqEm)PBr$hh9,^6g$4=4@cJj3+pp3;RjcKF=EIJtq2[jl##*q5u"o+"(dI5&b(n
%@t2O:d-*JJ1p(Z.*!2T$f2O$[MOD9LdB:]5o^CE=*BZgt7`*"'5enXpd)d&iEh-qlY0M%Zn(7dd3sUWp>pr9ecs:n#Kd</9XBI)f
%I!^BQO3V`h@YrAR6]lM<.5E;Q-l3_o5l<[rB<4gIoZu0H.630D%!:L,CO?pb,SFUn^rrRqZ@dT#p)HU&Na::h$OB#uJR"3LL]X3O
%=RG,[l4D%Gk;YNWh2*gE#Ek!9C`/8Y?%?q9">-/6l"ZFaYLe!CEV/_P#rFQ\'5J/<7^2XtfJ"KekYeG$B0VQ*=/ItRBC(;@R\NK[
%"Ec/<</%P)[NlZ/s4]2-ju>ERh$H,!`tk*jhZG#iLY6AJF;,UN`hq@b3;RgbJtH2=b[a]4]aRR]\1$Id`UmLBIfA%@8*<o7JOnpR
%,:"r=bAfs;6NXM<c8]3T)&leJj7p+(%QoUdn3fQBE.cWrM(_.?f!<6SigO[Nn(=5jpdDLlR:$%\5kL>:aVVR.##NC/IP(hJ/A\!Y
%m4"&K+RVitT<cgXc"k$MffVSCd1]hX!i^OPd#ZMOFsST`F-0%R1UHSRI,b8Y"CM$IWCLr7:h+Quj(m[:E`M9OW@S)\9k[Vj.E%S0
%Jd@,[%;mH!2TP>fnm*,ko>F%[KZ^M@m*%\Q/?=]uMedfImjiH!?RO`r\Md5[_^QJ'pWblX>h2fFSH\s-pEZ[XrB#2a0?qt1fMpX<
%=W?\[89BT4*!"\KUVk4o7mH(HZ<1_l.Wc!,bEGg8o&lKDfas8mds#`SE9rY<REdM4>!O6l;$gf8FolKLV-3cm1p373)33$\GD3KO
%,1tidN\O3\[2u9,W2s;n^<I;se_1_XfD]s32_W%8M)D->(<=&n=7->;_Z:8gdRlG_c.X/XB=PRj>j'M9aJ9j!_p5Jd]#AG$^.OPr
%/?quX^,a7()=A3ha<?>\N/.#'7`ag@hsQM26r7$LX+oi_Q0HK$k;YZCh%B=gLi,kq^d_bC>sW;&:F/CJbJcalgR#+fEV*bT,Q)6k
%k![/:C7g3.X@G(OU?s7qa,.lXIE)adB=PS5@-6E#&5+TSG'?mnamZ#uM=QZgY1MpM2l8S2<pYd$Qj5eT'WP8?j?3'cADCX%%u\d>
%GhV:J\2hV"=mik6I,P&Q+j+0Wk@SLj(Cc\_6a6^(.l/1>,Bc.>WMa+s[sCm8Wi&qj-\rCO>W82@`73J>8i.5,qb]qjJUa.7p)]$@
%_2imgG@D*q"pn/68l]ZHU4_OO;DN*<mL<E]\!p74P!b1`U\gErK/RY]&H*\J\#^^r*tKW!`DRL>03[a;A<9qaiZhDuQ:%R+jIjaV
%YuZm:S\OrEI.<>/kg_Q$fX'nYg`hB?G@#X`Xh/fG4FDO'7L3\@IcoJ?++AY0iU,6'HfsPi>Bb!MqYeZc\(>'id%I!0PPKa4^%VGr
%gE/Viq<5rNqd80eT*?-q8HW.Crghef^A@\_5.G[T\*i.B%nPlPY-bY6oI"j#4o&9RUFFM14P5&@r9f2qDuP%FZ&Ro1L2+#WCBL0c
%^Am9fUDq[Dn(rQ"n]8?:ml\.%oBliZDr,e^o=fV^D06L0EVH]0meq/fQLf$EI;?%C^\R*U]uN4G2rZ4K%YKLsLkY6u0hPP!*,Ll-
%Zt'g5.RuACETCV$$6*`V6fCT:f=rd/M*isC;.)pkR:<CIB!c4#q.<=TQs`9hSV<q.iD/GQ7/A\u/hB+gq)lV'k6Wr\q;W_ed!ZTd
%L7Yg,Mo[$I%_0(XjJg,F!O`$AeDa3(<<el)q!@P8)eUC60?F0F,K[1u7lun'F@"G;erf<<1AAIpkBW(uK^m.8rpOqS^V^N6C9lTE
%bt2%i"j7B\*jBSFek"`Be`qt,p74:_>PL=gadkgt.T^>Q577./dAWEekb;)76&(bLE9\4rC9qn)V^^/UQ`sL^Oe08Vo_A@M`lMq2
%naCo860*lESmrhZMSPQg*Q*agGc]tGO'ulrR;V?gkC;P0,384"AiA$*;0:=jAG%dBH@[%^;EPV,X#PuW!msG2_/;\tmnTVo819.o
%W2ae[\oaGP%6Ii6-=;!:+r$Km@:p#O]oN)M/K!]%A-2?\#6Q7_M\ELmcr=GHA)IK0&523r?Z:$<6c@Hn5tKRSIB+6/bRn@(*?f/&
%IG)_UCt_De8NtfGUEk/^m5^ln9JC*u?Ff`hDSPD5li?#ub/G_c0Y,%\@9>$2&/ntXVU[gG<L!e'b:`7Lg#6<C&jIou&C#F5^M*q/
%W(1X]d=J:OME^?&mCqiK%8M^e+CqUAZBenWP4W3;RonG/8C59`otPIQ&@[N<8t'DPcWm63o6on.K]Z!1ih>(qS&N2Rd7mY7m.kV2
%9u2%d^9[cRA%aB5U`+A!0790#7Q:k&$RrrJ+7mUIB-CJTMsjXej1$c](*,rf"aZ9qi<`HQ2ujlAA+MbZ-Xo`E>GT`+bNiOZ]u2tj
%53S,Ak!bo*KK\*[\jr_lKISB(<KdrU<[f1FLcoT"8PSEa,!rl)FIkcV<NT;al,lPu>:YJfXKM*-H\aSGZqTAp1K\rIB[N7"[s'V\
%i/Q6uAF1S4B'72BZ'18VZXr[*<SY<1ps4p6)RCDl"_jXE<ot5g$^ElG"l@/@rcMuKYW2L,.YI586r-_GKfcS<:?=_W*Ef<LDPiS]
%S6Ch?9o,<!2ekZUN"Ap)!tHE,@"Ml<6b6>VK5U$p&W0L-L^)D<RgGn6Y!tg#kujk9]\%^*>,7/Bg7#Wm!_E<hB71qUd,J&"c6g4=
%U(*/g>>]^*>TXae^/]1Le#c6$[2P6C&pL%$b7rTq&YN7N#?;AAX+i_2dWufWjs:lqJg\O^h;>)po8tBinbr>1aP8iPb+e+#gDrL#
%6DY"$AV&6N2.Tu3A_97M_SRNR_M8UXV33a.-NPN-8B19(,VD3sph+rn?P)+Br6#]tSsdLE>6,Lo"U=.<i`#nm!$U=F+Xpfj-'/pX
%1pNWS`I(a\2AQ`^@P/@:gYon'k:sJC.YHXR*/"]2\saob%pZ&T<gaOK3B.$d[ek*P,Cjb<))dJ+Mp\AEZCI%\q0SD\aOb"0_.TBn
%\Edh[jk@33[8fEf<`B<1JhW0L,S0-uFGC!?7Nct+c/^_fG9dm]i?X7"\fiTenD=0A$ViHfO$^56</ugq<"6(0p.CKuG,ueYj4t.g
%`ho+1kcKU%!I"`8L1<*(g1s)L)#>Mr=dEt6rD1tOi3;,@OXXfb.ZV^$aJFJB96<"@X:jL5(!.kr($YLEaGA,QP+8DL(Br5WOn2GW
%>"nU:U)UB:<m5TJ(l:^kK,^^iGeNi[&U237!!3OLM:Z"'9Fa1VGqWtf<r0CZ6"Ciq'2oAU,Tc0P+]63))4W<L,'X7eKM!3E;eN68
%)5OV29<'EQ%l@F(NDOB[R2+\d#Zd(G%5DDkH*h#e2i''pHnH<,&a0K[3.,Qi'Ku'9RR->2dC$:HQcKZ_ISL7>gqg9eDX0gpVRs<p
%;(sn)_d(5R668H.qXJk-pu-\@a1(<fc)E)J?8oS]dVlr-d0^fn0t8/bI`%3Kmnfd#j6])XGX'l873/=ceZ8+l9:]9Ij>TU[>6saS
%c%/;2eVTC+>XdrL&07lLDdlO3#p[J^:DTt!81;P'#W*gX=9N/,3(Qo'1_5;#F>eeM)"kJuZVkL6mgW#0D_rB5eS1%op^m9lZ_g'_
%UP<4g[pnHt@V4K@XV/+_Xi#2$a.ePSe%XSc4a.jufbh/6I!9Z\\2jh)M.UX/R_7A7$7pg1cB7$cn*NuRn/0$s(">&]OBY)o2IjT1
%Qe!S$VJ$-ORKeVRf\g2,O]\--8^]/"O<!ZTHqgq+8O6V[:p_`0%V`&VIYc/3[N\jcjbh2f`JB;[8t!2H?C]/<lJO/Kg6nq)M5c0E
%<0Yoe;[Fi;kN]Rgi-1>`;IFo%W"e0P@<QQM+K@A=T9.EC*"e0Xh)HU`XdkO/l`O0lG"?X\4X>=)+UMq>A3(r`3[8q%)=ab?,d*[M
%=cen9Z?f"2l5?SM)2X8-in)IHm]0tGmQ)Sn7jP8YOk-Bc;AWskD4M8\e=s,Vl]S5ZCQrs@\PPUI,:rh7dCRcgGEu`iAR*l6Bd'ns
%pAoE`(M,>.+i:1rU9-#PYQ:RFH<_p^8.4:]B\5+=DL0@"3Wc@TVBX6A3_5E*\Vt73?hC:4nPjDS/4#\32''MaC-"o,4S2dp*R_1(
%KgG=dbA0?`891!U7_4qe_Qo77&A;D`,egO&K_j?#WaYrT=]d\JVjgtsk\/oJ13hlLJ[qQe\9V3ekXrH;YC9G'q=.(Q"%P(RfC3?s
%g9m%I#2tQlCD(tMI@5q?cuVfiH>*q=$6'#5r"I@3[3B48blrnu$'e4$N=/jXjXcP&ju"lXpa[37>rsts#E.p?N<`6--<>g4O>Pfd
%e](dG+!I4;FCS\64K0eXRE87DW\B90I-S1/0K,5Q`&7p<b$GZUPW;NlaZjluPa4;l(7H3["OFE^-jGk&.lTe5%*ZQ=f)4P'//QF7
%_*l,+18MQ4G75m#4ogA@C*>Nslka";)fkcUZ+tb02r8d#QA&rhs(pTf=9[.1I+anFhog,(OAk0b0:D;-W4ibgX+`4$,I4tC<Yn]^
%f#/7sXe9??i\b8%F&=2[;QR*W$(;d_IW0HmZ9m[>,ed*4fFq@ILPG&f"RLYkMSB/3P+<$EG*#;diXNhc1WA5V\IHs3Iu:+d:-"/j
%l*Bt5F:":ln(*@"\hMhbVDL?((s=.um$cPWcDh3:5b9M#;6'p3MLL"@[X7SbLPrL%"CTTeWBc;D"]8&ASMcNnP=0l[;7QARS'sn:
%NCYog2hA)D_.J39m4E-=nZi;hM`A0:TJ=qQ1+/XU,9Ids8"!$t8iBuZpki[1mmXPBfUluLS1<EmC\2\^Mm/4Y-i+<:5&`Adj>6t5
%!7X+$\Or.kLMruV,6O_`VOAZ,1jEaHM.4hklYuu=fUh-U9Al3[3t=Gb1RQM&Yc4_0!I89#!te"//@rOrfqdaRU_=N@Bt>K48uN6k
%&1s;TLE."h;(q=</&c>XFMm:b(1Lj8Ij8.D/bd_[pPB.';T5p&0eAV5kn7N$34)+iI4X)C#@*\WfHT;'?+Vo^cWfU>?`d"8\d?de
%D_uWmI[0'm=c=Tui:g0c*kWj"b/kA0*ih^p5(_gM(gOjFQ,9tZU;2kFA;4@I0n;HR6;V8gpG:Z..Ri;lHG]l01sdXil"=C)1rs8M
%:c07^44esh3co^t')del\2Z16rrp]>jTS0f8cYn(#8=B]%Kr;N<cdi#7!qPlmf]:_.u]uPc>nF]Ri#pP)1t[#gSBJJ>QGZ?K#l^p
%,iV2IU4<96_?SU][rD[+BS[>[P!kIFnPQ'L0T7\p-sG#<BM_23\!(G\$CGUn'-2RKL2Z#T":5RCD$Vg$XJ%LkolY-u*os[Cf5%i=
%+<8K7aNpos3iOtB=t3]IriM:G\5aYh6A'3;<(e/U^`po*EE);e`$0XB2IE3o).$!>Gir<]0*ibP;4:#\@E1MA;Lh(D0pPdm&W=ZU
%Cu:nT"jAi^)4r/WQUfgIl!'b>8at`&G=AWUOrIb#%45BSfi'E<2n7*7[V6.9Op.bLnk'W,nFCN9a]m-+1l34,hV#T^DVR^gFm3iL
%:TTDk*FTNgB#?6q%#T\J)jagJ+(aR>U34\AdZ!L<W2C8OmRZe<o#8P`MSP3B],)NV!>2!(3P8:EdgW/WIRs,NECXPX1NedYe>mG&
%X?n_!8u9OGmHIGI`C(.B-%kTo]WltZ*0;cC_57n*1AOlT%Gi\""LG6uJ=B8BNaUPf6j;<*N:80;f`T<rlTI^%TEAA#Uo4(i*5,Lq
%edQoo2oGpYDLI7X+F6eFXVZtAC2fWq6^sC(psF1>4%H_58U<+7n9-cS6V&K]NQ5A'AET7?!]-OqOCm;Y(MTr@\O7@+I^W?!$[*D]
%QG.&I%/<\d5Y3@0&h*img?BaT;hdai;/6q_$,Vf!S]D,mr#u101iZbEWOV#bXe\&#a;LS\DM%p).*LNKH#T9S6!KamQZ"G%aSGLB
%9='@c30'T&]a9*Rd1n4;aIG4C_OEN-\3q?*<!M'/$r&8,+:.T'5tO7j4ip"ofIt2;kQ!-;^;G<A"Q$C_iT^'8^jPM<Ka*?`SV5u\
%8JQgJi_)"28B?Sm5!*2b.4J$-[ncio7r)H+>lk]r$"Ulc%/#cL,%8U_1`pNa['"-Aa'$c'Y/!AW\2/i-IbpL=%\K/+8Bg]V/!Pft
%:h06]i:*:g,ZiRp^C`s+q.X@EZK0Kt^3c4O@^YDHL&hj/"a1G&m1tFc"-;K&`^t%f?L"Q?^QOWFZie<r(b_hQKS78`JO=eG*-q`p
%H9TQ/T5-G\*$Ic0#QR:l>RkiiZb#Yah8q*Y."Gjs!^OJ<jm`Z`+;kDq]nEKlA/l,C%@+WBX(u[2ee;PebO$0c[O_hM"6ZP?X,Xj/
%#NiuNEm^aqrN;_<+?.4+mHsSW3eM6?L-fif?VASmoY\<L70b7nfTO'd1-X;kI2\9H#./A?QEULd3r"ZRifc&Eecrd8WNMhoJ((ks
%?8a",ltjSFO's5-dS+J*1+WXX>1kRJ09f:WjP)u+I4V[:UQnYfQQ$,'FB(.<TTDa@BnjFPmB6#!cj<-P=IURs^r%cQTjjG-V3A>g
%N<c608E\DZ$KU<V*LRWig=W/`m@<e!Re7=M7iP04\<cLk?.!T2jW'b=Hghs5T^PdJSR[Sn?<c/WLn4`]3ks!-oS?Jj<N#OYKslEr
%Kc>[bMGYKGRrp#+3)X&0Di<W/@R@,4lmpM!F4,I_75*<Ya(VND\7V9_>EU1=,jYSADHbAZ1(1lqfYP_4\P):'AfIF8'i%+^)oj'0
%&L:qE017l`3CH:#&oJ6M)Nd\DRVb)R[a$.uH&!`Y0VhdZh0.(u%_AV^BI&7k5o=]2QAQ]uX8B,&Edo/0L8+E?Z4/m!MHqHO;iXP:
%*A&Geq_rF@Q*6Bia5^WMjrJ$6\;5AZhZCV=1i"Dn`9W#?`C`aA"*Oc=^5@@@U;X0:'P*LZKC@CFr/`B1ik(q-F@ded3*P19m!ABP
%W^8^(3`_+"k72Fc+To^#jP/U];6>I!q5ldi)m$1WdfMIO-XR1M?X3+[FtNO;D_5Eg\OX7KK=Y@`V4(`J*Q#B:V@_RqFO1hccsQDY
%8hc]MO;,b0QL'Qf79o"Vi_gH][)Q@?S_i;qfI,Hj3GV.Enl#%-WjMg]dOE#J>[jTi^n!Q?ru/q_-AgWU@ipsMEI@F1A^#$FidocF
%kqY7<N<0bk+-.^[rPZo:02`:l4Es;0a>8MU\t1H[;o7AIKVP-q24L)gdo>@,P[k8i*-\W&,:Xo>/%B,trlEc%>a,eQq0EfiZaR/X
%DO>=)7eQmWUoPu672sY,GKs?#D(Kf9c[dk[HMk:AUB":L7Wo853I$CD>64,G'4^)o-@q*7Y`_g06B[^0L:qVIkb9M!p)ma+6)$<8
%Rp92u$%B2.<<>`)j24lta3"&AS*rDJ6jp;[WlnHfpD5M"H=]n>;6VS$m).'%IP=@SY,UfSgJ,\2aKQ7P&AnH?+0FB<F*:km'rmBH
%5Z93F2p08=k'q`G$%:8M^7j/)OLS;B!<c'_G/0<[=E/(D(WSLL&L=Z[Yjjh15"H%O+ne#TaMUM4gH@TI\'m%)q<7j,Pn*e+("<>0
%G#srhbjP$EO_Q9MhR0p=GLRfjDODdQ2Kco_/bmqfgu]l+fHY])>NiX?)7m=-S=gdE`3*Xq1p-m3K7POl3me:g:Q?'`@`7\07WcU^
%bKsmAWi4Icc!@`bE,lIn`FBjdc.Rbq(dspLjVB3UWVg]I,TFeVf^qcpjCr0##a6`WMm0Y;>!ksn2_m^4:_PBX,-&jiTX(meMIUe/
%X=BlF;UD[]m3i-GH5kEm7Ie+@%q6Q6ioW(e6P,NXAiV+-9lcjD$\>]\DTuZc&=@][>Nmu[(Qr'>ra^H?^E8JeQ*+qc@h-_)!0.XQ
%T_I^e`uo7c9-[eVcgU!5CSRNh*hC&-`Z@$.J&*iLi>>()gVFrfjF@8+Woda3iZr2Ik&`YiHC.V'G2YFeW8H=h;#rjXn$IsWK0-Uo
%l<-8e+s!>\Nb$*09bX[o$bN?9W7F8,&l^].EgMq[#P\+T?15I.Ndi*PV*<qaLi]O.)iLY/;p*MU1d;Z,;kXI%7C]$VP69L`q)iYq
%=H_W\Ai>VkLl4/b.`XfMpVt<@Pr;)iRgReE&DRu?nh.!?Mk^EcLc54ON]02j69SEG*MJHDhAX<`KJNI+*n`DF]F#Xi,]ljZO!gCr
%!,5:hL52_9XQ-P`o"&s3[Kj&&M!_]R(rIOeFiZl89mQ<ePoB&[dVDd"TBdfJ8&$d+dN!ARn'b2Wf*CkK]?SJ2+kg+]GHAHnc01ji
%_5%*!J4"#GNXRI'F"8i7]m23hS4-*ul)p4s.r`T:cI47gEk!g&EPu-R,2]T*qBb!']'HA3cOd6X*$"GfY*2B_c^`A%%WsHIYb;4u
%at05\G.FXA#dp[1R[grae(,.^oZ&:7\91e\EP<8n9'k\UlIARsLbPLN.Shia]%9*2oL\cJ+qeR*nIESnj:Cde_ca0$HNu&pdT9Ki
%Ya+\1)[u]3mU)h1Y?B'pa$:TU\'e.'I>uI9+;u25J;qGrKR7Af&u>:oDFF9+i8?WjeQXrgj>?tb+bl\%P<IGa,F*=$I\T2#9a4fe
%6tp]Ha!$Zf]2Wh*B[*&_i28N=%OdT+LaWOc,FL?WF0,C!4>BDY[BP]9a60ViTM<\'&XHf\Q&40D+qh3Yafs@/(^@6uMQ[]4!(i.M
%[q@C"2LTk:C8_Z1Me2$bm1NNY7"&.Cq/TXP_ZpN=%Kgqi!"PeCNK=`Sf,H)9dW3fZW0TR(Tr)F0gBd$^XTO0eipG%9IiUDC.l-1,
%**a]?L#,/!G3LJ'"-W<RYic,/>9c?EZ-HKagmXZNL'k3$TMZ"IEY.OR"3:jJkp,DsP(R#I!.]]%>$U*dVBZ>3KOX`*`ZXnW;3=>X
%)HkPLjp`C9IL(e)iIDKE<$?#-kNPF((D@`sP.U&hOFaarA"`H*K(f3jV]P98</c_1_A8F]9VQa.d-3U5Z8oi>S8&3mEK6cd3#"Bp
%&jQSM?Em>bQ%HlSEP.E4I1&K!F#<QkBK[qTQS8_:CD$XV$=4',o7R%i%/;9WV*trbS7LRZ>U-61#;e:U)Qga'8`kh,UBhmCbN$HJ
%U(1J@*6AqM[)^XfOV!$kHW'@+*<7;t+o799OE\0$]j^Somoe.M%NLfAlNRGcF)m_MU0;!s`=VCplP'^u^gY6^9-#m2n[@buDOR@=
%3#)m_"=P\U@J7$?R2om%fcq\is5.+&qVTNSIjh/[2R"mhJI$><7tBLeSr)R.9/K?,Ae0[eTo3oZ"]7L[KqMT="i*X9X(orn@H]29
%\>%C4I#L]j+t=??3Rn\(P6cGM=.'Ahc.Pb0X?h(seM1r!)%VE^`:q*qAT`O7i=Z[C6:K*EkdmU&iC16dMhidES'\\;A#X(q7#-G5
%_T\_TdUG2<o&?Uf(n;JE9CsEL62qX5RfVkE;F50hAS-@&Uake_j]sOemO!%-ac2F'DCYE:'\fiU=38@8Ls`lACU=J=L&jFB^ML8=
%ICt?C,NQ5$f?4D5Ko4#0+@:HU.=i5c1>15P#2tSUXAhNt3,;CQUDChNJK$<RN=P.ZN,TH_gX7Bi&7U;kd=qb)NP"<sXq^5O.76:.
%3to@cLkX<p)/`6EO]dr?9oO-D#N:2@X9;Yd=eH59Fbq[i*/atL\k'\i/"E%Wi=ci-LrorW=sR.,aH9+1OU$!,<du#"WWA4_iR\Am
%ZlY'Hd(F"Hc\lK6G[b)`Y5Z2\QObC'SS"tdMuRY@)3P<nnG!kWVk6p#!g0!N'V6MX!prdX!oUqOc1JQ(85R/%K6GVLL>M28QUJRM
%5Y(/Y,%'#"lmsfm,=#2AU7fSi**d/]=\aH)!4)ZFeFPgHX[RWE%T-jS(rdS!F=,EZJgt)\CY^]7"#&P25h$oS?nU4gk2XAE\0MZ$
%5f3.;Do.Ns](&>=T1*52hL\e/Roioa7_<*MM=e\i<VWkr<[9^pZ`(J_d1>ku-)<:*iZpaVUX,&"/FOs_&NTEiGYpp\#P%D=>gYG&
%l#Um-GW#fI]=p8s4u'utE7b^+$g*.[a9@DF,6?=),gH\1,UFY8foIZ`k`m4FE!7e:p_$m`[;\-%FWT"&GB)KWCIug))hQ85OW_bl
%>@_^,_@`[scf?@/.rm@rb/.3k&cqYVJbWXT>PW,GP6SCMa;3#LlLh^M4Zdalp`I)R,n0j=3%X2Ld!ZHX:I=h`aD2;0O/%KC1<$R&
%bZqR:BT*:ts&gO0&d+U@;sbLG_?#k=2'd0I$onAT`=\E\<(Sa*k8M3@Zo+h-(1I"%6fdgbY.aBDX1uM!0QuPM'j_GmF#o$"Ut-GR
%c:3GreuS@cd^#n$HI9O-`-7%s;u62+>]q.+mLN*I\Y?W)&p0P'I\;sbfLV*U7ZO7ZR)l'Dmbg._-tl'_Um9g/"5%?HZ)p4\&hMoH
%$,Vk9_Ma.Ai5SmD4L,^'UkP0M$nE,`cS4e1Y,/l.-'K/%g6#/O/`+"S^[\FOGD"t:E_NS`]f>PF-ic>9l=r?4?C/?KlfVAr&@.$T
%EM0Y1Pf'X?7L$0m=>Wm,(uGs[FpCUXW"G47APUGM0\UPDFeIFQAu$U((,[ZT.*Y>$pkC:RN"NAcABkpO7bgD\2Q*&r1qO!@LG"C!
%o#<,;JQ9S/:A0-_%i(D?"J.$V%D$74K.'>F)6&-5Kn`J;0V%Gj<qVV#P6.ETT4QmsE*s69CN8&fdS@-_;i]uX_Cnfe(*2U*[64l-
%>(#2N1B`b6l:(cLLtV&`$]k!`=Z^q9)%^`Di)nK+P/d(o=4CI@KHG'F'Q$KgCc0(f0'ospU9W5;%19GYe"mI>A;DMm$cOM:a':"?
%Lmf[/E?ICo.FsfELM'SAs44-aFeQEH-!G_F`V0Sg4jRP)2I3ajKP1Z-HtWY0Nhc!P;O^Lf#!1cB8WU@T7nINTi=/6:?f=M`T@jX`
%!ToDS#<07S=^an-)&k.o-aK_"RWcGXD2ftS#YI?a?PrMi2;0ZS[^\HVm-H`tc7uUc&jV2ioZb+'aI&p`kb?ADH*(B("#-IU0/kcr
%N/"A0lpA.][il7E`fB.Ep;MceV\IV&o'fPnWoC&?>7;;e?G@sY_?K8lCTEBEg2b9`9bO3HbFq+?b][\gc7S0)X1d/c].S*!+:9+a
%Yt:f`,R+6EAt?,X=]>SDQLH5&N3Z?(j-6:V7PQOT<KMdj5<7K2aMo9=omQ=!QWp)E$SrLMe_EZ$EY1;mEBRd;;Do8DORtWflp3;$
%R/kf91:FTq%nAdo440If2q?&@Zc+f)T@l\ab1(tnm4&F'5,_1ho%AJ-i<Fl`$Df`C1."k9E8mcBOm*A?jPisj@hPk0Xf@0b&Bf!D
%YICM6-k&IT$d"QbRm_0RY([n9cGF(TjSf!jQhZWeW)5jqdH;t"!224^#`r$_OY?0l;kNi2D^XiYFc!/e1cNi(SjbUB!esgk(^@+%
%,_#rIO$*97mNFQ@V$85hW)TVQ#)d9)'e!W]#'S2GiN9EhC>_tAITDH=l\p^m[5F45pag9QQRl'GEqEJXeF$na(ueX,q/A-i(E^qj
%;9bmmL@Rm<2nX^CGb!RSHSo`Wk)rsb:Os_W#<V^q><E)(?>?nP-mE4a2N)ig(#(Pn,cipZKOB.cahV'umIBOBq`p]k1!J[h97@Z;
%R96KK%`,s=f%-D*%"!ZZ?h"c?ot[k^Q50>C@<-`%3+3M?jM;ILDpXA-;kOJOR-D+aYCL,VXJ6ClU-f*+#79IT.pM<j$c#*.P)"k?
%EmE#FLl=%?Rr^oL(c_='c-LVK<F=*CT@Eg;]YpW8"k1`Z+2V\;c-5aO:tV(B-`'2sCLE<7^7qZAGjD&3k^%2^Y4479@jZ&j>;>Bk
%XudTS0L-b=eEJQ:I0tD5.h["m*Js_\lL;7h9@3/.Uf]OE/rj1bNrO)'KMdC3E.Eu0fmlG5Y@o#6E"QE.>LfPf5=4q4G/P`%-L([=
%QoJ9[Y^s/"RPB_/F0lHWR*uP>E$GOcgaVCg]%UQe<IJcKkSAg%Rs;ofO&.t#gMtGPY]VP*>;13#g"9A]>NCMFZC]65o;VpG2R,m.
%HP9:;#b(DAk6[r3C*onE"hprn=1"1l:1I9Tp^HHl8k)g6B]0BrPCNQ3eT/K<(ptdmdC1'h(!>ag8g*<t!'IMhF]!5`X]Gtm'sMQB
%!4.eSV=Y.u,r%G=k7D'H8']G]'9:AEIi%5tlm\a^W5rJSRa7q,b7QAV!U`$A$$3JbPceV,Z]7h8R0u]R3Z*8l9c_CpjEiQe6;N4*
%EFF!j1fKJ<ct.?qi:hA0%oU:K[>o%)L5T5379ceAG(Ai/WI8iB0g"E2EC^_/%u/`<F`(SXBAcJ0qSAO?kcGI-N!f$>jMN2S>Ek6g
%5^M_FYrTc[4g?:><:Kt8Wl8_f!k=U6^;Uu8(Y[Q[c0\b;8EYNG/6.=2.r&Qg[O70I?i>5!!nhW-&n<pofjDN._OR8@"Jsen$[VS*
%%D3...p1RJ;8mu`fB,W3<:(Kqc8mlHfR5`>=_Q@m"%Yt]iYSB!7:<GG]E40JZAk23j=3EWn>=XB2L:+(6rGP)05M%#L;Y*9WZ6E3
%#[u4]Bari9&ZO-S0sYh\L0RXpKVsc'O"G'i>VUcd0$d]=?VEX1:4jrc,FDMD>Y:Qno%.jHm.Ft#//Dcg!;c.\:QMjMM*W,`SfRqR
%+adTs:X:%bBst@!qq.0GF0<kW%Ol28&:s0=+0VX"o@,@;ot0&;>Y;9BJV;'$=M=)mr/j.mdNKa1%)9rV(iF11rX0!B309oDQ6;X!
%FRXE)a1X`@'Wr/o;K@XD3Z;?24Juf+"\)qJ3B:P\["cpTXROJY+'/bMC+]-O),0%]FYp6_^nYJ.UZIb;Z(7Y]KJe$(c5$C4VJV@:
%W)FXG2.6^YDjU")!GJ[m*Zl-;0o5"o$2FYR<-c@!;76=Z628mNH_9%O,t$hT@012$.3uNWo>q@tI<EK&8d,[2L*Gj.U'26K75SN+
%8e("*:+H)a8?@ibJsIQ_Vd)S?or3B6&%o,`qu@cSmGNN-WkX?YmY&NG_b"&O6c1TEI$HH(G^Hk;T'oj:Z0O[9i)G(F._&ll)dkH]
%k)Ndt,(N3j$%ufA(e&V3<Yoif'[,GZ`ZESdjm4$<U+Mo@RR?B:3$;.AE2'+hlm=tiNf5!BX_%o\H`asUfQOF*(P>IeEf-'::%q]N
%%\uY<#/gEag"X$%I$3cYRHnq`"AiWkFEp&f2NG-%N`q/KQ%Omikhs[$]CK4S9o!cWQth2+a=&V;MOpW*C%TYoT/I(^P-W01@Fh73
%jZ1G=f+#8Y[R:>B7]f6M:g*XhbN[Y!AVC7P8dm\q*@*JpG;1FSm5e"lS);,"&>RNR>05KeKEgt$0L))rHM-f2RBr`c%fl=PFoh!8
%=9f'I&,iAY,[UbbTr]^6)e;O&d@l<sVWr!g$&?9T_qVJ92*B]rU'Q4q-'*`"Ad6:cpSa5_$lH:e.rRV-0K;8l1;8AAAK7dT9<\mV
%[H@SAd^]Vp.s&`$![%NDl@+,4KPf.a#&VV;1`;l0<7R2T!<0qk=fU67#;-DJ3'^tOZrVW\?BB4.q)q'Kl@CH-1j0GL:Qe93SWO!Y
%T,hKmn3S;*J[t-t'uu2<j0T,q8sN>`<f(g*aYO(U_ZE>om3)N\,Td/aa#HJ7e3Zj?Q;rG?A^2i`^h@T/&m*t=g;C'7:ORYl7mlVW
%d%WG)A"0Ye]1]OS]P&r*bDo3QWc&[2FX;D5#WG@7M)r0b6p(cpaZ=5XP^;sna)OPO>D?t$d/tqLkI]UL;UoVtD^=V0d.7KF9K7eq
%?_SEQ(cn)CB\@9'htqLa850:s%E5Q^d8<:XB:bQT&Y/#<EoE+-__WmVW:r@&G:Oeg%s.)!OBXP7h-O'QCqXYl_FPGXQj+Ese,XjC
%qSo$6GaJ?JqdBMG?[U/pY*HPH8R.bi2dN[:-U;604+eq2@;sUc<?+aj%h(H9:Gu68a_FK4>=N$2c<afS,3?n"2!.$\Gdh=Qi,%9R
%bO;(JE3pMrQUS?B<K%t1"XX(.KXMngq*'.E=?i0VEurq)*i]C"]?5O,%Tr,^3sct[ehkZHRLN0>2?4\4)>6K5.ikatlR8&I73c=S
%Z]VM&Cj,T`C`2RfQ,C0!rSl=1`o5+I6&'6l=e/fcPAC#.CDcN,VA$UIPCIr>5Xith5GE,t-T8&1)kP54d("DE]!^M/)@'rns0imO
%[ZKSO!T;qjn8afq7jrN]-flhZ>R./k7[9&Q.K,hYQd1bmF[T5l"ajH@E7CtT1D^0)!gN+?[Gq<Z_B9bMZ^>RV_\a4j]E2h#S@=g+
%0t-EKba#@Z2RF9l^qP1\]nt?n)cNtFP@%Rs_8u9cfpG"P8LpgFW\>,IU3GI?@EcqMf\,8(Y#J[cLJC+bkpp\(&/j'F(GF(>HgMao
%3H$LURZE@:?G_"t6g&0o[9tK!a_Z1FjN9.4b/S&a8!Yp.#[<M*TTesb!O]>UGI/t,g$>hkk&MbP=-GF;0Hq=_fnJnCnFT,9#ZM/U
%F(7;3+Lkr[BIn%C+JO;joefgOj9iFtOOmT,:KHEY9,cheOB`jLc,s8X%K1U5Ec&FG:Ip=NQc(9>&/eEJ?lNcR6A(a0@[(-O0'JmI
%`M?O'D0@=<bQtrme-/QY>hVA\p`DP#P"Rk\MMK4P2I7&[9*!ER(H%-r'E:<SX-45jBRF+H"A\H.4=+JdC2$r!\;?0'fsjXcR&Omf
%:^>Vtc)KL(/!=;/Z@j<JCH>.Hl2h3`@P&p:7en$!plE;!&H"1Fn-BJHM#%\"Mae7S#>6_WYT:$XKdHpT"A,^)ab*l/'1RErGPKmn
%K24B_U1-g$1(gI<q_*4SBGi75[kcA[,Ej^nTqQT+\+2LX(Q$68e@l2PNf.iAN1=6Z[8ep&W"lNdMFg8X>&tB>!<n=6CV4hW'W2/*
%8gN$fbNPrVCeI#7&sk!N).n_WD@G^pg@U7s=">!0V;b*44mVNOGXmmJ>iN=*9nJ8q%?XU<@0bur9qW6sZ:\1@;tfA3fpF)X-tK<$
%XFhW#<oQ3&^rj4$]U<*4@m#>ZK7,)%o[c"B\adCR9l>6FUDRel:s2S;J'ek=/-3Lo8:na3K+aZ]Adu;$;7.l;LC>BFM,68lBCbI)
%M+Mb\lDnRsP#-V=$/77D-l9,h0i8Vp2le9'^s+37,Xf%jnGos"#5XYLVSE5KHoMMb8Bq@&iY7?R+RM86=baaQ'XN9Z6(-YLD/,:a
%(3*"6"b<T4%aGEB_4q75p(RLr.[eaG9R=!,K53r9pa\Z^YjaZ2k5]caJ\ir=7G2su32Y8"A_J87G5Ua76NJoC]`!Csfl1JA!>8Cu
%a)P`"_K4[C1'rX7N!hg6`5</"XQL/GA`;(U(`EHbRB;'+3F90;pPm!`<d/1P7U4u4-Wbl96lImm%H'jrpCu:C0)RB,@$qCsULo!h
%=3//qC!<jj@c%`i!6l.\A.2BBf0.JU:(VX^+Z9oGmMoD)B*0*q0u1_fU`MCg8791lai-?7@PTLdp@%5a"q.6]XB(@U-dmOFs4h[f
%*Bn\(&At%-Lr*.,%kBsM=:5fWr9e_4]q9OJ`kU<iM1e`ePYK&e6(m9<W"%`A>.Y2P!b'!V?Z>Z$*&0o,1S0,e"3,s"0NiBY7dNjd
%PmXCV91=Cr4n$d>N3[PU%C%Q61*A*fAtmd)f=BlS*$^sM0P`rST%)K6+;2q#3/s45"]9$-ni9-A)&N]5A4do*a2f[fbEX4q"'@;X
%.`c7b_IrrN8IP\<$8<]^(6tV>Z8gc-X=+h4q!eV^A\"JLl4mF^$4r^Es-)<#mO3U\a<3`0a?oEJna(N4c_[b?iZ`3Rb]PXreBd8D
%XGlA>K4K]1V%j-G!ajB,bABm\fF4fr4^$UI4m]+>"ss=!)P^H0$oh-4BS/t<AB"#UO<E`i8[0VYT(WS,Y7TqAjuW3Re&H[F`X9aM
%A2.`*c8E]KIXMHAfCnZibW=AG#q)[H#Y5\=8C'Blg#7"=:`'VB1A;%/cs^N^!6[Gb7K6/gUW[B=EemPf5pI_/p=SmW,i!-+@u_oI
%*"U:Ul51_4V@pcT>QMA]OUFuh9Asoe6bp/<=2L1(Rc'VK:>rPq'huq$Tfbg,>.Ua07qd#h0/<oT75u8B5"1@eTJ`#qd44F!W6k4M
%<qVZ:/lbIdk.>/k[8*_5<,bOWeds$"p(p'lJbU9c9`fBVN?brIkHP`F'0'*FZhlFfA8Pt%74tnfO;q:2[\9f@[Ya)iS(Hs6E]Te.
%6fR[rnjrg)n/;QD,is\dPJ(C!_^#>c#dO^>=Qh!:&KP%@U6(Iu@-+r5C\#Zm"2G=0r/3Qk]]'?oPZY4nU5EJ(N\GLDAI7rd\*0P/
%]-@\"693A$`g"9L[&e<;(/:EW@Z-cE(lB0DGb9Nk+^++.3/MB"'Eb_AE!U`'N!%$eKQRn]#Iu*q;iuFias-FY1/`(B''\tp<B2.[
%03dp:Y-bS4;0u4bSoq;(m9gr^f0N*6#T6]Q!hc]Pmfd-SI$-`c&kA!=m1Jo8_o/&n6=g27O>d7UZj&haj]2#5UHsqC1J8Ph6[`$7
%4cngHU$<Adr/(B4TK2PMd*b;%OII:Tm3)>'EliT<!pHR\apr2))>&tK6k_D^QLr9d[)tr=Q)2O'`#FV=c"GFTOLub%9.]^P<AZ&`
%?o1m?,17bT*t\NkJj,-k!ELiL)!aX_`W.?B=<':P7$D.R"F-"F%(Mr;f@$B0U%,LG+f_/R7MhWTHE'DR$3Fm7l,NRF&M$H.7ta62
%.>QE4WfM3Q1_Hcd;D88"*Y'DGVkH]i-EmiJ":fBf<([!Q#]Pon3M8)"-7HF;,dn)rS-i`eaBWA0%DTsuQ?6VM5)F>%A7uQ)_-AMO
%_$a2f7:n&pDs$$VhQ!,=p,/Js'fs'&LSVmAJfH_5lflX0o(nnF2I(H(n.<Ngi5,J=1[GL$c1lmbgQr:b1X.'7!\&)_6PcVR?je5)
%F4jU*N4&sVdL!e=8LT5EKN#)t3'I#sB?r7lOX3mN,iosnqm\g#oN!&W!WLt%[Tu@>cf*[i5cA8g1>QFD_5A2FK8qETV]Z#Bamf?u
%@IS5"1^Rgt_Jg+b`*O5=IP@j[=qm*T.;BeY30i<m(CA<*Bg=\d@nJsSr12H"?BsQfZQfZ!UhR%NMn*nlU4iciNTs=TERr)Q?;RVh
%[9[O$ViC:X$R4Jj<cQ$eI$a\/\ZngW!a3R6X=#sH)AQ#V]i^WVUX#W0l/D@bX=@)_q$M@fYi&V3qCV:XTqeoIW^+bMHBA71M7jc-
%?lD=!"5p6Pe0cj%n]f1BEV(^G(mSSEGU7Et6'1J6`0c;1)M`k12>U<6(ij!UGlb0%0L`7fJq?4_>I.29+JZGn1CBd/Oe=`Ng_nX4
%*MdZ40j>E`+,6Z;-+Q]/Y,(5&%/'/'U1.aGJU@R:2l"L@*9AOl&+k\?:$1iM6`HP+`0eX<H&ra%1a!Qo'Cr(Z,#K]N*YK3UL]D6G
%.@Mfo#$ErSd7(CUPcB)?rJ$Z\IG!8k5uL8=U#ej\4b8W)r$.peY`oI<lso:cQ]TDC*L>ZuBXoRoOk@j0!+%7G'8?tAM4%0m8Y\d!
%M0m&]ahU*$\_+ll=P_-<-"8]bO:B8>Ue=Wei*5^2^*rtD>8rZA,jYMbF9QCg`(#WO\jk)@r[jWs5JlRb![3IC9OM@LTQ6^-PVd&1
%7Td*Q:DS27KS9OgG%@?JKi^^m$jb;qCD[+>Uon)k9uBpe`!n*&9?g;G9.`"?K`roQ+k%A0"S=&L_e=,lMYkugZub.*IqrF<>6lcK
%4+pu[Z8?CV'4)1;"H/8?qu?&4,8]i!l#gAVQrtJ$5)]miHX%d36OXR?eU5Mk+`0+M6<I]J8[BP5=\N(*j],37&c<+)d`l-G-jlk?
%O,2gD3R[YEo@?46SfKjB><ojL?;[B8_h9;eI&iUcT)68o8@k>00"5]6Z4o=+.%mLBrp[<>21foIj]6>`6g,YGiHijT!?UDRr&HS,
%MAZuXbq8*+1[pU4/Yl5Lj$o[WX3/Xb''Hc'CI+Q&l")9Zimd=[;*-D29<D4Qo?`<HRZ1-k:efE4\LPCKR51Ri5sYZ+oAUo9HEu%"
%Gs.DjA>KmX[)ja)`OeZ4!S2iCqjuaQ$rYfDm<;kT)<%j$IdO.(5Qk&F&:=PXj-;Jj;9't3SK38FRI_"e4@p=>nDe0jppJ!n$]qr:
%^./1H441[N6tKDS5n2B*d2Z/fK8W,$9[odbp6D57'3PuJePR2$hC`Dci26l=XS)"3ZW'@?A<fU:iGF1VUbFU(d%qdg-g0a8TCXG^
%5g<Z@gDj3dUj?U18A)/,(kB^B.;T&M:/bE:,*gCU3rlOKKmc*4S*%ZqK%A-G.g>%^S-CH^>c$'IG#s<\nC)=XB<mS.E:GKq$:2f?
%TTq-Y-a4'dDAD%mKRCah#[EEh'.G306dS%i6*dO#N_1*S]>3F.m/H,aJL2LF!57Jm.fg_#Z)u?`<:/4%]Rhr"Lp>\#bn2*FTc1`;
%8MW7;8d]%HJE;HF/K0&"0VX.CNtt=L?s%.GZ,T4*-,V@SQmEj[M8Y5UkMit&\-!*FS+[j"8jOYXE1?K-OX`>c=a$$QRUpX[6Alif
%+S8,5"5,#Y9-@(Ektpp>P"d&aHnO=doW)B_2;3[pQm>(WlZX*h!jsNJe!Wqi+IFY2abY34WEA3m8np?]gr+0lr4SAJ8gJKa[h-_<
%Y+Q2$12)mQ'2KVTmKHfg.2WEiJ!--%$j;VaH8M5dYtHT>:hZ\(mV!A_j\Dk<F@!SK%C&5GigNVC=6(!pP2/t^nm'im%UBB7UEn+$
%0@:mhEsP)J2%c6R!:iJ3)!BQQdt4Xe8Baa=OFCa9+Ys/IOACC%!BL;aLN"lTIp=d=cT4FBETJDBR)9H+Dr.f&k:NW[W&4hl.237*
%L7XZrOc]0?LUp0^Z3\&W\`uf(2$5D0L^ZcQDd[lP/;JiK\4J8<"HR&k"jRD85G_*oVqM.uPAVS0RN04sBM9T1H*(r.#:F[\b!u?E
%,Z/oR*?&tP@=aXs[#.1EJtiO#G-+B]$jLi*oLSi&hE80Vln-AZ#N6LJN?L!!Hr-:k%ZW6<U^spe@<)e=0-Q$3YQX<@=3fnTcBVEi
%(VGLVlkk7DD@r4*CCq%[%.oB\=cPYS9.+[f#W'4JQ>[hSkaH+kM61[>,rfGK!F,-,GU=SU3%qHZq+o+c(\iuST>Mrgo5p&i+KQD#
%cAh-b.__Z8YdIh_J(II_<b4,HAY3X8K@D#p6aS;?G=YfZb/7WA;L-A%?Y_:=`pVh,ieJg0'9,cFUcc]8`fp)!^Z:]0[Nu_mK"fO"
%/E&.j(Lfakal'n'S?%6$^1:nZJR`Tn1A?Z&L-/^sk'C!a_@B+E(bE#FXWnXaL4]a@TeM^;&Kr+a<FdL?QGufN<^!=q_0U!=\R*7J
%_Ce[X&>DO^eh#FX%7asE,fL,<>")3PcER=&"DD5&h22Zh<:0hOEO.QXq)YemfoI@G%Zmn86=cO<83>mR+VFfV79Bft*&`4-<#Hq_
%oi&RGg12WZE2%NG^*0Kr.[S*6Cma@Y]0]G*kba^A2@1FiZ0]Ls,,HJ<G+\4D$3kn>&N4Mbr+c#Lo)C4YJe$s4L'@<:HK@+I_,jhU
%mt,7$kQo.ViF+2R*HE#h#O>)>J`*\OX"p00BogLQ<j%s4#HuoZ4)VBqQX=3!5juk^lZbNlPD`oajeW$,6IGe*GGd9sQVGdHj(G;I
%&5ZT-g!F!6:'QQ4EQUb_$Tge?Ot8r3lC=\,8sIKn?:4/hDS.%__aCXN5b,?SqFGC`>Rt'j<KfA?[8u6.KooH=[GaS=2t__P[b>$D
%NS1`aOtj,uct80ZVDrPMm71G&]o8&/?];4/V,`p&Z'*3[hcs(8M%2(&Pd:k'=Wa5`<HbKEDiN!V].Z*U4XsaTNJ!B7#XTabRVlMQ
%mL3LK@F(]3#@=bYF(XLTY^3A#YN?>XlF<2u_3t,2qTp,_eu9.;\E[\.>]O\m+r+LjE95/)?'-EilgPnfafV]2'a`cP&id`O,V];E
%&ND]@)?YkOffcjXU>D!92$sJ%!C0**X/pXG:rN#b98i&NO"p,9k;Gf=)idY?e*Yn:)qT#.;gVN'8_fq<dnp[YgXFY59J[<</%98-
%o36@J)1."TSjstkWd6P*S&4+KKg`:a4M!C;42J$71j&kV6]<>-[[<dJ3c'e=8;:d)AZ%JbEU/3AU>F9L$MOW,ZsG#:C+;;C!H-j*
%_6`d=,D_+U4bdHk%'BmWhW^=+]io\s[W8ijD-;QQ<huLnY_t,.Pa\<j=bf!lM3MYYMg2>M(jrWe?&7(sM_*DI6kb;C;q__<7`Jkn
%7arCiBtB-X?EA`0d_n_OBl<!Y75f"?6mEkPfX;L4`3[/S8&&<<Fc2sACma:dg[1(i)Ag,t/^`i?eV]'>(t<FL#VC.&FG;"uJIFgD
%C:scr]n)TEU\JXd7M@,'V^8,?NS$1,m7GhJ<;NYE)SF*F7Y5A>fY>NXbgU?poVgo*b+JkPiBYbmUp:<H$":2Y0%c:>L?Fm(=aq!@
%+>^$0Ru%Uk"p[LFe?Dc]0[tn.:1A+#D7"UdI6,tL+54grkUWt\Pm]3@23F_qa@`U+)k,WPNK/-mTQ&/c-[c8Se*PN<Aet-"'lC7C
%_4u$DG+1r2J`YIS_r1904075*kGDI#hQfN5dMar)X5s*J's#bl6#9so=b$%<;VQS9YAg5:;uGtdbD!&sLM]U8"N9S)iE:]kW7E:m
%,A8T!1c)9ZeAJ*"8n":k5R@t7I3LsO4%)N+.#)I2<:jooX6P+(lW6j.(rJo_$=%/:`cAmG>Nl\A$:t+(cE[-'=$mUl<1Deq=<,i+
%i=N0U&0q`5)nM*Q(YiH(jX=gm:'6aAii&QM_s?e_Y"^,b"/UR+rIWG?\M7VDMB\MXM8Z=2-KT%t7*0%Pf\W8o0SHSO)NLBgluE;&
%,dA$d#rJeOEKD'1`O3Wbr.mQSH3g1_Sj=QNfGFeG*8HbA">Q6KA5+c`=oeo]?Nc/jOEm@NJAg?t=C0e\F[@s^^sQX;Mf[O%_@f$+
%jC\]n?2t$A[,M\C+jrC]ZfiKU#/??>*mkF93[0a!HNTB*T.Po2LXIg",fK(Dr/J$E(libn*seW=l;fmQ0A3amN\6ig608T.)]_cV
%rt2')-?QUU:!Rnj!2X0RBE2MX]-#0&dZK5TUXg6o_:M24KR%PB@sq"-]T5ck,K&SXik4hQ7+i)L2l^@f\TaI[_i,NY)GN<+q#@q3
%Zl_-9k.S1&'c@l.`1ThUpSa>!iT<DoYC1"9mOY\b7gs.\LB?7Qh)cDaPMKor%aeHcS.33C9p`\`60^dSLH?rhjro]lEA0r+H@Gi,
%ZZoc%&Ad%(ALlhQ]/jmM1j?]LR2.KKN/.MUM`u/QK=q'Hie'k,M0'P9l+OV>T4d/iK-tg^rPJ8dMRsD/%PRV&^@Ir/aQjJ9oBNZt
%2Mnt9#p0Fb+\]a1S\mY:iEWn\Ee[Cm=3>qHBLiWQ-up=2UWP5slfOcN5p5hD#ZuocL^gJ$7fh\eLa,O>KSbZ#,AE.sR$Qaud6noY
%\GoD?LS^O,efc/6X8o#1'#not9"]u]TR'1QAjFknas#6V.6).Q)[cs(9R9eIUVj,ga!!&l&&'57e<NHeC1PC?]]iA-':&uK<*Vm-
%AX(j(%\]K9bhUF3Ii*aQH)%hanu\WlJ;$-W"s?h(YXW_JFhE-Qa\?n;?J;B33-43jEoO:kRc2?].L)*&,^`@E:0+QK".Q\**C(d3
%R=k8NP)YK^$N3RY+<q-W+T8%\I^(WJ;*RE%hk/4YMkr(9bN-)*ISujrq]BC_9=%@OY7ZBgIt)HmIu8Pq52#0O""%f#N_@+dJ*]u[
%Md:>!"&1AU6&Nrml)512`@V,RA=_2+TSForof0'PN=n\]0'4OfcLr7XcKc`aP0ZXB^rd!jN"*!Q!,6/?I5`OS;jeMjOGqmQlFI:,
%<bc`LLm$ET8NSD@s'=M>a&1Ge0EY5i=hctI^DJe:66\`tJI7+FoUQu)I!JdGO#kuHDF%[9"tn^)"NUKE7^3^^5)RBkdpkKb)$sJK
%"#B?K@Y[!+U;m8DXG5,b[)eHhMbOq2<ouC<B5mBMdk7N7'jQ5Wi,orKV)X"u*)'u,HSh?6T\YE%bu\'F*'/LXJn'9sA,LV<HQ3ZA
%]MXlKBm^^WgqmW'e>ZE,S-3*,*utO[+]UV6T&]KLEub'53i<Rq0aLA2Fb%@3-W`'h]Aqg&>P$"H+u@.[%U<jH^a+il61V\Uh9$H3
%Y+0N8@u34C-Z-u!NY2pFcA71QP$[61IBH/(_oYNbWI*MYc$iSq^M](T,lX?h>bYc62FVU#)tF*cah!c/HsH[jG#@A0!N*SKL4cXR
%IdBSqW]Ge[616=BIU(b4(T$[.RGr`.KEoRr111GBYnZ,dF<X",5b)]]P=!dl$:ggq)2@V*=V46_?VK^s!j-ZNG"J0U(_GG8m*9(6
%TFk0);1shus0MH;4-h2EOl.&"5K%UFRI0_Vk@l^%5W=egko!nh?&qC1OGM#S)AJTkrdNYHf(-N#M%^IKU8#RMWHtOsqha]eqdoT7
%RcWOS<j7Cc_@X)&<4YX_aZ+rNJB/#,>dUL*6YZn]hF_1BEo67,5IPsHMJ0>=#h.dfD0C*NSrL:oe/+EXH?e.7Hu)_&^7?d,kj[u<
%Ej_+!^nOipkCq>f2V>I<RaOUN=qA(VYu$U-N3If'Hf'l"(AOZ4J(L5^FXW+c/Td78'dU>\Ga!c)P7\*^'fmciA]&H[lBTN5RPB"=
%F6cd!K[s83-h8aX5phqt3_1H8VH6F>nPnAD1.bK#%*udJPXU:mPPqkcS^Q'q)=/5[A=ZZka,*QBB<DLJPEUql'sS?@;rh_mX<$2m
%X,.1e-Q3*][k!2^@mZd1dJ5)=U0"/N]d$r(&3@]B=Q=$foQV`1H3N^j!)25c'>:Z`5<egDa$a:H^-48=mtci"(<cNOQnd70/-Il=
%*Cp.!4-R[k4Cu#tG8=[5*3mC#LYAXR[rk&NXWFH18qYfLpaMA6G,e1'U?2WC'u2>[ZmTA'#"W+P_dU;m"VQ?u0J,X6dNa#&9]:*d
%a/RQUjb[n_5;I+.i_0!AB%Q"#(2#!CHaQm%6:N<YS:2WS+=0L4]:;EF2l-ZmTGn-BA]s':4c'fALa8(`dIJKM]Y-f>cfQNK3Lp!X
%\IF=6Y+ADp+=^#VSEA6rmRFV4-.J3@,K!%t'jTr7GF&*.]-@GsHapa<I\-*apdp6n=_@lMGFF'DO9&.>ab%YG:KB<<XMBu\VHYg_
%G_L=G7mi9NbTk?/4Tro5oH^,*)JeJ70qZ9.G4UJG_BMtnn9miY69;(,UuUVfHKE+hPZ`t/!-!<V[,brlqILaI%V=Ef,pb3X\Xns#
%niQlQrmtAGVX>.%U)QVhlC0GNah--,Q(;n,8+YDjAZ(D[<-2hW;g%5#-I>uVHAR@hUC7[lk#"hq!Lto6N]NhbQeKPtZZT=a!q?JZ
%7qhtHI'aV2]\`p/2`;M7OKqY_)Tq9^J^;7(cP+FC<Itmm?3)*bf-4YV#N*8#HR?'Q9\!h&\?S$^Sj-J=>_,eFh!!Yn23XRdJm41R
%aLCB+j=#,LY$?Z`*-f.nB32-1g=TSQ<n)1,QEc]ncaSAZZG0oYh(+)Cp7CUdS+&6#LJOc+8$[bl[b]/.T7\M(:\2="r-,?uJ\s0e
%N<Wa2B5%%j?)^QS;QGSLfo$#A.[l?MN`Q+e=W;j'H;7Rfr&Fu8%#X7^_<Rt]H)_kg]_4+n9L\bnJ>98gQ`e-mn_#KLYLg[o)L%8b
%VHVNUibG@>7$_T>]VDl=;A&t9]=3eTb45*YPpl_5Okkh<FOUnd=35CZ^TRH^I-bp#)KPQ2RYd*Q9o^$t>/$X?p@Hj1R@GR;l1&iG
%2"T,$pU20GeEn3En1UMR#MBoZre?I=,kaDai"`\\2#A_]27XRHiMa1OeqYbI3DV;G=LX?LVqf>1m31@k,i#n;p8*-%5.Z/d4aGR$
%.q7+l)%E!_*aDdG_M5uUDmai#c'nKXm/H6l64(G$rpuPTX$Kc%J7f-[M:IAiZW)%nGSki0Ci=/e<$8X3jn`G'1m^Q"'"<Hr_&rWc
%eWIQ)/D,XV?[6gcDOQml3o+K(lj"ZoB@lD%-6c#f`X,u)j;2o3\e&c:rU3hZIk+YL+qS&mnchQ#XMJILeIK8AJudE0/k_Cg"jAr*
%n>PKa(.C=+\<1_.1"+@;7:eqRq%qTZ^NJI1G7Mib2t2"gEQIt4ZN%\MA=`U5om`,e7JZl4JjOX@C6l%+mJD,T:h<.?JsY0!],'+%
%gV<2uX(9&S[ic%N>@[XVMT#j%+hn5(LRjC.3eA[W5U#DJ!LH8AB>%K\Q2NtAMU>Yo:.9o7&ZVb+Vmn6FTU/f-!cllJRR(IpCg\0L
%<<EW1a9kOjZ?+?ULIh3&:m,SJ3A1X]FA'hrOO"t#=cLC)ZTQ`f]ro=;.CJUa7W`I[XS/%mLJ5e_k1CmBjLH@P5<lO>RTsR+*Nbpj
%'nXs<i/1+rUrcoE`]Ihj0Sq94*VBUGq7!K#)rV=#p3);rC4O"aL`Z5(8[5CTg*uVf^!sOQEEjK4I=Z=Ur7pen2o!+*<=NPKWf^M\
%lcr5%EXlXQmn,W"R.1XU-r>[N&7(tMI];A8MsoOGQEED0QP<DpFQg8#_ieXB0AH%[G%rY,\`47cLp'h]]1-Qk[iBPSjt@A4<`5nc
%X+P0Z@HcYo4LF>2\5b-'QUEF:mKt>2/SWW.:nrgA!5O.%XSa*cNXCf_&Y5)cdFX<VmaYd-NS85B?b>O9ltB)cp0pWplV<Tce^b(I
%E>GB^,t+us<c4(1;kcCTPXFP,4/a(f8B"?oF/sRTc;9UGfDn2dKaN"mf_-UPg@1`DIUpi'WZOR@*!Z>^q[[/B8o=(79V7c:G3egS
%rGnpW^f$BO00N11o'I!@eZIiA'7e_4\%c+rU292N;VifoQ=N?mp(4ltLO</8p^X-0O(H;5YJ-;T>=(3D\ak2+Bn=d?lD:=d'u,$*
%IWerplAj[YI[GNog8j!'h*iW0JT&<tcW2H;R=]F:RMpI19h@&>Z0h4K4@C)XB$8[N%TPi/EOVSj@F@]+.#8Vd5=)sIF<9"&_>qmU
%U]eZd,,L'L/G+Dl5Z"U-6`-kAB]9F:-Stg]BM=(YRDd0$&er5Q6&Hi$:7$bLJmuN6V@ik_dB8KPpMaF39I,.`=0.qp_N6]#)FIWX
%QtS*Ld8>k#DVYD[CbO`&Mi,MMeBTu"&b$^?butFnVcU(#+UHa^MX3d;Wu$mK-jcD"M]Ad4D+c>3/@=4R;s9$8s%$<tXB5s[Gr[r(
%+2i!<hD+ZV5Zs$%a<P5#T$p'UkU:O]OSL\$%4UiuCK(oNlh$])S@I#,GXtiH8"\5N1!$0JN!'N84*WV7Il;[r.U]h*pur(ghoV9U
%$f$BRg.)sI3$;%eXh1ibLcTa5R(Tgdon1n18+d?>nHFi;[T(+s0p)IN%>#Y?CKEJNm3.kl+G1F(#E72sA2oD?+qXCe^G:H3Y3q9C
%<>3\\`i:qF<RS[,J&<fsCKSK,=V%65DH3S8Q_)h9;8qA!d:,M(Fu_`B$Sui.5W+GQQs,Cg@GhQOV#&)fJ(FMjHB-1mr*O>lV()M&
%^_+93!DZ7Zll@506bI=T\sRRJYVM$c+i*\YBJ3A)TDVg.]*\^cJ>^=^E"UnTMAQGtPo6NR?`dAL),O,f(hgum?\2ooLUJC[8h#o-
%@;\'X8:Fg5oFa'D/h*3GYL*t-b[Lo=-mmc5LT46c`cWJn2kj55JMpWq,W\EFCQ"g2R*:Is[go:PnG)Vmdd`FlCTimAE79=0Ni))&
%Lptq=-QCu.f;U@PT\oi2nZ`CAMljgpMNQ.(qsGk/[.JIE[T&*E$60?3Z,;IjJt1bC!0Wj,!J38Ld_V5MXOO<[7S_>Vi/[#s*$hFP
%dM3)<f6n?!9JZiNXA+8B?*-cF#,?#=TGQ]l#!/AQF$":)kSsdE3LA_`m_D#aOD1-H`(!luDE,=92uBqb=\EV<%j5"La]^)s/E/.8
%blJVA`8MD<rJf:qJf!n=itMY*\3LuGNMNBWe91Ug$Z-Y'Sn0UNG1H<u`]#pt$n=Yb4M[<iXs=^@?N9ha'WBYhEYQ'`aNILRg`&c_
%FT9E1@R]L8#6^!(nFc_bTBOV=-i-:s(J%M_!p_%)W5BK+RP5Dn$'N^`*b]$AC5kbr:4f.?9B(WBM:K5B]F/Nr[Na,N.)#\+e3le,
%ib2-e9_9Y=ar;[[0V:o<);?Lsl9Yeq`h$T)Tr"0r9@.`[,m1BA"M.3GXmjMJe-:Ut9NOm_b=POe99u]lX''4qFIdsYVRE&V$E&L8
%JNt0Hc-sHo)4-N--O/PIoVKZp?aRg%L)7W/$>-OPZJV$$PDFd)N+h.Q;R.kEGm4)#0r#FJ/6nEp%Kom,V"tNY)=HOS<+%B.>mO&c
%A\a2h_J":FG\R=CCKCSO)pAJh-u>s&UTt&^acj_C-.l_42(V%l%MeN"4njS;GnCHRUGbktf5];d>eD8Ula0^#ITWJEh$@M)\$i/0
%"jH;P'gd]+CuPnZd[sCM3Q+;n?Y^3[)VFD2m9M3<54.!H6a+`;ErkBT6=+#TQ-SB<!(c%P;c+,JED<HQdDZt0VbD7lb,!r82c850
%Kh-6;g+RmNMnhc_/.&u`W;:\i]298,\=FSll#3ZI9/khU`f-4>a:2)U=Ct2<NDm7VE$^?R/g74?#cp&tRGW\)ao_S[E75QPY`Jd4
%P\B!hb>MV(A2c!m2idh#rfJY`JcKX+0j3LaFm4)`#Q3-.KQ$$A@g2/G7LQ8RQN`"HDS$;jTap>13Z"_Be>s)+72.FmmF#4/>3#=-
%o7.//94l%/('bUmVdb<R=ieK)iJ;LF440YJ;'ej^,tUkZHnB,-\/;MT!V\7Y*s>Ql-G`DU<Q,&nLa3LML=mGYX>dXa_[uh^OQXQ>
%akU)r_$Ar=YZj0IDI@K<4u0)#WNdS[HgC?pr6fZD;;dV0aAm^gnp:DFdh3MdQ2I40@&K?1Ic'5\4HMcDmR_k_0-oBQiB&C$"43p=
%*rRIk)1sUsMb&ULL#!IK!*C*Hc:!VlS!oS9W*5;8Ss#^;AR=>nTtB0CObKIH?YE#r.D%SABhumEbk#75ZE![*8$^EgY/q\4,%$E[
%'!*'8:f(m%j>]=qrb!.MS#<uP;enHj;Djms,d$Xu;'hD7!6:dTaW%SV90\Jo:gNI:cXVB4qnDG[6;lt?5E?9,6+>sq?cIA=X#Z#E
%IPgYX4>#IGb(t5/co[kB:Vj/6rTDS2^q^f@K2F7D:L1kD2jIm(,F_h9a>;S0AfI^bXnnG[`nQ`Gck_[X'Qt8<)_t0H%R+8HA2DW`
%4E\24PP-LCe56,k`9So(&P;[bH:1bWUTp`a2/ON5_4Sfdg]q2jHT:ageC%k.'`84b+qkDD[Q<=>,_(N>J65C)3<MD;0#B4T7EU1<
%3E=YKX`\n4`!*ifp\VGCdVhC4$%jH&>L+LJ?=t*;FEiAk!cgX/V;f\`;I=g`,ZFeaW=^WmVAp%L[_]qIS(!M>Pak<eR;ViQ/S2,l
%kgRW9/Z`qK.d_qJ?WE'oG/RMW'f"K6guos2YMn`jh/@q#Hin@;JqI*nL%K%q;hX-bU$UN+A<h,Q.;9[3]]#fW,6`WTd@\s,0Xr=N
%S^k/tS0:,PS@o`eG$heY\*dd'n_2,bKNgT6#+t-JY<96;,6o.8OK/JF_E$i('(*_(I]<#;La.gCcC9\Pe#4]Ca?q^WF;b`C&7:TL
%9/bh4-mN8">_>e9(gP;;U+^,7-9U;.[\ZBPNbjbT)nN`rodrbu&0!=hk9,qM\@OOB^[uk5Jd/p$A!&0M/-<ZVG:t27jk4Co\)#6[
%GiLG[:O_'3S-'Fu>n7t^=rO;W6V3!tdaRu#a&]#;W)n5Mi7%r7JLIgeV\S.>(?]nC+2o.Liu*eS)Wi94-/!%K^,WJ/2&(4K&blsK
%,;\DX?fQq[R`o]lUH13qPqu>TMSBAr8aYTZO%Pdkn_M+`K>u3pZg;:hX\t%cX^iQs)=8<_B<QKs7hQ-j3r"D&ck6S':-87<E$liE
%@\UOZDOAWp:Z_ue;RZ^=2jWQ2n)_`g*e\*p$Cb6'a:nm!a-Q6dQ(M<m8ecDLifG$C5mNjg=ll3oMD?0cILMr`;7S(0oM"QS.5\\3
%5C/-k$QuDY/kiTYf3s'P%?m6^[4,)dK^E/_F]dVqnAqZ=P5i=P7)fAcjQjfg%j?l[?8%ChE4&"AnbN?lgD;)k7jT1Z/u/Rn]q\_G
%';G_-O1V.;'c!B79fOg[U'NHg>@#?s5m#]9b)s9\6O4H+!,!audqC=CCsR)6n$"kLi6;S[CuKNI>+t./bm(6\U'7SL$?=R[5s1t/
%F&4/1]'7m6d(u=VPbK+,pGs:8\9j$rn=R,afeIY?nsruiKgi$G'WtW_nI1Jn5W;`_03Xj<3llZm)C,M569"!8Y++ES3_Y'u",G(7
%9+M;95P)m(qB%,,N<q\(qt`f!Ce:-ik\+h^dFT(;d8,3"+U$7K+hk\U0L['Fg*Qs#HL=ST&s$krHh*7pBQ&JX<k92!XF63q,_/Ys
%O9Rcuf-E<RUSIRb9(uLufs<g9dh?l=&.Q$OoDe_ID,HDT5h0*]',]gg!bCY3jYP,'EWl1N;=1Ga%\f,Ei]Y*UMV&q/+G%&d3D4u5
%\pQCKDHKW],#]^@a(s4&74:,j..m]Ia^c"=_&"l%@p`gjaE3IfYmbX.>Fq<R5CQBHD",$jbf-YLip.a%U-o1gjQ-;GDh/h]LRWAT
%lk4`&Ye4FnKe3H7K&k)[L4afNQWLhVCNpI>@+hr$nRBHmK(4pD)9HJNGi`g4+9L&_X$]\k"u(^(%Mj&YUI$$AUSBX,663W(%`I>-
%K.'JoZk9X>DSK@@r5f(Q[Pkf0_9VbF%K>!r*AEai+>b5@emtuA3Qc(?[L"iY7`&Gcg7j@Qo`Rl!3Znsobp13"5.+AcN@^7s^,%pJ
%c"qsk)`.2(*#)C?r9kAG=;@iji[jS0--*hj8#A/bNlmlt`l]N0+o5NbIF6\los-:nG7i3+P!1E@Zs\`pO@u!%h.t3+Mg$r%!Zdp!
%%hQ#:`,g+KRAl4X<ubf/9M/Q*)cRQK`JVV5!>;$X6>TAADjq'Pd2!*%pVrgM"3FG07(g^HJi&_-B?b3l/)]MO>:bD@NnM$Lg/t1l
%il!WXbgtdU/7%lSl\BFlLYeL@dkXj?/^p&a_kKjjb,A,"`,CDq!GE"+$oJ;"RY8p1#.U35Jgk*6Zc%o)N*(lC8CIEddfP7J;Cq%3
%"O>0><%Q:JfNkTJ$UCAT19m0>7"dXe`t*tH!k>!,48'#_0SiSlq7UY7:TkU_bp`,k,PO.h>i]JR'E5XOG.ngnoJK`cfXbXMd1QAZ
%;9fuec&2lm2'_!$d(;3bD#1'-k3Ho0jI`!A`o7;Z',-i.2n+/)ORrMqZC'r5&o!22Oo]F2FRES>SX:01'jIf"Xm%CSL5`)+!ebO)
%WG$i+Nn'$&N0IjT:Qt@8i.31jlRA=l0*e1-danYK1"-BiJ/Qe;<V3'PXWbnO*=s79m[HbM],`(>leuSa3e>'gDU$9r2`_4^ma&[s
%/^.ZjM?2O@).am=39a0V?6-<u%;7,'$[IE+MZ!Ru7#klFfr;Z$&KgQuSJfP<`Op>7lDdrb75$F(m\Q<8fdL.r6kaaJ4If&"U8btR
%0?JX<_.GWk`J[8uCkO$9$$fi%g&fi3c"`)P0<0`$OcPgA0l23sem,oW]oBT)garSPN;;s['0>TXO%gMA^51^H%=Upj^[fWD[7k-\
%URG)kp'eDXB#gVV#$gk&$Ko2uK^(S5UKARg2M1'TOnL!bW^hr!EqYTUa7o^cRnMX"D`8G1*mA&X*+4u23o,Uu(AU/A3_/jA)9[I7
%GhpBr@RCB!ps[W6;Gs@9XXSPYPBPDd*F5>rI!9O]IbV#KZ78aC#U4ouXRcig6/UAp9s,(:s*-s=c9S""gd8?s8BSb:N+&<:cJ/r=
%0"kfLf;D=\aGsZo5\Q5F:,lUO24IN:/Ptdk+N,T^n_@(a.&Y/[o<kWHbXTrZ5.Us)h4G;;\)dLi]AX($Bot!q2QmU,Fnni\c[E:R
%2!h/*?CPRJ?uN9H_AHc\j(bErg^iMdFm9N",3JP_N^I&SgT$[Y3ST<K&Fc!@(inDlCEPJC(P+!1'\[VAh,cg@c6$>\cXqql,D&t_
%kJ`1/;oaJs"-o9QVilK=#Be"NRUqN=FBaVSj@8bl2iA1F3FQr$oN[<REq9Qt_gnoDBXgm%MD$@^Cs/Tf7%QGiWS9"WbK>`Cq.nP7
%YbM>,g7Sn9_sb#RFWt`Tbe'A'K2+YtQNSa.b2ct+@nV[!"OhFJ@Y-j)OQKX>15M#&bg^i%@!"?C,>YG!J8e9"..Ype+LR,BKFgcA
%<2a:nO&eQtBS*enqU??hhfTD=9Zi-?e-^ai+R0_3P"PFu/c:c+pNU4(Rfu%8oLrL:=Fl;Da"=!&YY#p<^K(L[5A/W'_kuk)&H\0.
%%./I`XmhiK=H#7\#='Ud=Z2:JB55[849t9sNDM)1n$gf)N#fk>$hA)6rPLphWX^5LWFRG#0O+$@%^s*?\91Y1QfP.eTM^o_8+(R9
%\P&"'VTPs57-F-S22Nts>VGWQ%co2q);tQ7S6G/X+A_jrWQI(Vf>^.7*ia,>3)jkiGc`;Fq9l4)Yrjshf+\Et%lbN<lf]GV#3)j&
%$?F#nrr`C?PsRe`0I1<U^GDlSFY^=]-uI;u/1g9;g/c"`%uMhNKsPT>rLC7)gc5@"9+o7W[O=iMOL@jcL7h4W"fnqDY`NHND+h_H
%Td8qC;u$0&:I(1:[fdU)Sf^.H:Db?GJuQaApQ?o^")t=D1bO#Z-=RgE9Y@D0\`ApRA7\Tj+i$QDpb-*l9JT,D2TA=pC8hHi%qp#.
%WGEH>OIA^2&3&L9a8U2\fS[=aGW0c-24Wto1SJ/u#bFN+r6'-r]XY.OEY[BVMP9;M\+K`,Sr7rO;#m!>f)l6-mJJIi/kE.=GR>@%
%FSWYZ:YDl+)Ja<)'=:ii!C7)0'GDhT;CU0X)0fb/DUPVkZ/?l+ln>NY,aoKc3(4oMC7VMZP[kX['>^,TMF(pWo$+@f?bKC0g-27C
%Dc:fb+`n.WII-/m+2a*[`pSYp"1^k>+#TP3$tOc,%a=(;#TVRI1C?kMlkdSa3R9*1DoZ&'B7m5G.07ZGYMGrS--amOk,>16kB1OE
%B^X8TO!7O0@/0%XC$o@uPh_Q9*Sp\;.CSm?HDHH]k>r_h?'Kg*Oj9pgp.4rBFg,M>1b)+9HDD8_qjBUq(-#^(OTGbTfuBu&N7hE.
%:^dR*Obc-R?"!$t]JjT1cj)UrH\'a/pF[2Ch5sEMh?M^bCGuML2No6E\8tDr),)V,$`6Z2I]-gLSr!LW;3aD>?967$?lhW',YJ^;
%A;6DCM<(g%9u%5eT+Y>i1,'I&KJVCe)p4`]Eu$u9VY\*D=!\a2!"9bIm^&\p-W1&jY!d@DTM9$*d9(cm,]^o_Y+;6aKrAROc&7iX
%->U=6fVUlN/U[bgKgRPAM,:P-j_=8u[9g;jYKb=l.#9<rlnln:6d;%PRrH4N\+nOs]W[=g;_dmK@OXp?K`.>ug'Z&/mX8o78/Ll4
%"Dp$8EsO=5-%<`3k<sC_X;uH[9E2(c>FZ7'k$J1/7hSDp^hBI]rGhD7K&CU@*dJdEH^_D2V9$*4XMT?]8?Wm`!p]W:KHtuS)ifHV
%Z?@<'Y-XNC=*&SXehf#J)`.'1G-tO%s,g4Kn!6l@/6%"N.K0[iru7V"JFY-5@UDVJ_r1RWk1YcO5JWO;0F7^h<Q2AN&Ag@Q#fa5g
%LP.<f##)CG#XfGsFt([1WJhG>4!oYh_&#*T8-&#kpGg&^fC6*/>P,kA-.dN%@iE\[J!UH$7?N[LM?HE[,*eF@4J[1Yg6g?gefbYm
%PS?X0&3YKH9/3*MamaAHgq_694g\CDV^n8N3!b3aG\^mIGACJq'R_+J7jaB,]u@C4I\`QOG<8nMed$WrNbHgKX;b(-e:B+*BoZiQ
%:A*roO2lLro+d'DdU.WpK2N)'Rc(tN"c6m=TSf8>33WO@=Zk3DR'72Ql)BrKZ.7E%+j9H-U1&-,^fO?Sa]T,ajrba\L$g-`V6NA2
%#E3LIagG_pOAJ@[62a($PbQcF`@sDg'D/A.!`A'j48^TLf$oiO\83!9OF<#HY+OmW9\LFAnr$:c-ck343iofq+X%Iso8AIniQajc
%/sEKOGG70$g=d3oX-\\2#q1KlH_S,Aan6ARYiF<2<K[@7?)#;6H2'rW!/(o]*Qu7%@_Oj,e!/+4oWg=P\$>D/1MAlZGp%ld4`.\H
%gR:>/+CSjf1*MQ?FeC.QZ`7d_Cj)V^Q[QqW0j:8eRP+b<C&0U[g_gVW0Y35K'd2bm8OTFhD'.k6k$]XXI>.s:/t+@a&2Z[H,f??Y
%We=TlN@$/[#965u\?5';"f@T,"Cjo'-AN'5j-BfXMA`+1Bj?DeU?')I5F4!F?8<)N!58"0?SW@lZ_NuT6/"WpQUG<(YPmW.8j,5:
%Q&ok>3d5AOB`5Rc15<2,@8J24WA;2VTkNSO+)^PS+.r8t`hb1/M-tbY+B/ja(F/9;<;eQ*[69=rY5K2kTZKk\Pj:+ON.e)>cpe"<
%M(""1I=[21CgRY5R_u\jM)NTu^pRCOiKdC=kg.*DJSaAC[4Eg@Np^UhmVa$=e(k,LO$k7t9M?5;mCoW.pMRJ-de&W$K'LZHYM8d4
%NUdk"/``FBnK8iCT_$Di,(g<j8>O09[T_q5>-0[f!B%k[fN?!+-G](+ablOY\\2^^]0&^R*WuEW_cod?<_hTH&<<0aFTf[@oQ,k%
%=B98W6KU^lD*&c[9$g&9NZ^8jLVK2<"<N`cXrAXS"Ef!3N8"1Q97:W"Y2(7K@fg#[Z%#d7_&TdQ;?jO)TK`57*OSF?!SY-m#m<j;
%E?SC6W%$:.,W65tD;B[_<=YPX#O%?GKb[D>A9&h7+kttdQZ*&2GdSo0]?tjL$u[_kH-pG_Bu0!s4,0n=<,/Zb-RYY.7=ReT*\-Z^
%D)=JjKf\.IeN3m(9(tkFNePnJ$Q)jB`WMd4[[l;[83pRaUF@E2"-I;dLgfYLg,tof'!bcjiDAuC1L"9-<qj@4*]ZT]CDVDC07+t*
%)r&u!E[>$%D2pZ-iUqi8I#I>/FA/a+6ciDp`_fT_]scq(rTCSsM[j[M]2>E,BN3W([sm2[?qN0:<gjJ%Zbks/MP`M=>FY,B>HJ"j
%KsD'=9'^Clc9jbXktA.G[i*1)^sN_B-]Sg<Za4@24a-k"$$%?IC4l$Zf&UsYa9=,VO8^-#b!<UQjT0Ks+);8l)SU4P:Nqj.Y"I>W
%4:t6H]+;[GDr=B;Egs`'8jc0sp?`e"Zi84q@j_Dm6k!k0G^=.gf#ZYgO(^u9N=J\kdEi1XAfZJF!T^T(3.,bobl@i)-'uNWHA,\&
%*4(DCMe.qIF(t<g*WY]V^MVSRG6C93j]@K-^CJ4F"COKNLW5k>1dI#/-<Ijt<*0Xl[>_ch9NND!hjD1Q^<jZ`gm$:8kX5)P0cZZg
%i;a]+=\4M?I'To-W>AKTh,#d5Mg9AOg#eUo!$EA(/-$9bBUq4&lf@u;.Fh.D%n/oM9,Yuk(En"^9RD4sO^B,@MSPLFBgcX@MpGi2
%;2cm/Y_V3KWD+QW24lbK;b/si@2_ibIMYo1^cUkK-t"Ej8@1F6%['NQ.#L24mA's8F79Xho.s5PE'.Z7g^1O*fuuKb-n#Ii\<MSB
%!>Jp?TSlp'LPI:'"Vf`cH"\3:=TQbr<OSHB]tc:.(@./=6fA(A4NLT^XO>AW)m_9/!2PiQ<j;P+h3n*>KE\[#.S.>^o"Q>)BM^?^
%'d[!N;X+7"7`NTk9SYj1ZP+dA0b*@!]ML*RH/e\5d/mrCh>$S4I]C[SDQ'uLe<ls%[\5qA4nOmICPeq:'VHpC-,5Z:C0g3%*A/)P
%^Fr=<s0q.3%'D!(?PE_G1%Q3#jZL*,hK%WVolV[,OJHg4I7mOpjnUI+9[r0%R&m%5.M)a3\,d'PFhh*Nm24@\U,-.r#f[T<<4':o
%.\I7P7eL+\2`aPB$IW)\_B,_b$-JmjMaOIuKd#/U!XU+Ym4,d9@$W>`9XuX]]<7L1hYW)qGcHq:#]SPC>*'K9(SpLL\M*`(Wh'[p
%e+*3jJ<E*r8'*e-[6&@60(2X.oT$0!?)5SbS+hS@p+JT=4]d^4YIj;R+o=hkUoKJWX$."lO&GfBa3Sm\<Pi7,LYFKY_[CP56S%13
%V'][\('L`I3]U4C\/?$phDHZZ/Zq@Da*/<md^MU>C$G]U6((6s80&%`!k1(6q.-"aD'l!YA+8<VNqKm+k&*r;1IAcBf8]qnbAaKs
%L<!,%(H<9T<5/,sYGHReDpO_Ho'#1brLS*,JT170aDm$'HuPIP9K%4MYQ7q(3=#Ub/tHDpqI.ZA1*9BY,EHY%BJ23*Q;rQlRp)'W
%oJ.-B"*G5:GAGH\jo[quD"M+W/7jhP_0f?626r#0%)CWD\_WptMD;q]mc?R\`<^$LX[]kKF<&nMfu==Af]lWio@]tj!'/4o$8Uj#
%'h1X'JB=Q[/8>)'c4jf1)N@#=[9\UN._B*AqM<t6PtX;dpVOEV*t:WD])D0g+_PP.M!E=;&$LPkj$<'S1&o9tJmun@JH#JA$h$A&
%JXd;F&#Rkf3$I?!6Xa-f`aXf^a\4f5$FDJ"\02Ha)sM@0JW89ADX"&MDct3)Q.icVAX^4Q0l&dTJ=4mJqh`+s$D+Ad7eXNP@KM#b
%WZ6r2*OUbK7At<3BA8pACPUd^;)LupZT490$?T`h!augIT)L(Q_Vstr,H^1e4JpM;>*7pERsKo*1?I/^-j[PsmiI!q:!TT3(Foe!
%b&UAT(uc__lY6GJ/()!D!EhA,&\aXDFQf?mb%j)rS;VMs782aeeK-Jmfdmj,9$-1J%+=B0Lh&A@4ISbJ*fGV_oNY&%?1oGkeqXbl
%8G#ef53WT/=cC6UfCskk!t]Ig$m<72R_uOOVpMJIq[7P\"5N\&+7tDDJR]IQi[Z)Ml)r(MRDct2^N&_^F6ic?2)AhtItFpt-HFBC
%_u)'-i,['`K`fb"NG_]NZ-YO>UC7t!AQ2G7]eROuorjY&XR5E`<*:6A4)Fo985-9a#u\+R)N(\l!>LLbMmO\&h5rV"r;/:BU#uXq
%s.BJJ`IVfErC/Gip_rWZRV@<&/3cF518.dm-PT0c)gb]03jS1*jW>Lo0ut6E`?TH=G1e5M=CO.#6[#->a5:\-P"63cju%1NT`3V4
%;#5H\;_jl)5R:P3/Z9Tbm_bp#m,QVN/?]kC<'L><.*m[<TDs<0&7uc"r&)u'+C3LO!07=H#N,H#'.ZefY@=(N4Hgr($N.k>7P7P5
%MNf2J8KjdMIr84;(HY7_72`NE!VgE%Mac)7J0up0TGp1%je-(Kq:q@_UY(J-0sYQ,cu^';V_"I+]9_`]lHPY%q8I%qYQMnnQCEu2
%ffE4Ep#W.jHYM@j@t&-NYM&ZOkAPNg-fDSMq-3OW+'3+2[27cgdiT,6CH=Fj)V)ZYer<Xi7;52:$/r[3IU`;a$/8/QgG$gMp,ZCY
%1-2.O+^u9f?eI-/NWXESLp;=lfM`%'fK+9V7E'(c4JYDQn1]0q2\EY>Wt6ZZp<o[)e:0Xs+Ur;WRYXYB\@3`G5*C&!1$RM_o4O'+
%2p!j`Q&]QgN(lWsGF_di'2a?F?&#.OrI]Z,iEoE@<)&i<'ORgXrB/"0*E/\Y*DcHt_0`\)4tnco1N0F!fI1feX+@+@Q(-$1^@Vld
%#clbh7TqKK#)5<E)%iP1dl0a2Q=Yl>Z^2=?a^gkR8#?LXYR4P6",qKehRPYH/0kjX\bRZqd_-bd9<ZAb^7Oig^SHt!Pd^KcLC!9:
%>,\pQg\`E+hV;HSOrqGDP(22=+nsfjW5lU?PL6pL@=.K>S&7.4!]TMLm7H'+bp??:.5lSq)_H^HK%bFJ3a1IK$<\q<l(H#UarKnT
%%KEsdQD-'#Y'!j*`GR>r!kf[odd@$<b8+RC!^c$4WfpBP*F2kB)-gds#psb^+9%ASlk4WW'(:1#ruW\Ycs]_=kPse4<!gC)9kW>;
%!/4+b@A:)@[$&Wj=DRZ'a3i[!lm_<9<,`:pp/$?0YNbo+RPfE5Q*K%6W3BPs!<Lke*Te##,@.*eW[1Idr8;JBdT!6i'N_,"!/>>c
%cSo^gr",giPF&T*oA6-[Db7"fgscO4Q;Xb!8#[m\nCD<W2nHY.k!C13KgQEQhfSa@aE!UJ#t.3!9U5t/PE=P-7L<lMZo:fRXC&l3
%;+qV<kUnb<U$^(ed>tLX*:MS@<k7WR]/GD1ClBX30]G*UJUo*%4"2LYXGZZn3?$7Js%(b8%#Gh^%lp4T#a2V:;[olQ_hMh)IJ%EJ
%.`*<mlHa.@5HBn\hudW37_hF?Trja<B[`J[9aM/a3CSF]lYV#>g-R*sBR#o[N(jH860V0j3375'*3p#b^3p"-:;b(>@L1+u;!!I7
%#<=QooF.HS[Z+-==fSi`?Z9]p0`uM=,t>BCR`V4A0.qki3NKHhh`UJ-qa^'b*T5-C,.-.M2YB8"rN/Zk"b_tDhBbr7pE(4V;:l'L
%Zd5D02p6%W=Dc\Q6)ur&B/AAL\I_V9.hU"`9AP3CEfh4mcE`[;M5hMLL5&GVEp&$,2:,&;aSEX*N#%D-4O?Gl4]C`7!^`9m#`'m@
%FAW`U3Iu,S'u/*$muf?6-#7O[UXUU$^uR#r*_t@nUYi;tZAd^,,TGSu)5`L\!X=p)rSZPm<"rO:re"cq!BP2>kd!<h_h$KWarqm[
%]2^2>f["K*e2:=Z9D3rSJY!rL/:=]e-K(5ImP==\+*a@+K&Z\+&*ljj-sFt0.blngi[JUt!r.J"LlCS^*X')mia]RE:Cb!YBu$-&
%6*hm[5TEG0BAsjT2YlR_fCY^iNFbHtkij&7iGBfh\pIsJLU3j!'riAu^C/_W0nuNBra]0Ll*%fT&,Uik9aEqU8:=2Ei[3p995XFO
%5'pEB+Yh@UBFt,6>7prh5q3SJ9e?8O:3;4=6399W&H,E>&QH#k%,L2kPIQ`F<oG`'6>,mHrA]MgaQ2pQ0)?2\Q;it%^\'9-jEH[0
%NabQnE:-A[+O>So;rD-kIa2`d`Z_?4VLc4l=r)#/dQHPd\/gr:Lr9/KiM.Z3"!ekO]$$Hjq:hmTG!qL;5]`oPWkf[PW%)]<Wn3$W
%=?MSK(El3]!"WtW?s$'jX5](F$uq0"8EIG1)dBW#4CAn>pLf$A<+TIYj>CGQOu)49,5IpX@oC^4?>^E(+DFi#bNOb:Dh2kGR_-^a
%=I^eUY>D;X`f^f7J=0C)?2-P6:5>q)J>D&L4C26Fh@Q=\\$3bV5o`J]Lp;;mS6+::['qLi#o.&lGUmQ>GH+ppe/^W&L]""Si:,r@
%@6)]-%Fr%$jG2k<9gk;5AMU?V,R7,g)"J)DG6\/;iO?XdcOf)0j-52Oj>%&bN\EniR=gZH96*KlC4:7ST=JdVoXp+gQDo@AZ$'UY
%cG]*C>aM2`)5+Fu0V/2OI;=02$"5F33ZSbS=gnij*-j01S#H6%NcIeoZGB"SCSVEqa,0d)<LHP)$]Y3h;W(%q2ugO$'$(dF$6s$b
%,lp]2HL'4UmN7pTk?W?<SN5nXVGCd=kPTEsE@sM]V25`[Ir%P'j$`6]?))A63@2tCPuIUKSbAps>u3C;^CE^R-P5mc6cG(%JtJGP
%`=nG%[R=/(#7cM!RfEWGiXDh=3rgbZ?%Vc"UQEStaT_B7h#p,QMd)sZjAp?d=.86[5gU@4!^J75):r6e6Lnqq(.5bWN:!_r4j6\q
%/uhc#E$Rm8rR&e@Qq)<o:dKj(NK$1ZV@%_0Aa(Pp.t1k:T6VeF='dJ=1:"iW?\->em_Xi&Y?JJc_\Ws'$Gn*-W[tof19\%5D$uqo
%"KWt<**>6(Eem9;=lEu2(&-hR+9NuQP$olG@u2H/"oOatZRaB&9,,cGA.m@%CQXfR%k2J#ncHdhQao+]$N+LCe,]nQ]as[&-CmFn
%R**(q8FBA:mk\`*q$6-EU!VQCd35e\"Brrs38-r[_ME\id"%>A2f,kLR8?"aRB7,=nn3G:eo"V\CAZZrDG<;B!l3;Pe@0&hbL:YU
%W(@I:E[bgt6))@G0\!g#+:p4!oX,E5:KS/ph)Fj]UoQ`DD'JBtWZ;$@>R@TYrhjD#J,\I!j'OW_M!VU(df#ma+Xs!@9MdbVd>j_X
%YrK+;bi!f3TV+K5#Ur%HU0o.8p""6:2-[#j^5i"pWrj;?6qP20+?(K/16Qg35L3;n]Tl\6phl*0CE6lf6*qs)LU3P8KsFmZ8nl?p
%g*aNKl\Y7g9uK"aaWJY"4J;J!,kNd0W)8s=rMU4d=B_3ETI%!K)3<qs!S;#&S9&_VpoXYm%d3Fbm;=*PW<9p]9a;5`cXMLESsQuu
%XZ?bY!P"RipV#])=oA0Maf`2)J^S48"rrc!;]bANd-f0/Hf=g8E+cqNn7U!S79IL,Pra.YPO4]Z-]T[N1i*QXQY=s4#i.EW;e5f6
%[3C)4H8Ab3aGs<<TgsS<=I1.ClFI%*`DM<)$?=;;ePSQb69pB^,@\(>mb&"`Kc/I.XhZ,;gu*6DLC44[9j\ra?p0uDV[jufG-4!2
%7)"FU<jjd]qUo5;2md]9]2/\3NG$\W!Ce&75_<[ElM3uqaSn6`%_s/EbMcSELf+l,[mQG,aWGY8Z(;Q9j,gZ=G$5!@)%aM8JO\VM
%#B1_q*BcX""YODTU$qC>%O2(;XOaGe!KJAj`/?jRpZXPFI!TspX/S&fo&n(pCOhtk#QK(_g>hFup"F>kV@Q._:+P*QFkEZXg4Au-
%o$X_nm77:nHO5QJS(0Bt<qlb(:\O!=]TNt)!57A4d2C<uor7>-UB?#MU&%VRI9!Fne-a(j?e'_^VXQhOJtC"%YiL>'o5dLJm@q!5
%2C5!I\HB5/bOuqTlr+-%8Y?H,`'T&@P$kRrjSXTPmB*/\9a8X,%Jp.'iR<]oO=Xgu9\VktH!2J(VX%]?]Q2?n(0YsB$p^]_lupq]
%;@b(':S459hJUMeJP;#Iof&3m_#?_Wi"]aLH?P7jWAon-OpF>>\Bk!":&eRl#\_P_f2j`c#5'&XY/ibmRkM?e](A.=KE@99Tl;nU
%DaNEA&-)L@@I\jl6UK!,[:*S^-gQXOGP!nV]2(:XLsDMOpo%-30[0'V@jlK^<YE?C"9utQLpqbuhD!;hR?iT2;I'*rGgTAn".1W4
%-#Mm3OM8\]]_Y&e4oN@m)#>TV,PHXNUlToIkc)+We(BY;ee40cNn2\3V[c,F^YF;;`Q1a'?%&Xa/+kam\KdVDS13mn%Z8YIKL:(8
%\YHQ2a42"Cis2mJFqVR9IN&7AE@=L_=t+5s#b>Q<F7+S?rT1"5cJoG$8Zb3,8jV7m?Z_g(ENkO=[:<R9k5M+RijGpY\/:dpK;jJ?
%A&NU1rR:l2`A'ImS&!_Yq^A"i3Hp^4lF7bm4MLVn4"u$nM;I9"FQBbLbE=%\)?UKG[)L<2.@^mdob\M*ZdO9p_#uY=E`\TO#N0!M
%nX3I`1e$UFn[-Cj3pLEfY/e$h5H<3L."9^f[PZ4=U\&'o2Po%?UtG@Ha?"H'IeV)A1d7!]T9*\M<L+B**Y6p&#gaWum+cSsC"2Fp
%4Z8B5SM*C^\RV4SiUn$`bNC7enL&`3P,srr8(4P*S46#/#Y8nsFbJ]`!@D5NC)sQcFOZ5/(sX.'A,M;;&B@]R>(SdTS!PJ^eLru[
%nO^f2@64gl8j;,0U8+8Cl$<Us%JE:SWSA-2mK+?ie6tt]3X?ds#"3oZcuM>8e.H1T^Y%Wb(ZPbk^dCJZm54[=\W11h6#O$*[j0I0
%:EP)6dE`na0u/'Jh:Z1+=r+t0oVjjC5'tB;);n[+natKN*P%eLl2:I;Oh37/Nj=Xh)Z%tOY(!c'BkFat?b2lEqV3gS\`7.PMntm'
%,lhY1XO^nRF%86?HD;K?^_elVq:!Y1jo"@E@pFu=EpV<m!.oG6rnMr@]^d6g"CN/2Da/Bgo*N,Li*u%>-LX7kqL8G;F%8BC]=niJ
%F4XI[8On+jJ,.V#(SbV[#m,;3e)9D4kN>\I'%Btfr$:n3mAGsV001_?\/:csfJEToL5_@,piAr@Vr8;kgd0rsErPiT8%[up*91LU
%np7G8K*>_^iQpoUr:OOE!psgfiV\i$Nc`Zg0uV&pb`#\18.c3lY<R0JEW1:+NEBbI++p*;qaLDD#j9U%IOkR%U`1[9GL9_lhql<[
%5>\H;c3o$IOY8aJL:A(K0LR`!6h[Er5Bhd+qK@(N;O'9rn3tC-kdVVm@XLZ7f,p^K\Y"U@\(C6'GI_*o'Y3-Vb.49PFBf5o0m]T]
%e%sEJdeW4T*T?qh!co6XlL4=$aJo,cnQh2p0m]*bgVH03:4o1ng\KS=Ja%ubP[$tYS3,"thpi8SUW\#7JNPd\H/kGWiq_>%PiduE
%P&^Kr;[5S7^H=Bn`V<,A?%8*T!Hu'=/irk)o8-uX^eB8pSNm/0EP;OYa1)sNBusKL:sRsJmRZO0B<"2u<--:Br;Gf=o-JWE`l7]b
%2(g]s!`1Y4nP:1HoK(!)4p8PA+gpq9T0(?mi:Rp'is.Wm4&SCl4b*LB,G2^m-NP4ffo5+_5BiW9_Wrr%j0pIm/M_p)4FR7?UWq9^
%[n6+IR)qUal^-X/ViL@SGWj'cpk)HB,rL44Er,cnNcP!q7PL%U;/m<!l2*+pcBmM_(`23G@8`dHE#'MTT0(>"^/A*7#NEV\r;EOR
%(sX.'@pFuMA;AT$)X$QRGF\."VG,\b#d&COrc:RmG?g,I0n*+*@?U<Lr;Gf=o;1?g/t5<&5fYQK7g\_@EAbbTpk:cgg,hr@SaD>n
%Nde::R_k@a:G:n74LMY>qpbrgUM'HK7^LBIJ*tB*F1!<jD#hjj?7bZX,Fpp!`jckX@,C41&B5"=Y<R0jEW18b40B%rh(BK=gi:%A
%YK+-ihkDA*WF5,krTB2]rdL!G+9o_%_df'T7lbcuNH$\%:sc%^e?GLYs3tK&6$:[K*=gK]dEeG1d4ru)Il55kr2LcqUtF0mT7:a^
%B4hBfC0(Z4RIesYd;cl7Y=?#=SG5OR%r(t+UifsbK_*6.AJ4*RGVf#k;b'(0M:Z6BN8LT`2Bi?bZ`iNHdE\@[!(]SnC-1e.HJ*;P
%'<fHd(nV(hl]7.hQI"H<mYL&pY?e[IJ2]V#Ec+(uLt<l!q>$P.9l:rJg.YM9T"aFD&]`!t674fTnjQ'^kW%s\a('LBXclQ<aM8BZ
%G)K0;JG9PLeaiDhETo\!s!e]WJa%?c#f?`@R<?ZQ'k%QHX$_ie5btFTPZ?<<#hG[`V?o2e.)qDF2)D#YP5uUc)Flu9e9Z^9:N`*O
%04o_N$uK%D&:pT^omYg5Xt&*p\o0Nffa@SbR`1h!$(7tU!HtQEk/#g($9r/)l9O-R8>ua\W]^LKD(>"R99N;0L^2QQKsk!$d8q&\
%?$8K'Vk#XJJfIX0!Y1*uphUC<i"_>P!7UhJT/U`NkiVs-;%T2^-B+&o!j:[\6GjRK-)%;)ZX5'p^u?Ae+Pj]dSo#M)3fhkU,Glm9
%<H%j&%uGmma*]>TNEMdG(LO:IaD/2ngIoA(,0<6()__)b!Z):H5WF3U`7e$gR=VMM`MCG<jfJdG-0C)57&"+=@$iT;Imqo2K/a.p
%BFLmcH[b2f/6?F,2"o1h5EE<L#19kWNFY;BMQjj8lqdA:c2F^p<oMW;H`Oe1hr*U<[<jDrcSPT6&%pf+<M$;Q$E/tY_GVOln(%^$
%GnK8[Rd2<q?to;NSY-X[f^ube"f_P&d-@!m+UgX7-0n*2Q4^N4nOM36*(42rNW%W"eR/F9Y=W-C!5=-Q7k:lX<HX,Lj+_(0g+1i[
%l&i9,0K$$.cKRs;"c7#\hun9Z3PP.?,SGBAi)HlaZT$8N69J>_2o5joF$Q>^)*j">jB[bO3#a)'P]=#j3XSp`hM?Xua_;tZi)E.u
%<QDZ^p@XJ77KIM:!U&'e)IjH44%eo@M=B>>gaI3fLbep"9Lbn[AmJ!1F6RPgKJ7DQp,o]s`2g,aWle0;[K!m8iEgba\#SeeX\(gs
%UI2\-rOa6#KYRVk0;_\4%0])K!$'/*o#D^C"^)2^hDCO`a:j0BKloV2:^Apg0?[7\Ui7`25U[?nS>^1YFrT%I+4C8_BVI=.=#I;U
%)X+:OY)JG@*/HMo>K;d;F4=+&P,,9"q:".Eo)Mt1+&G62r0%('8+5.Y:K8gVM>3@idPT_s<`W6s3e5-!o["dY<7=3o$Q>;]Us;ho
%#i3.@7LmO]j.X%0iT6^B1J<FthBGN^$A5c/&kig'Q/U:]Tb,u;XoQp!p*,UcVJri1qJ[q'(#4@L]H:FEb<>[)>;T=[+>m@r/lh/D
%"5I>^af-6K$Tedg)".LHG#PEIWrMV?4A7[]om+3[]=7G;3slQM*pk<<?l/h)ns\j7aZ&96kgg`J0h1J&6j=!/a#-.`6!rUF%!Y$C
%/u-"WGE[C$n:9IoV?iDC[/0lKN:Z\#&VV4T8@mn9,'jT&Yr27\GIgB;Db(\uV$/F@&Ks.eHZA9-'1X"u>$/SZHS%Z8gVfm/a*fn"
%gPm"c,<#G,KCsg+ILn4!`h^?;\e.7a!0!YVk\9aDS&Sq[96@VZ'L5K]%_tAXotQm6T8B@$'X`G`$'J.SP2HDFpt)F`ppr,Xs8Lc&
%I;m$rnFutZRm6oI:Cg=D+IUb&./Q;pFQ<ZNc'8[(='ALaZK@B?$\%o3K2[;<ZnCh&j?HGQ*`R+^ck\Z9n5^9A;mP:+RS:4I_ISll
%hYM;Io#F+i,W<%#UGn51l2G[*`MotnMlU@Js1)%q!@6-Vg@ju]?+jge]V2-eV_Tum"ntBBgF^.@ZV"?=1eE'Mg]a"+Hd5;H(,j2"
%RnLO]@0(!`]=n*hD[c0t>tJLI49hjmaD=''3:>:=pTO`kRB>f;K,,g!(hD>4IXi5-RK?mtd,f)88Pf%teI_n'XVZ3AfI_s2Nq<\Q
%ekju=Ht;/bfgCi7._LT@iYU('K:q&I$KfGW[2\>1firg[VH#A[27D+uW`]<+A&ISr<(t)oU(UTod$<P+)>RAY5(aU!VEH/TjhdhL
%m+l"YF_>NE2l"XX>B6q_D5cft1;G;#UMo_(fW685_+<aib$FBXd/KFT1;Pp`XiqO<m93%G3l_#8H[5'27!M>SLFENmR<ecHb/54R
%Whg5S!Zi=7"`]Bur.pkrbMU?:@-nRoo_8O:KAHS*:JX2^IRQ=[kJt>BGHaihkV(u!rZs&]G?,a>&9ir"J3-dKT>7';>>P;FG,%?X
%C&VG+oS+WN9GZ1$5jT?r:B5<D4DE\$\Ru02S>JB-djP\keamn5\MO>koDoC!XZ@\c,o1?B_+HN^G3u3PK@*qpSi&Pc6-*OWg37H:
%a<>mtek&QN5iKNa1tjcA6+T%7"s^sr\,?c_BVIa*1D/MX84)km!KL-T:^0:2#5Ct.(EbDMZ:G9Veej!]SB2>P>@8URhf)r_n<KYg
%=;]&?Ss=3mQB6a:f%*UY.!UeFGF7NU`tjk;aXStm&>?2.__tAe;-PV%Hk3$eEa:Q"ekQa4feq5dh@oB`9_S`K@Ne[LDrPG_QJU3o
%pLb2MQee!*]'8&O12-*,lJ3MP5nDnrF>G7OlYrCYBCc:#j5^3Bk!rI(;-_FVGg9I&nb*+\T8)B&a&n'XCIH2O7*"$!DDdIcr(u(W
%<U#e]$N0a8<+[MiWN%SY0sj>5lqk^g%dfO<R_pXs3eAq7a4SW-cO;;:3GC@FfnD:t>/AdXj#.YVRS6E$jroW`S0$?fV"l"`c:ocl
%FO^;Q<Kp"tiNn(T!pt$#]qojtR&'JBbtoH+]D9*5+ucM2&%47$F!!T)UMrq.+T`RUAf0OsJ<8t*\#%Ku@C8R_9G+HWb`g^04pq'e
%F#CW3V^2%_+LJhi`csNjja9Zig8?4,FVtX4?H8l1@q%Vh*g:h0-H74'A)aC9'_?P=Qpa.c(-L#"l)/%>\$ri40^\&6l4g"4HaN1&
%bf/Q,!mmc-qjT-V>c_F@\TrO:GO-^bm,H$tIXVmjYEC2%oF@"fj\Mp*/4)P!ZVaeV^Z7E4Dk@3;ARli.6`Hf:J+G>/G-SJYT:=*c
%h>ogr2h9[%9/4,@=RNBE\Tl/@5@#s+!&LIMA0FM#N`6,U14+ORJAuEM\U(3CS;&@=%1l]pZCV5r`B5Rtitdjp2Q!.k>>U?*#g.N-
%PTDi^T\OR.SE/aM3LOu592P=L>@R#dY3D*nf[M;R!5]FE:a0Z%I7BB^&o0mf`@k8LBZa6)[9K#O:`aN#l3dh4gCrYn`sS[PQ/K1d
%Mm<^3-sjpCjrsZsgLH-'EF(`+qr7##1Ia'lJ,4/un*-J4HFdW,MoPbVXM2'k:WH@!W+DXnE$3GsdZ*Qc(KH-thU4:^]<98reS,8$
%,!9R3=''ocT@Jqm9em;F%3uD]5h+Y*mL,PI.Z?ZHMV<5\k`?5%^rs*;SYP.T_e7g(\//!H"JXlmRk$ScP_mc"!_4VBPT6LX)qjnY
%oe/h;KJ(#HA'XL38M9iT(aW$aPE2gY13hW\9%o#6/9XP4?"JDi!+L)J0NocD6[a00!lHrqPn*u9[1g_"mZU`u^OU83YJk.8,e#J`
%=qM2r9bkR]7H?DMOn*`Y4QECpdO2QGE!SY/Bq@_"iX*lk8P'"23*(<7nX+7s.(d=jmF""Q/M\H![%&O>JR&>nP>Po47*/>oJ:l0n
%r:_d;YY;-8\`=)@M$2r=k-7/,5;iP2"La816=T#jD'=&r<d@lN=Al"mCsXJ8k!g5==k:gIMs-0&I^;Cmd*D_=hQ(@:6+&k#a?Ur;
%Y$r/SRcb/NfBe#=:GHOnn_ESgJKFd!;ZpAu*#[QpKtZ"g$BdjX=%A$=U=i*Oj)^Y7(fUi/*6S;U%l.s:*m?^pSCU6Z[\OT_dBR#/
%;8lqW$"3chb7]i\Z8o&GDj]3e6Ig=(3FWeQ!<D[.YGB*=@UD<a/DTlgP`cHe35Gu>R4V6hA6c#=DUWK`h'!tc[$I70\4O&/CFJaQ
%XYjqD>fHbg$LZ@1]r2Z[Iq)h:8/79G%T]([l&$bp?8nVP7E?hiCeMWQ`Wm97Y@7-tS.Jf6)M7,dMCsYg-7eP-NtJ6>0lbTH'2h;F
%%tU)D,Cg,FR\a0g_9CH@\URu1W/J3=i_]rX[0Z3_ONTEdFTl/sbU(2NKLT5)j.N:[f7QFI``.?gB<Y!)Z3&gJIo=?kL5Y!;?aktW
%MO^CH0\ZV]H-!G'%fGSJJLg_QBq'irN3p12D5hjM-@&<R/VE!8@j;_gLD7Ua)Jk65#gom"M;\4:6JVjXhCu29l3!_C;j/n]BUm:[
%1bjr[9C2_1>Ei&E0\+e=[Vrh'Z`uG+BZl:G5PA\l!8Si8':;kU^Jkj31uJh%c-h^Cl1COq@oMr?=WX>f/FbcEqV>Zl!_$"qPQh8Q
%Hh61ng.VFQQqA%3?qd'%QA0L0(9p3'Kr4uINlk"'5QH<.;3U;/&9"R7icn`rb\6%e15B+?O2(\Ubd8UHHeNBS&_q/q"GL3O.2"t7
%8d9,Sc??I?A@k*nm1AYS*2l8HW>(Q;@,Q5F)!g4s#<I%IIC%uI8b.OSp#`MD]jbdY1DE%VU"gOTs/QWOh6g7S&5@Y#8ihP"[$eoI
%e#l&!-,N>j$7@Oa5X.7"?)e'Z5Vse.<pGMAdJrXf!Mu&nb#9gJ2.Z1^9cas9M3@ua.,L3"6!0]ATnXl"E_kMEedPub*e89lji%c[
%j[_OZr)GC@\[!L[I#T)93@^=ccq-WN89OebA@H]lSMNptMM[$\^/f]$bbNg+!`.Q8(idIXP96ga3B+\'A@dmDW]f\M0G%kb`M.'I
%Dd8A4ZFLV8-)Uj\55M)DmlY=:<66t2kjZ4H(1kBNW]h1lT^(TfTV"BpVhmslGQ2r_rQXT&(Y*u+K>7H1`?B;8f!U,6)'26lf=K0D
%"P"NS)$kY*,ijbG,237,[J=YBMDgZ<B]iZS[P3(2KW5_Li5sO.1Cf#*it7ihOmEYEX]hdm([1M-9cpUY0n,fB%D*,=`mh`,jn&?I
%GQea2cM5g,[@JKa<VG]$6WWp?"HQcja%OCKOtCo_F/_'g,m@Yh#uloQq\uj-\hTEXXk)@@0;*Qje6;2^Zu>N?Y!(J>,iFOX\cs/q
%pp:lff'E.+<%-)W=HjD>E#>\NKrm1of[s^(Ke5Ht+ZZl-mh)ohmY1&f1#_t_lJGp6dGj$nX3(k!M&Y##RBNOd=Vf&e#VoqfPj(Q"
%>mcHJ$@V\)FZYdT@VaOecBI^D'=>3o;]I\WXV<u[Be"GMJkTO1KUCV9(79uDQsDiPa-AKRCs44$@`3`&L9RSHHj8+^;H91QC@riH
%4BYfe@&o34q3O9Z"I#49>0W6rjM5JF+VISA<9.QV.o$M5P"*i:`22:gL']&@i1E4r2<""Q3OriIELQX`KY49"D<Q*b*2ijG^p58'
%Wd.q<5(nQ-Y.sk[H_5a4CUE-_$qadk4RLcD;nMg>\*VnJSGpsr5%Mo>.T\]X9Q_<J-F44ieQ0-UKM0jC@;CjOCt;*HCE<$LCRnXQ
%aUf&1rc)R)q>s\JHXU^6nkfhdJi$]_AN9HCDhgi>F$"fUZ;9GSQ$CpPqg=gt[CSlH<'&6m]BlD0ZbF!(0k^+b$HVYmWQ`tDnb#%$
%2W%VZ%,fl"r-]Tf;0l4uWIrY`N_%"M!h8N*-d'h6;t9<<Q1.!ZiTZNcVrq@ZVAspQ6cNsX_]EIIVR?qUMm#qT`@k]GOh<dSI0o5J
%5@jJ9H&'%`,Dc(6eUd)eNTU@Poj%G'*M;?b(sc6/c^0t@B^5c=SbspYQ^)s6:/'?>nhlJB.4:bmPWu[AONTKr<bIdI)h\u5OHl\L
%gCsR9E*%9?%ApHsUO0tg3u,!8-$o+q/A't'Y6BSIqK^B?%iotm\V-_3qX&p`37V9P@Npou?KpGBpV.i3;X--Pb5DEQ8mS#rZ0U(e
%H>I!<<U)%g+PghjQm0Y*<hK_db9\,'3p2G9&GiC=Mn=@LSF1.u4_kZSY,ikU3>_L4&B?1\UFf6S@%3GkVUd)2#:.i:(ORtORcG*f
%;7S9E7oX?H9%;hYFd%VClD?oD=RmS&[bXB\WUb"TU7NY_,/%&2o+c$Qpbs/o`/+$#QpOi-e507A@[b@*BVs`4;O^1cY\"k1$d4&U
%HjX/XVMJRoPEj".8dr-P@5#7LKBu:<k"ti$!6CfXBFe0rc?VJYOg<;\+3>0Q;a+BIqJ'Y`Bq6Ha5f\]?#+9]@R00*XlpgVai@H"l
%!aqu^*cB<VpQr1q&kW@npf-3i9Fmp)O5ih+*A_N"$NP9d\mq'2e.>T9oRRaXFIu8T*gRCgX@PN3^eR4k,XYe*XK$R<pM1GZn$Xj`
%./L4lG.KVnrTX<dX+Cpfk-%4cP8S9JY`AZhSbMR/NUiOfFbK]enfqJ4p=Y2h7ct1Wep3q[@_nnfP*Q#sa[:coCc]q3VX7_Xh8tnD
%N=,B@4i]M%m*CO(Zi0<1'EnGd9/KG&3Bhc8(Ts:<o_%_]WiA"_g/3m717"9H(^Kutgh$t4lYo,cFD(b<!8]:B()T0-gEf50\ud39
%;Z**m,C9T,+8M;P2NNck%3:kf<.2AuDfXRZpul_la05O/pRG8iX%H6eKT$-SDDmM$b(aBYfhc]WJ-#e4=c27`\<0i0M>'7g5]=Td
%"P/lL"i1k;XA-/OGbf]WetFO!QYidu*=jSnl3rKMW.+;3P`j1GcY_91V&=[4p3=a%n&"?YHa)"l!*<V!>@roRPuY59^LCBg]/TeL
%_6)CKb`I`OnY[Kq6,#+4?!r_jopH)Jjc/s8B!.?U!4-r':F?;$ORg4So!f73QXUQ<(2j8@bk`<k?r4&I)@]^1d3j#6pZmEf_Akn"
%]XY,9\7"_CqU>C11EED&9fQm.ije`7=_^`H0,$SLAR7&Dmuu?+Y1H.f;.18WC.'5Z\SVq169q1g$Do0P)IVn*3@M0#,c;PgJEo<<
%RFkg%0d4cd?'Blt#jpd,18Cdm\.P'E56TMkp52]4XWAP2-+iB^%Pf,DJ'PC>'ahD"]1G?HHkD?*n=sId!5E,`IPm<7f)tLS#pIDP
%>"JX@TdhJ=BUsCnd.H3>&sB_DKYkmsZ7O6?m3-6M\_IQq51ggXpk#KNG!jQYn3r:Bf9O0D)Q8Q;X]c^4"muIaUMra88KFY;QpCEr
%:(o'V5KNCtGKiAfl8Mf;Mmd#eFIC-r7=6t,8kVN(W-S9O%JD':O-F+YHcP.iSor2gV*G9B_Ge92(aaBA/9\O'A.g,>^NZkCWC9%T
%N5sWY=NXgU^#%b/8t_irNSjBUTplU;$%<SFSTLR(/-R8pSb32b8<c?:"%YTN1V2,M6K<",rB8CA;ML<f]:nWC*T>t;2D([3RA%37
%nP=Z:DFD%lbR[44#RC/B9h+n+L^Ug=3p;_#P4VH(JVe0i&ea/b0sHcMn'jJ40W0MW.VCK#jW&ZdPbLg:==sOkfHki\l6lHR,D^9L
%q#[QBk.r,l*<Ps_Mni:S?D^r%ZgR)e!;0><Wh?)[(>#NidZY9`*4nK$C?)t"=`A`]8Uf9>AO']7,^7#GH<%g1:qbSc/gZiBh?N=(
%Q>@PmXh>b[ha:gQTn'0c4^cAK'WeC$=U#))q1ak#k.s9q@W6A.k+,/VPf<ObQU!pE'[jb1m$%<*b8lgcf,iZm7iTR4i=nUIEhFsY
%&H54Jbam?O6@K'\1)e7%5136ob">6U=r/Y8M!n2X8?#`W6CjBm%qC8Pm7Y>>Z?/65nO^eQD^s`,1L.Vs)=/mUs(j5RJ81i[@3#CA
%],o:+N\2f$BcQX\)H"HVjBuBkU>AZ,`bNJ@X,g-FU)mcM?(_8KA147u&Ui/4kC,RkF534HkOb>Fr+J%hk'+T:eURDkolpH%?[d@U
%ctNCK]C3N5qg\Ies8),dIe@&toD=%4qV+74pU+@Gm;4]4epTMBn5mC$+2@^?huE4*J,&((nb[h6l@0.-(6k*@qYbpBmI1&ETDiLg
%I.EF"jnJdoIUJ,1A@qfYs7^a;nAg%L+$TVc:]L@=f>%+Yoq-a3s8M\8s0<^_5cMW$j44;sYG:[C5Q#I_o"V<%F8;%"pA<bGnTVbD
%qLAJ.2uiB&hu)=qBAEV[G$b(5l,Wd!T-KT4h&bI-b]sElpI?b-5CW3ZhgG<f-b?DtMT`T7l5d%;"'=_Or=gGG&FfbF0\__kh:SCR
%@3AuTfUVdJV'[T$8`!>._(>]pCt;5P$FDE1d@4MpIb#070cY&Oic*'ERW=rO*=>)?3*r&j-,U*+g*X:8qm-;d(Ed_[Z2Z#Y.T]_%
%OnSj7V6<pqW0Z6XkYNp?e<n2sJq>M"HSV#DduaakoItYfNr+1^TX-AJnDqqGQNgeOW%8XHkbXM&hu/I_(Hgq2qkM/Qh]k1::M>JP
%B"kSQDbdQGT^$2j!6ph!2%in.N@5XJ#mE))Yc93q$q$Q&pQkck5dm0ZH`J:60P$$f^T<o(]^b96\X&U.[@mBMVW9.X"L3<O0e6kD
%!k0??l&TS4[k@II8H>Qq+,"hWp/qVoI2Ru9qp]0<'bu<+gBEj.6/NaUL8dn>Rl8H=qVtZ7Ws*]PZa\7);6m57OW@G9'+;_h<[l%S
%[b:a764L\o2..%j`JehdTf%[Q9!&(7Yr>!iQ(^(niQWbaq4-5?;a97@B(?5ICd%R*0TYMmX7+T-dIK*g([HtgF1a4,9b83.T@Ih,
%CcgL?ClLfc5J=(hY<Us\eE^lcoj%TDH+oL$F"G20Qr,Qu)Dh*HP>cb8="EU9]leE]\MmiCY>tj(P9#NG>eb46hNd+B=n_6i?6rZd
%,hY4&d2.nGD($@('m[8FjAEB&UHkc?@0_"-hIu./h&s<7S^m`/N4PZFC7dVtRC1SuhD#T&l.2@$>1GmPOCXF*[&U//H'+9@YbE%9
%-m%Pc00'nU?`g9uQ=<:1nS",CT9$.DD^H]/'+5O%WGQ.k8C3/]`J&!-)'1<B@.O%7FCb$A5CW4;<%'iLp.)o<EXEh/p_sfCbP+aU
%\OEre+KXm^$U>OR9;2]jB!m6U>c%BIWu]_l$It=E6pHdri^+3u/PV<H8:&Bal@;*dG2??_/%JH_=`<pWIcH'@-%sC.r1c<WOgKcr
%I.T'AM<W<!RS>.@hjLm(`-oi.jpbuW;Qg*i)g$=dbZ@rnLXpU;:2;.Q.9_R;g3d410R8;CYDZR)@+BBH#]t_DW"fBEVeIe_%IFA0
%"4e/hg0modP/#o.c"'c"PUf.P#oR0d?`fRmPor*9=-L$AT:_Re]oeta)MehJI."-b!6a)HE!A'7S5]oH_&V@_JW).2C)<`]kgD`[
%c`SN=?46ieoY-?,Fr;):MN'i=47\EHkk;ikGL=q#l$Wh,@0EQ,\)2W&R0]$*R7IG4ED?m=;8s9&,6;,T^hhV[qAVN#-lHU5DQAWL
%_pr).DRaA%C]rdAcunq?oN1913gcp)Au`G(n?k-P'bg^h^WG]mpXA/H5Ltbch0RHmTP@]7AD6&.aQJbJ]rs5JCmN)XdXkt<.+ZbR
%R(U5cAGQ9.MSj?A@dBuf^B5n*+,pW_m*C\=klD7@"Kp3^><L\imCcK;("=+S*t0?!9*P<V1jr=LT;,^.739QWEi@V2Xi%Ea-cr;O
%q_R@g_"2j2%RNZ,c+c+B'G'Z\r/4g`!Ri)pq9?X[!71$';m3o:MA2T_m/h>ro7]MmI!3Qd,okYUn&PuV?hW$icu7\N>uRaf+26_(
%Bb8oh<=onC_[5B2@5)PEk\G#.PS,o7;GLiQ5C2j0WR_b%\lb(=q9@ZP=Y7ja.D5*^b2kQh!]d4/3Wolr5:1E=D(]6MB*\,>funik
%Z1a3-CC\S57r,B!XsNUiX#64$h`6k;.G]7?o0P=@LnLIQk9)/sJn-t0'A\[N%hkhjG;hlZfqH)GLqX_NbE</C^"N4k*$m[[G0kk5
%<LI[5gf\Gia<N#?Y=bt,E]j6qXhX46>!g5+<Dn%'N]CcmGH`LnMg+6-@-[s$)5&iXkltpZc)s'o(cXa?!Bo*@Y)^u+EB/WHGpRp5
%5Gk7?;b5?N>;*\?D,bFdknaLC@DgX_8Bc0Gf;Z<jC`?u!/_-HXRNt_#D1eO5,4r3+Ue=Qc\]8#$UuP'd'$M]di6?*CXWbf!MUl2n
%BRI_M8j!7>orB18KM6?!`.]$Ve^k*n8])l.^q`$g/-1[eNLK2>aIkR?,uJG5>[m@UIj1p1k*Cel*(p$WR8f^9Oaf*LIkGGPmGVY>
%"7:n8#rgah0,=l5"ilj%L&U3nHa<U@OmO:G#a\qc!M)<hW7c(^1o3oW]$79/(+?\g;.\0l*GU5s(ss%Z0,"Y`VNYPhQP,j^".W9L
%ndmb8kGR0aY8+F!XtN6_rcEI">kkGD9Z6hs2o8pDBg1JQ*>2.mI;PqlQ'I3523M9?YDJW]n[/Gp_[QP94MA62O)Z?^4?Q0=`Z]//
%]h2+SmFIcq[7\eZo`riJbA\[-d!%O03GfLl\"Ej*:ii),B3G\Sm;o"1nY:HM6]i^KV!>3:%YcgiC9efp5o*otbYV!E>Oo;;<K)ot
%:t)j(!2cS#-Nbhb-?\n/;7;WTcHR"CfaP34mT0PWJ3`BU97?Ff8^o&$V7*JV12G^<l-eV^'HVT*9)WGDb\XThRRM"=C7JpqAkEf,
%'&L">;nGZJo`a*q6j2(k7+V[-"&A]AmeX(C`E%jsi/^LO6f(1K1@p$XdF0-L2dJKD@a*o^.683()3VAUoeJGu[m"tR1ON^J/&;kh
%bKS_$"TZ*tIS=&6V=G^]+r(;_@EQ\#s(%u0FhN28P'>G!7I+7]3=s,'b.f&&YJshJ>Q$S3`;#4*[nIaICtn4*]C,n583sQf$L6t?
%IA2UH-MnXr);sHS=I2kU<slX/#9[)p;)":$k!r&(Zkoi*A*1Wo7+r`FS0PHTa[+?!Oi+_tcQQl;on:#Plf#jQn'roW3SEi"<+`kT
%="Oh051#JaD!%0jB)AsdAEmmf&+hIS.+i]M+\?CS%YAe?f3A`)5Q`alk+J)O9WbG',R\NmbtOg(_Yk./hgFa75[(,>?_5Q=Dqh0*
%]8t_+2KL6SaF3:%A;IO_cA%(DcuheWPW*WpQtmCDVKkBgH$M4fe'e5u.:X5*cQFZmWALgKNAo`f7?YIQ"8BNh_&>81#2mHkBsLo^
%pD:kp-,&UL3ieHY"=^=Wd@B(_jibXD<ppf&Gg=[$NB3LXWt,VgVA#VOa?Ah8'2@[UR/1*8j3@=%_("@k4Y_?E^@7tnA;aq!CsL._
%iNZ]MBD+8V(2-,SXR6A,J(Ee+PRbbr$)E_oCVlJo]>(@%2WHgmg$m+B8^7S1b0K!RO9NULleV;M_;%'-kF`hb/83iahGK^u9c-dJ
%=GW"N&/-6R6!/5F74,DGPfe"D_hj3icY99/TnBc@*&F'eRHS//Qq/I#el]bpp\CdihojONZF?11<9Njaa4t+dZG"7#iNW7r`8LB@
%0qZsq^JD;=)ef.5#=/L1p-QPfd7p%gM0YK7ag(68:d"fd%RKYdjn@MVo?Y`\Q!U9tr26/V>mfU72piF/Tpf:#G4*.H*,XFU_9Q8"
%E0Qo@#=lfIkX9Cbo$eL[\bPZ<qS>/28ijH=XueDE+h"Noi\=J4eGN/KEb,^cnVo9;]Yk-"\c'-QX6S9NrbpBmQ,5rh=ojT!cG3O8
%j=qF'i%.^U$sHf9an2?;R,rWboFq_L$Ypj%@3_USNRQ+J8M38T7WEjaH[3.kP^jtM9Ms^SD^S>H>.^iV`mh#$oHOHJ7X=;[UjR?%
%2)[h7*D=1dc,d4/VlpTA6VsF&%%B=$5[dlgr*mmIFRHDFo-&V5P@[!O@a;e:WY/Mcpl]j.,?bqBgpag7X]h_/cc#>b:WeA96D.>!
%BIVlT<^DJWLlG+I.j*2Fg$\@rgL:aEPj9@3<[^BAL>L<)UAuCbk'i!8L)3^$O$04<Fq\]HgZckj0dH/#<%69TO*D:g)S&aUD7ttL
%@_ui^.rlL2[SSA_(P`JVHcF?fJ1n!B(O&kj%W>-1?WSb#(Da9qrJ]0cYXXTrZ`*BEb&1(W]5s,]%ns0[2+r7!Cd^Wc=)G9?g%BZg
%>-V'c`S@%/4es)VTLslcbk\JIO8%u1iV&MKmn2u"l]Ho#=H3F,KMh1G3MtAR/]SbZ=gLmb:k%L`kQ-NQgQtiM1F):u8s$m^T$=kQ
%d)`q,I7,!Ap2bQ8)%K5-0\cuHd;B<@ZS4M"htZ]:W'4"t+iiNB6$0UV6e5t#\5\4cof&/ldQ?'4HX$Bh2]&de:40Tm2dueWGhKEf
%o(@?;=akaT:@0KB(f6&_PT5fl#DbO%I;?jIhB2u2[usC#[?67LIK"lUOSLV?49#>f<*qAqVe64\[$?`V#M>HCB5Qjbr2:lEaT:lK
%bLCWX-F'tIFj.G7UIaQ#dG<)`4gldIbJRX$Q.aF,jEcJ;>13tt1`4I_mQX87/KR<X`RmipZ7&T2;g+Oe[;N9+Mm6XY+^:%@68k/n
%VYME$MIf3(li#H=<fQ6`*I3[OHhhD[^-%r)4]"e(@dAOJquFO]%+u%[ZLO:eoE.L-LckI:,Or<84G;u'LC>]J[F:\gAsk6$>9Qor
%U2gB.63T7E\EVS:B@JG!#Q53(AP0""i86`nVu$_>T=8#%HAjF^mD9CX*=,*")`'8739_,C@Q`)j6`Gp?.+Z\`k*fLM12?K@$ggaN
%8Bf)9o"\9q'>cLnHJ'pZcD#t#G28b,3&5G_'6%g1:)C%ab=A<T63PD.4i?M<9.1k>eWARrCb3W]R0rb76@OO%!fKN&n^-6i-Op1<
%8L)\h-IrgD8HPs1&rkLmYQWNV!9EbW&m4l=nEH>A'Fr9;2*DK>6L+J%,5ZUje-JOYA+m0%l?d(aG8Sp&M0.mPQ@0`]^APr^+2\CM
%><7kG4@#Y_2'?:DH8Z2+XKjT1g]M(WAQqP^XQ'j1nSAd@8X#?cO=7)pU;S>'3$_9aMm#X&8j]Xe#rTi?nONkQaIJS@e"gbC=qCFO
%HH&(*YL9U"Q%[k?]6&A;`JjRHr]>>HV_1=["I47L^Lo:D0P#?dkXK+JXWFV8JRdnm4N'c?Pgg;W#Utk!ORe%51:e6_G*8]tnfdW7
%L'h[m3=[8hFWi3?^e`&lI(s^/2NL"CnP8![E%d]@)\MY0HUpT"e=-*sjns(E8q,PJ(3cBerpRo-G\Jtr^4\6(OJEZ//A_(rG@BBm
%A]GrI4kc0XMDF[Irj^e4#5-96bFO\BlqIEB8j5;MM0"JP'\/LTLf32L.CNkem[cQrFk$`N6IPf-&>d&C!abY[+BHq#9*HT5c(=4_
%Na^t#Jn)]#Z@et^gFem8<=GVnOkmt,^0e&)rK&ptDt/H;]B@5fVaoLF0oKI;e&2PY7[A;cCf\`aeOhnM<R1[@CDQ]YeuS`9L^>Oc
%+%+3?+<Zq_ku/;3?G%4^,WF7B]?B4oLgYWj;AW*KQJ"X15?o7L[?`>"^kWc#+2&U<BWV:9a*9OQr0EBa7L"^+nj1C&*USg+*)7p`
%0l*>I_-T7g[85&nCsJ(:Uk!eC&(?h=O(@Ej\amRWHUHOtC.Wq%/:(d>?JF-QN?1fBbq;]:ceJGDS_7IS^c"u']s0I[Sg0Pe,6_h.
%UfZuQO?Va[!)cCPVh$gS.ct->`%'4*'d;Kkr.*5!,*s=%(!<l`#$X%8)d?KsnMT2KD6>od[d>nk1H84+S'=Y0a/Ld&7d9.:*nG.E
%S&'/f72QW?\'.^`?Q3V(cJrDTnl3t0:o.j_4p>8O-P)\\_4ercH+Yh7Zp/hb5qN_85\P.6?[-2=dU@<(na.;Ue%@#3hXPG-r]i?j
%fJO@F2k:WC[p%!n%KgrFjSe,cm[Wn^2VW.!GT&2YK_QPi0UB'3;:]lGoRIZ^ndhu@6!j?%\eTEEThltK@W6fj<A=L*geQe]*,A="
%RMF=?/%ilA*cI4cFTZ[HW"@fR;M.@Bb+sbY>p.qfRnX64(qZ601F6^WXL1jO'*4tb$ip3h3!o)VFk8])8r#UB_a]IIP^(@SotZEa
%>6:etXJ#76g4"Lm!rW\pOJh+@ea@FC#=MVOBt:ZEOWOs\d0IT\16]3])<iK*L"ABrA[oUB(_,(uDJ@N1<#"num$d`,Pun_ZrZ%>N
%K(L?MbW=P$pefm/qPRDR?LTnr=@>V<2WfFQi"`E[=28T-FehrD!(/Eudf&=K-n;\1jCM"n2l/rE1m7HnD-eVd>&Up,:PWVq1ROoI
%pV3][c&l?n?%0t@g]egJ-@,`;itA/bWi`tZ:_sYEP,:3I$3M-1geJf!Th3Y>)3NCLTAr1[4)R]<W=T$k!WQPY2M,!!d_LU%EX6Xp
%K]-920U![90?C-]@l_E]Vbe@/eEc1!#,g8[^l#fH#cjce!f:qGOo^s`Ug.EpXDec8A@#74JukS-@7:/s>_-#O[2,%)5X'itIBeN9
%.Y68VgKQZMLL`d\$f9.OKPaQ(QNuTj?M_S,?1[V)&'U_^o6eV^()7n&So,Q)@*R[U&K..iiqV!^pcN.RPiNup[g;AsLnoGKP.1G%
%1,"p:PQRF7lUH6lN8HShVu$]h+`3Q=)[/&hFgr)X$5JJCir_k#==OLk$V;m>%Q0d_iqpkd6W4%f7;7aA1O.a*a<5VHCSgGi8spGT
%,I(Z6'*S(f>usn`<KsS-<a?N?V+A_Wg6a%e95!2&eut3(Zb>NR>AFFt?oB7'kHaDqZPA]r.8;QDOiZ%2Uln8K`EGct1.4IPrA@-0
%Z33\'7q]"7%afbH<%`b5%n"_uL6MSE/VN>%mS7)PZX[5i>mV43MVquJS'DV(e+0*]L:W+WP-:n&%80Wa9)rl,g9Mc*0Z,MU9@u9`
%im1OsEL?T3.<O68^WDEPP4EPukTUZrZ^u07m31.S!\.\$lqJZ^0D>R5G16/'m'M,X6:%>Y^D%(AC<Va,YATk(A79QN!-'DjAhpa>
%OW=H.V@CKG/n-5*-kXH_)c-AlE'tkdA#C48o[SHSi1F=3G_X)74EnlE*:=OM9,+l1$I#E"1:=JrPcQUs]L-BbUqR.%*[rANe"m1k
%]:^It.]riUq:Oe1Kj]2]X0=aEGqt\)Z$R$Y,!h)D0EnKKE;5:P/m2M<l&[n-`P2q#GbSZn@X$tGPOs1S/-D>tZcr@l0I3rpZ&n<@
%O>j\oeS%C00FCJC)a+6Wae"(J'ot!/Lh5WVe7IngJ>Ldn#MP4f*4R_/a8t?oq(*(R[HN'V83,7SOBssoHZ7(6)I\T39sB@;^.])-
%cBPfPhQG,^LGs>jqU,/%m>ZF`mR=2Op;dXVdR'h04:)_g-+iF#djU4d;1djq+T00,#j`%0+d-qG^,VBGAqS<27VR4Z^!U/N$^gF8
%)QX=O&2T1cmL]iK$oIbAKt#(D*`YIt"*r>\'2:)Q(,<"LNi3M9ipU:YNC_3rNr$9bN*s/:peS(1*Zu]F5XnQSJq3WeP$qWZ@D"o^
%^pt!d.]=4De-=!=#sSIW25Ob4G>u%&l%lr$UJQU\MXS<9j:'e]aR[p.8OTB>3e@]V@rg/a%cq*<70W]_faiY&,(F3W"1\0["(SRk
%Rrl[7N$Z105ZtO&Z@H%5qJ#Lb"]%8*(42PoFGepiV.'JpF1VRK@I`DEJaYq1!PCn/*#`@:'ii$to?1-gEHhgu#Sf/dZUkI8mhW0M
%_p.Q*&e+aG68$4dHr3aq.F,baRVel-J_X@]Q+6,de?@G.A1k*@kX`s9E!]3:#d\(g<kr#3aiL<]jt['s#P0&<i*Q"5,65_=1js<i
%8=lM0Lc>Y5LNnPkmBV)gKk:/^"TM(HbWDp4d)BH;!V9W]]a-@ZRN9V2,\tPVJNGa[?p["#([S9=T+n5pEZmgI+&CT&G7OZ;28^Z7
%i?[mED=Lpr<R;nJnd;pX@XM)YQS-FJVH*Db4ES*5fnUju+=]$71#7c!,EPBt_FSnOW(*4OQl"\5>lE,dp(C"bVsX7q?8O.&Z:A#5
%^XL^Hd(X)JP&nf]Hibkhl?Desl-/!STodfa^k@d>U1P#o[<&B"rX<FjP^$4U7rtDb)Rh3T0t@kV"!a\<QTCJO<7Y`kNn%;gT$]Bu
%*G!8M;5acK;$(KV4rscm8k%FeJHiHfaf;Er\-J`S7Qb"^Hb=@aPA@r(`f5(mi;;(H:R7Xqa@Dl9fWuH-/pN]_!+Ast>-^Gr(c;DO
%38ON08nqeEj8)%6i93rXYrda@oU=`)$t=c@VH8_W<2;H"g?'X>"^f\A:8idYqS_gsi\(#mTbh\:-$S!ce+BS@fGO_%[Y6/=RdY(`
%jI!kH4B'A13&sAYVfeR_+:6qt)KD[7*CrdVXK15;+\Sk2"CZHII2$r2%fAlP+\],ZcT;4fb)MBAF7GRSp"#j<P7K81dR&1YQ&U>R
%FS)fr3bm(1qq./N#f*.Ur,-n-'m'dY[?UPBBZfZh1rOLs9rEJGW(#d2b@\#k3.eFob\jYMZ/>o3rd84p3a?UZ<c$(?-&j\r?a4<J
%9RooRG2l)dO8e@d0#VHa6=l4OqGeY?=<"Gf6%s`P`J!tV4560b,?buca)hRa;=QL8KA<ncmRgN8Mf?\,^.XXbk,LZqnq>pdW2rmY
%c'!r,PB[$&WAJM9MQAcfbuDc#`UteZQC(b-?aVga9n?5&aYk+mD[#_V,E')C(SaiP;W,nO8nc5'd$ULG[.h7f=_B5tk[f[Lg3f5$
%/JhA<.idYBdN-8&akf$cQSrsp^-i?2P%Z2QN#0eLg]CW4OmlS9\YV;'m$]ca4rcij%oLGd+E$]=A4sL9j41Tun"BCg4odL^8;b/p
%!bJl_\XEUKP;C$>Z1O3?F3q<BX-Z=,]Ors%!%fV^PMnnR"_NqVH+XfOQq+GlS,:C`E&F;c_c]C6>;>c\F'eoYi5'Oq@_,X1:?CU/
%du-<+/EmcY:44Xdn:FGo#2kB#(4atJkqg7hMr(I[1:.f^bl?npZP4[?OSIXq]?aB<5n%4]NCT<FO]CNZ/VRclSg:[ZltR23_XOq!
%,ci`%@;(Ob@%B52-l1$W=^akO+Pe*=]*XB$21HD!^3Q?GAbD!lAWgO#:tS_?XjCpO!Dt;f4dr9V6$9]W+XhnV*43AH7(2ME>agat
%#Qhe"fs'Fmn!eQ*?A(YFao#;<])Xme7^qO>Pl=eas4XWQ<O9";mK<7qfjktG^-@oE6kBF2E%aQuU*,:d7.K/]WiN/WM\mb]m"X][
%3VT',X1PF5X1,-UE<pkKJI2G4/(59Eh^V1JTHmJP%JDtAC]HG.47CAq]!J5oGHOSAQ`B=DPdMHfmODL3;>$EW$Q5f/4DZZ(oNSp.
%!$H?ZGe8%g;OH#Y$R#8f_u`Tlbr5Y"n@!l5_ld*m(H64D^s(!qi>F:@oaLT&MFei*Ipn&`g(^<9V)AVMm[M`qP)dbM#4[qALF,c4
%Clp>$&>PJ`5VKN*1LUN;dL[DN,=^)4gd[)</p*RC:W<F.>$66BEFW807(]\?",$YH;\\j+&>]J1eU?BV[j9?O7+8%2RAr=36/b26
%6L2VL.;+G185JLS>,6<>!.?tjA)D\oYCK+ZQ%13C]^AL7+OQoXJjo9sH@/E,i:'>rHDQZ]d6pI'`er]b^Rda28-t_Uo6^,T,6kW\
%P$1&EK12,tWAX"4So<LsU-Zk9n_bR-69GkNZSrUsMl9)Y&durg"?DmEPV-??H@>;=b-ZkFSg!Ym%-JPIVY5FTpj$S'.b&U,2uG_1
%X:Ba=\^$^')/>6<V8f+>#WuYe#7rfd)H8DEl&$0([BjOpkFFTXRgBsj1P-QfO_'G.Ve'X`*06Fk%Tk,\j@qHugWiLcWa[6(eXMR)
%(:l9c*3gDX.5HO$H5?p,Q>'.(P;!>X.tTVI&BT2(S`)lu2?ZP=IR-N,G2J,%A6o01'/=jG5Ol7'`+^ht,[e;@#fg)-%U'mkXTVik
%:5/02aSg+#$r9Dif$k$2D>1'ZQU,8MhEB8'D1cA1E2H86!STl5'@l.e"k\:rl/B&f/8B8,!9)2hs4LgI&h%CK%!aeY%#D]-&(.;Y
%BVn@fDdc"RW\)*XXWOjH]Gsm.dmd`Pn0,"qQW.9^cP<<>ER9SSgu&+UkRa[M#Vi;'2r_:.2lTgCKb$.',p<f1[(NI&f2"nhO;71Y
%*qXp*>90,*=g)!gN_fWI4lg:rB^s^Hdde8+*B\_oRE>D;";(1CPTk>h<QPq7Qe`HTaWasU3@^]<i*Aca:ad%L't@YL(\'JkrJ3?O
%?F?+(kcW?/aGLI^l&U%;H`gGJa+eDl+Cm/IH<s"%]';k,)%9bn=C1D-#[o3N!r#7R'.PndAsY3Pou_%;et#)XX=6L0CT-)KS="#C
%GOJ4_+*Kb0]I76SG4m^&RsP;$r_OgE]E)TH<]$u'LL=W5&r,2*Isl>r'Q,*(Nh0!^\`kD08PM/:HH]mXN4+R^_:-pn,.([0V`MOS
%M7a)!K_-aVGg]S%),sK1J.%rWicPtoO#F&ZZt(kJmpr.Wg7Aq#L)!b@:8H;+8\3,Rf9hYac5\*/=DGjEZ`B*15S#GX4Z&Wn??L0,
%6F_=Pe1K*SMP_FG$&@0RPn.Y"HjIM_PEJ!a.s!n7^2^t<i>SB.#:3M\%8,*C_,3gJdt+0#Z9T?t<[(5:/[si3M'Ih7Mn?\QKn2[m
%oC\2#l+k@6.VT,^=h`"/@]6(8OH_*[O/sBrNBRSlk;7g,/FF*T92d-CpD5:ga)+'VgaL@GNbG):4QR)+&C#urE?4o#_;=?&6EBr2
%NEJeAi^6N_:,tm61qdTV^^Z42/i[<<dQ+Ctld8tCV#WA4:S_Z5pGGP=_3J)E*[H%i-hR\L5CK=tT">pkS@"@)>`g!&;Z2G)^p?J4
%p[:sq$Q)"."?HSn9e,W>PlkD9'sE1F>p8K>9H5-1QT(oLA0ikFd&+K[PoU'3<%HFjWF`8TicMs,lE41TJssE.?uF`.*UD!5dE=^i
%a=tC#H]5N6(DV]G>arbgq2SQ*VQ#_J'+$`'1#JGKp-^qG)!@Tn#paE1h-+@UEd;FP^@tDpHj4_Ke9;EgL]oSB^36cF+;VB(h?OP+
%r=12d\7-^U3#8VIgd_[gJp:XE5;cFcK^<bmYBOfn@Ws\YgKCf>ijiapH#LD&C@(*4M_%kNFKolY,#S!/>I]>8Q^7G&1J=#\"N5XC
%-YTt*O11n.aNdGnKm^VE#CXG_-uP/.S<,O7En-&I:e/d#_B`b+,jhX:">LdhJG=I]jp1R%=[[l_,HD5hl7b1dG,AS%50or>!!%#;
%/c^cc):CqK6$;,:`2Z/aKl+immFC97HYqsWG*BuY.U1\ZpL_DNK^A$@^@T0pP*d)7lqDFIUKd#L,IYQk6a(Xc6&<RJOrnau2`3'N
%C.9=--Kbn[?)AUC6U(h4j3W*hQBNi5^qKDXm^&)"HUG\/C.bYq5n?--=Ki!N`d'mOWmBJ%6#@RPSVsN+U6Bn!5\H!Ag!pH/"WHZ#
%E)1GU:d3bb3<>goC4:mrdZ2M.`.<b9h%!Uf"3@6gYBGiIC^?1ZS\N@mNOJ5,QEebOZhDMK!N:Gr6sHgAh+0&V_,7kP%OBol\-3M&
%Di2u##[<+:69%tq*O6]c$Ohm/CR6nt5/'Qqm92>k4bk4$TR?7h6WHLBMYgspZ2]3H9h:Xp!bJSAQ(i_(M<lmM"/EUKRbfn>PhQ81
%fKN#tOB]X[ML"TA"=c6[U!cK%e+uDLk028>C<VkWAE^MG(*0.'r(\S9q2At0c\+dG.:+KR@-S[o%tHKGB1'73]^Lm.mYAH2+>LSM
%eo]Td(j5LY?e+t;ZSU1s/+I))YP-s*MjU!X[ln0ObOCY_K$;'-!_HY(C7aq)DKYf1M1<6\^9.*DmUn0UJWZ%.,**nLSE`fW&E)$/
%2qbW\P#U;.fKaOsnn;Ik)7d1r*'q$)3Wp"/;9Y*BS]Tj^_Tnm4#P0qpf%Z!aRHI;UmV]bp#*r5ZAh;+Br1ZK6_BRfko?FCfnYlrA
%"cBaYY:H3;T\M)Xrd/h\?0[=Hr6-V:8=F`Zg+;M<dXg*jb%l#XA(>-'eDg"h+*%RHE3sMG-3t)_1Acs@Sj9jXR#nr]nS/PG<apf;
%:sK]rcNL5!M;LHW>Oh0VJ1FPUQ[D2[Ds:I/q2^Gm;2TWThm7&]\Rip(_`+WbX!bRMY9.=k:f&DMd*L$bJfpcGhSlNTQB[E5&V'To
%m1`dF7,=?#_G8U2j.k$;m:^WdSX*R0kT*+:6og-P?RCu*WZ(@/j3]Gh<P7:DaT-u0>O!E8b&@Mu-KV4HZ@tfdfjD]^6G(E;G@AOg
%pi?#?adg=I.L=4:VK3MYT%A[jT'4]IW=3.Q-umA)74I'I@J[]+;p_>6p0'Y.h?,2KhFEqE-*RC(Hh>*[\kr=0pru=q,XaSD/DtH/
%&h7"cW]g\YBm=`jm?_-p]b)aM9!ne:9Pb>`1BBQrl4`rP9=:)UH;>NK!<'4QA?:,7-6qTS1?rXW/k2n.pTf0"&c1XY!d*j$R(nha
%M]%K9"(-KQ<5Fm9>)=MQo0_*uIS`e)^8"iUZQor9JYi3#,_:^JjUlhOqRo9>$Yq2$CtE21,.M4.8Q>5Id3slqbf1#rT)Ob#Kb?s`
%&rdDJ@qI8heN2U+Xi$our8nrr<*7L5ob(8p!jFu@7LHSQhZQYjk](/Z=ZV">c_0TO`aDN56V%/T"0]"0FE;,C=.K$_(aXoGFSI!o
%<.;Z17BI1^:L+t/BG9G!DP\;6I=`7s3R:^ca;dU;2LRukaIM1be8:++<FEJe\8M.8Lt]lP/,O0t^f88hH1ksY_+J<>'"eOj&phO)
%0msi+V;4T1`nJ/]WEgG[f=3aKktU(>JD4278OkB$!/[8Z`QM\eq\0XuD:K8D6/MM89o;Of:9Y4V9-.X`TM;KkL9/;9'AgH<;0btA
%]9n-L,\(gTJC)MUCK0W#e?MSP<0uS56eKmCT"Lsbjce[g+fF]J_N$nJ>\O.^9CJ<OOhd><d)WlO)=3tJ'?HXV!hHduiQ5bLUkp1o
%AooaVLSm"Jc)%iH&29fIcIY=-='lTC5m#,)IEN^SV&995c7BX^S\RAalda^0417NpUCb=Y4.$G8G(@;QGOa<_qn2+mQT?3IKG\Q2
%*rE8I7s)"*Yrr6@UNa2oAt51W&i;iuTR=MKQ9R<a'g>l,i%uFY[W7`&=$8SQjL0P$K&')08LRBephQC:/oB)=-mV1#VWR4:YE,+h
%,<Ie(1`Y@`;5W4!NF(:#&-;f1C'XtkaO=]*^;ooV5,D=q!E"sPnlS)(E/X'f@>,g*/`Gc/\](T@s6@A>Np#PA2Yo>RYKc\XCYb"!
%Q`m=.orlt7L(^NM0Y*MfQ-U3'<Tq-1Ga8[DJg=o?*'746#GRmR8@Wc=ciK/L8OCp#W.oc;8pXSRHMRka,gbKP%C9`*ZK7]2K`#22
%8'&$D&aX-9_`oLWmcXEWlt6S^[eQN9A(naG$&Oc[%/oAQ%GK6dl?Bh2fUZD7UH*PV#gYkgbMJlfruM&aYk4!%68OSD!e^O5ci<:n
%r->YSOg+6^M=L;gEhGYimr)$ZnB9_55CEG.+2<+$cOV,4qW\snnosQ;qsaKDn,N<P%j+%9m(4@ss8BhOn%\lDo`lT<qY]Q8mll3q
%nS^X>r:%[dJ,8+G(r:^Es7#-:?iTiOT7?Pf*hb`(~>
%AI9_PrivateDataEnd
